# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

exports_files(["LICENSE"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "tracing",
    visibility = ["//:__subpackages__"],
    deps = ["@perfetto//:libperfetto_c"],
)

cc_binary(
    name = "webrtc_lib_link_test",
    testonly = 1,
    srcs = ["webrtc_lib_link_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = ["//:webrtc"],
)

cc_test(
    name = "rtc_unittests",
    testonly = 1,
    data = ["//resources:reference_video_640x360_30fps.y4m"],
    shard_count = 6,
    tags = ["requires-net:external"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:compile_all_headers",
        "//api:rtc_api_unittests",
        "//api/audio/test:audio_api_unittests",
        "//api/audio_codecs/test:audio_codecs_api_unittests",
        "//api/numerics:numerics_unittests",
        "//api/task_queue:pending_task_safety_flag_unittests",
        # "//api/test/metrics:metrics_unittests",
        "//api/transport:stun_unittest",
        "//api/video/test:rtc_api_video_unittests",
        # "//api/video_codecs:libaom_av1_encoder_factory_test",
        "//api/video_codecs:simple_encoder_wrapper_unittests",
        "//api/video_codecs/test:video_codecs_api_unittests",
        "//api/voip:compile_all_headers",
        "//call:fake_network_pipe_unittests",
        "//logging:rtc_event_log_tests",
        "//p2p:libstunprober_unittests",
        "//p2p:rtc_p2p_unittests",
        "//rtc_base:async_dns_resolver_unittests",
        "//rtc_base:async_packet_socket_unittest",
        "//rtc_base:callback_list_unittests",
        "//rtc_base:rtc_base_approved_unittests",
        "//rtc_base:rtc_base_unittests",
        "//rtc_base:rtc_json_unittests",
        "//rtc_base:rtc_numerics_unittests",
        "//rtc_base:rtc_operations_chain_unittests",
        "//rtc_base:rtc_task_queue_unittests",
        "//rtc_base:sigslot_unittest",
        "//rtc_base:task_queue_stdlib_unittest",
        "//rtc_base:untyped_function_unittest",
        "//rtc_base:weak_ptr_unittests",
        "//rtc_base/experiments:experiments_unittests",
        "//rtc_base/system:file_wrapper_unittests",
        "//rtc_base/task_utils:repeating_task_unittests",
        "//rtc_base/units:units_unittests",
        "//sdk:sdk_tests",
        "//test:rtp_test_utils",
        "//test:test_main",
        "//test/network:network_emulation_unittests",
    ],
)

cc_test(
    name = "video_engine_tests",
    timeout = "long",
    testonly = 1,
    data = [
        "//resources:difficult_photo_1850_1110.yuv",
        "//resources:foreman_cif_short.yuv",
        "//resources:photo_1850_1110.yuv",
        "//resources:presentation_1850_1110.yuv",
        "//resources:voice_engine/audio_long16.pcm",
        "//resources:web_screenshot_1850_1110.yuv",
    ],
    shard_count = 4,
    visibility = ["//:__subpackages__"],
    deps = [
        "//audio:audio_tests",
        "//call:call_tests",
        "//call/adaptation:resource_adaptation_tests",
        "//test:test_common",
        "//test:test_main",
        "//test:video_test_common",
        "//video:video_tests",
        "//video/adaptation:video_adaptation_tests",
    ],
)

cc_test(
    name = "webrtc_perf_tests",
    testonly = 1,
    data = [
        "//resources:ConferenceMotion_1280_720_50.yuv",
        "//resources:audio_coding/speech_mono_16kHz.pcm",
        "//resources:audio_coding/speech_mono_32_48kHz.pcm",
        "//resources:audio_coding/testfile32kHz.pcm",
        "//resources:difficult_photo_1850_1110.yuv",
        "//resources:foreman_cif.yuv",
        "//resources:paris_qcif.yuv",
        "//resources:photo_1850_1110.yuv",
        "//resources:presentation_1850_1110.yuv",
        "//resources:voice_engine/audio_long16.pcm",
        "//resources:web_screenshot_1850_1110.yuv",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//call:call_perf_tests",
        "//modules/audio_coding:audio_coding_perf_tests",
        "//modules/audio_processing:audio_processing_perf_tests",
        "//pc:peerconnection_perf_tests",
        "//test:test_main",
        "//video:video_full_stack_tests",
        "//video:video_pc_full_stack_tests",
    ],
)

cc_test(
    name = "webrtc_nonparallel_tests",
    testonly = 1,
    visibility = ["//:__subpackages__"],
    deps = ["//rtc_base:rtc_base_nonparallel_tests"],
)

cc_test(
    name = "voip_unittests",
    testonly = 1,
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/voip:compile_all_headers",
        "//api/voip:voip_engine_factory_unittests",
        "//audio/voip/test:audio_channel_unittests",
        "//audio/voip/test:audio_egress_unittests",
        "//audio/voip/test:audio_ingress_unittests",
        "//audio/voip/test:voip_core_unittests",
        "//test:test_main",
    ],
)

cc_library(
    name = "dcsctp",
    visibility = ["//:__pkg__"],
    deps = [
        "//net/dcsctp/public:factory",
        "//net/dcsctp/public:socket",
        "//net/dcsctp/public:types",
        "//net/dcsctp/socket:dcsctp_socket",
        "//net/dcsctp/timer:task_queue_timeout",
    ],
)

cc_library(
    name = "poison_audio_codecs",
    visibility = ["//:__subpackages__"],
)

cc_library(
    name = "poison_default_echo_detector",
    visibility = ["//:__subpackages__"],
)

cc_library(
    name = "poison_environment_construction",
    visibility = ["//:__subpackages__"],
)

cc_library(
    name = "poison_software_video_codecs",
    visibility = ["//:__subpackages__"],
)
