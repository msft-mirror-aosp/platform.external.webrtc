import sys
import re


def convert_gni_to_cmake(build_gni, cmake):
  """Converts a build.gni file to a cmake file."""

  target = r"(.*) =.*"
  entry = r'.*"(.*)".*'

  active = ""
  entries = []
  targets = {}

  with open(build_gni, "r", encoding="utf-8") as bld:
    # We basically parse target_name = [ "file1", "file2" ]
    for line in bld:
      match = re.match(target, line)
      if match:
        if entries:
          targets[active] = entries
        active = match.group(1)
        entries = []

      match = re.match(entry, line)
      if match:
        # Patch up the source location for the emulator build system
        entries.append(
            match.group(1).replace("//third_party/libaom/source", "${AOM_ROOT}")
        )

    if entries:
      targets[active] = entries

  # We now have a set of targets --> files, just turn this into a file
  with open(cmake, "w", encoding="utf-8") as bld:
    bld.writelines([
        f"## AUTOGENERATED BY RUNNING  {' '.join(sys.argv)}",
        "## DO NOT EDIT!\n\n",
    ])

    for library, file_set in targets.items():
      items = " ".join(file_set)
      bld.write(f"set({library} {items})\n")


if __name__ == "__main__":
  convert_gni_to_cmake(sys.argv[1], sys.argv[2])
