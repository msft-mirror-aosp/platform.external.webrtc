# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "video_analyzer",
    testonly = 1,
    visibility = ["//:__subpackages__"],
    deps = [
        "//test/pc/e2e/analyzer/video:analyzing_video_sink",
        "//test/pc/e2e/analyzer/video:analyzing_video_sinks_helper",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_internal",
        "//test/pc/e2e/analyzer/video:encoded_image_data_injector_api",
        "//test/pc/e2e/analyzer/video:example_video_quality_analyzer",
        "//test/pc/e2e/analyzer/video:multi_reader_queue",
        "//test/pc/e2e/analyzer/video:quality_analyzing_video_decoder",
        "//test/pc/e2e/analyzer/video:quality_analyzing_video_encoder",
        "//test/pc/e2e/analyzer/video:simulcast_dummy_buffer_helper",
        "//test/pc/e2e/analyzer/video:single_process_encoded_image_data_injector",
        "//test/pc/e2e/analyzer/video:video_dumping",
        "//test/pc/e2e/analyzer/video:video_frame_tracking_id_injector",
        "//test/pc/e2e/analyzer/video:video_quality_analyzer_injection_helper",
        "//test/pc/e2e/analyzer/video:video_quality_metrics_reporter",
    ],
)

cc_library(
    name = "video_analyzer_unittests",
    testonly = 1,
    visibility = ["//:__subpackages__"],
    deps = [
        "//test/pc/e2e/analyzer/video:analyzing_video_sink_test",
        "//test/pc/e2e/analyzer/video:analyzing_video_sinks_helper_test",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_frames_comparator_test",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_metric_names_test",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_stream_state_test",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_test",
        "//test/pc/e2e/analyzer/video:multi_reader_queue_test",
        "//test/pc/e2e/analyzer/video:names_collection_test",
        "//test/pc/e2e/analyzer/video:simulcast_dummy_buffer_helper_test",
        "//test/pc/e2e/analyzer/video:single_process_encoded_image_data_injector_unittest",
        "//test/pc/e2e/analyzer/video:video_dumping_test",
        "//test/pc/e2e/analyzer/video:video_frame_tracking_id_injector_unittest",
    ],
)

cc_library(
    name = "video_dumping",
    testonly = 1,
    srcs = ["video_dumping.cc"],
    hdrs = ["video_dumping.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api/test/video:video_frame_writer",
        "//api/video:video_frame",
        "//rtc_base:logging",
        "//system_wrappers",
        "//test:video_test_support",
    ],
)

cc_library(
    name = "encoded_image_data_injector_api",
    testonly = 1,
    hdrs = ["encoded_image_data_injector.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api/video:encoded_image",
    ],
)

cc_library(
    name = "single_process_encoded_image_data_injector",
    testonly = 1,
    srcs = ["single_process_encoded_image_data_injector.cc"],
    hdrs = ["single_process_encoded_image_data_injector.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "//api/video:encoded_image",
        "//rtc_base:checks",
        "//rtc_base/synchronization:mutex",
        "//test/pc/e2e/analyzer/video:encoded_image_data_injector_api",
    ],
)

cc_library(
    name = "video_frame_tracking_id_injector",
    testonly = 1,
    srcs = ["video_frame_tracking_id_injector.cc"],
    hdrs = ["video_frame_tracking_id_injector.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "//api/video:encoded_image",
        "//rtc_base:checks",
        "//test/pc/e2e/analyzer/video:encoded_image_data_injector_api",
    ],
)

cc_library(
    name = "simulcast_dummy_buffer_helper",
    testonly = 1,
    srcs = ["simulcast_dummy_buffer_helper.cc"],
    hdrs = ["simulcast_dummy_buffer_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = ["//api/video:video_frame"],
)

cc_library(
    name = "quality_analyzing_video_decoder",
    testonly = 1,
    srcs = ["quality_analyzing_video_decoder.cc"],
    hdrs = ["quality_analyzing_video_decoder.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:video_quality_analyzer_api",
        "//api/environment",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//api/video_codecs:video_codecs_api",
        "//modules/video_coding:video_codec_interface",
        "//rtc_base:logging",
        "//rtc_base/synchronization:mutex",
        "//test/pc/e2e/analyzer/video:encoded_image_data_injector_api",
        "//test/pc/e2e/analyzer/video:simulcast_dummy_buffer_helper",
    ],
)

cc_library(
    name = "quality_analyzing_video_encoder",
    testonly = 1,
    srcs = ["quality_analyzing_video_encoder.cc"],
    hdrs = ["quality_analyzing_video_encoder.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:video_quality_analyzer_api",
        "//api/environment",
        "//api/test/pclf:media_configuration",
        "//api/video:video_frame",
        "//api/video_codecs:video_codecs_api",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding/svc:scalability_mode_util",
        "//rtc_base:logging",
        "//rtc_base/synchronization:mutex",
        "//test/pc/e2e/analyzer/video:encoded_image_data_injector_api",
    ],
)

cc_library(
    name = "analyzing_video_sinks_helper",
    testonly = 1,
    srcs = ["analyzing_video_sinks_helper.cc"],
    hdrs = ["analyzing_video_sinks_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api/test/pclf:media_configuration",
        "//api/test/video:video_frame_writer",
        "//rtc_base:macromagic",
        "//rtc_base/synchronization:mutex",
    ],
)

cc_library(
    name = "example_video_quality_analyzer",
    testonly = 1,
    srcs = ["example_video_quality_analyzer.cc"],
    hdrs = ["example_video_quality_analyzer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//api:video_quality_analyzer_api",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//rtc_base:logging",
        "//rtc_base/synchronization:mutex",
    ],
)

cc_library(
    name = "default_video_quality_analyzer_internal",
    testonly = 1,
    srcs = [
        "default_video_quality_analyzer_cpu_measurer.cc",
        "default_video_quality_analyzer_frame_in_flight.cc",
        "default_video_quality_analyzer_frames_comparator.cc",
        "default_video_quality_analyzer_internal_shared_objects.cc",
        "default_video_quality_analyzer_stream_state.cc",
        "names_collection.cc",
    ],
    hdrs = [
        "default_video_quality_analyzer_cpu_measurer.h",
        "default_video_quality_analyzer_frame_in_flight.h",
        "default_video_quality_analyzer_frames_comparator.h",
        "default_video_quality_analyzer_internal_shared_objects.h",
        "default_video_quality_analyzer_stream_state.h",
        "names_collection.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//test/pc/e2e/analyzer/video:__pkg__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:scoped_refptr",
        "//api/numerics",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:video_frame",
        "//api/video:video_frame_type",
        "//common_video",
        "//rtc_base:checks",
        "//rtc_base:platform_thread",
        "//rtc_base:rtc_base_tests_utils",
        "//rtc_base:rtc_event",
        "//rtc_base:stringutils",
        "//rtc_base:timeutils",
        "//rtc_base/synchronization:mutex",
        "//rtc_tools:video_quality_analysis",
        "//system_wrappers",
        "//test/pc/e2e:metric_metadata_keys",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_shared",
        "//test/pc/e2e/analyzer/video:multi_reader_queue",
        "//test/pc/e2e/analyzer/video/dvqa:pausable_state",
    ],
)

cc_library(
    name = "multi_reader_queue",
    testonly = 1,
    hdrs = ["multi_reader_queue.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "video_quality_metrics_reporter",
    testonly = 1,
    srcs = ["video_quality_metrics_reporter.cc"],
    hdrs = ["video_quality_metrics_reporter.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:peer_connection_quality_test_fixture_api",
        "//api:rtc_stats_api",
        "//api:track_id_stream_info_map",
        "//api/numerics",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base/synchronization:mutex",
        "//test/pc/e2e:metric_metadata_keys",
    ],
)

cc_library(
    name = "default_video_quality_analyzer",
    testonly = 1,
    srcs = ["default_video_quality_analyzer.cc"],
    hdrs = ["default_video_quality_analyzer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:video_quality_analyzer_api",
        "//api/numerics",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:stringutils",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers",
        "//test/pc/e2e:metric_metadata_keys",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_internal",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_shared",
        "//test/pc/e2e/analyzer/video/dvqa:frames_storage",
    ],
)

cc_library(
    name = "default_video_quality_analyzer_shared",
    testonly = 1,
    srcs = ["default_video_quality_analyzer_shared_objects.cc"],
    hdrs = ["default_video_quality_analyzer_shared_objects.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api/numerics",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base:stringutils",
    ],
)

cc_library(
    name = "analyzing_video_sink",
    testonly = 1,
    srcs = ["analyzing_video_sink.cc"],
    hdrs = ["analyzing_video_sink.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:video_quality_analyzer_api",
        "//api/numerics",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/test/pclf:media_configuration",
        "//api/test/video:video_frame_writer",
        "//api/units:timestamp",
        "//api/video:video_frame",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers",
        "//test:fixed_fps_video_frame_writer_adapter",
        "//test:test_renderer",
        "//test:test_renderer_generic",
        "//test/pc/e2e:metric_metadata_keys",
        "//test/pc/e2e/analyzer/video:analyzing_video_sinks_helper",
        "//test/pc/e2e/analyzer/video:simulcast_dummy_buffer_helper",
        "//test/pc/e2e/analyzer/video:video_dumping",
    ] + platform_select(
        arm64 = ["//test:test_renderer_objc"],
        linux = [],
        windows = [],
    ),
)

cc_library(
    name = "video_quality_analyzer_injection_helper",
    testonly = 1,
    srcs = ["video_quality_analyzer_injection_helper.cc"],
    hdrs = ["video_quality_analyzer_injection_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "//api:array_view",
        "//api:stats_observer_interface",
        "//api:video_quality_analyzer_api",
        "//api/test/pclf:media_configuration",
        "//api/video:video_frame",
        "//api/video_codecs:video_codecs_api",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:stringutils",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers",
        "//test:fixed_fps_video_frame_writer_adapter",
        "//test:test_renderer",
        "//test:test_renderer_generic",
        "//test:test_video_capturer",
        "//test:video_test_common",
        "//test:video_test_support",
        "//test/pc/e2e/analyzer/video:analyzing_video_sink",
        "//test/pc/e2e/analyzer/video:analyzing_video_sinks_helper",
        "//test/pc/e2e/analyzer/video:encoded_image_data_injector_api",
        "//test/pc/e2e/analyzer/video:quality_analyzing_video_decoder",
        "//test/pc/e2e/analyzer/video:quality_analyzing_video_encoder",
        "//test/pc/e2e/analyzer/video:simulcast_dummy_buffer_helper",
        "//test/pc/e2e/analyzer/video:video_dumping",
    ] + platform_select(
        arm64 = ["//test:test_renderer_objc"],
        linux = [],
        windows = [],
    ),
)

cc_library(
    name = "simulcast_dummy_buffer_helper_test",
    testonly = 1,
    srcs = ["simulcast_dummy_buffer_helper_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/video:video_frame",
        "//rtc_base:random",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:simulcast_dummy_buffer_helper",
    ],
)

cc_library(
    name = "analyzing_video_sink_test",
    testonly = 1,
    srcs = ["analyzing_video_sink_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:create_frame_generator",
        "//api:frame_generator_api",
        "//api:scoped_refptr",
        "//api/test/pclf:media_configuration",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:video_frame",
        "//common_video",
        "//rtc_base:timeutils",
        "//system_wrappers",
        "//test:fileutils",
        "//test:test_support",
        "//test:video_test_support",
        "//test/pc/e2e/analyzer/video:analyzing_video_sink",
        "//test/pc/e2e/analyzer/video:example_video_quality_analyzer",
        "//test/time_controller",
    ],
)

cc_library(
    name = "analyzing_video_sinks_helper_test",
    testonly = 1,
    srcs = ["analyzing_video_sinks_helper_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api/test/pclf:media_configuration",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:analyzing_video_sinks_helper",
    ],
)

cc_library(
    name = "default_video_quality_analyzer_frames_comparator_test",
    testonly = 1,
    srcs = ["default_video_quality_analyzer_frames_comparator_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_frame_generator",
        "//api/units:timestamp",
        "//rtc_base:stringutils",
        "//system_wrappers",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_internal",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_shared",
    ],
)

cc_library(
    name = "names_collection_test",
    testonly = 1,
    srcs = ["names_collection_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_internal",
    ],
)

cc_library(
    name = "multi_reader_queue_test",
    testonly = 1,
    srcs = ["multi_reader_queue_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:multi_reader_queue",
    ],
)

cc_library(
    name = "default_video_quality_analyzer_stream_state_test",
    testonly = 1,
    srcs = ["default_video_quality_analyzer_stream_state_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api/units:timestamp",
        "//system_wrappers",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_internal",
    ],
)

cc_library(
    name = "default_video_quality_analyzer_test",
    testonly = 1,
    srcs = ["default_video_quality_analyzer_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_frame_generator",
        "//api:rtp_packet_info",
        "//api:time_controller",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//common_video",
        "//rtc_base:stringutils",
        "//rtc_tools:video_quality_analysis",
        "//system_wrappers",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_shared",
        "//test/time_controller",
    ],
)

cc_library(
    name = "default_video_quality_analyzer_metric_names_test",
    testonly = 1,
    srcs = ["default_video_quality_analyzer_metric_names_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_frame_generator",
        "//api:rtp_packet_info",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/test/metrics:stdout_metrics_exporter",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//common_video",
        "//rtc_tools:video_quality_analysis",
        "//system_wrappers",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer",
    ],
)

cc_library(
    name = "video_dumping_test",
    testonly = 1,
    srcs = ["video_dumping_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:scoped_refptr",
        "//api/video:video_frame",
        "//rtc_base:random",
        "//test:fileutils",
        "//test:test_support",
        "//test:video_test_support",
        "//test/pc/e2e/analyzer/video:video_dumping",
    ],
)

cc_library(
    name = "single_process_encoded_image_data_injector_unittest",
    testonly = 1,
    srcs = ["single_process_encoded_image_data_injector_unittest.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/video:encoded_image",
        "//rtc_base:buffer",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:single_process_encoded_image_data_injector",
    ],
)

cc_library(
    name = "video_frame_tracking_id_injector_unittest",
    testonly = 1,
    srcs = ["video_frame_tracking_id_injector_unittest.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/video:encoded_image",
        "//rtc_base:buffer",
        "//test:test_support",
        "//test/pc/e2e/analyzer/video:video_frame_tracking_id_injector",
    ],
)
