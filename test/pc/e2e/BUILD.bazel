# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "metric_metadata_keys",
    testonly = 1,
    hdrs = ["metric_metadata_keys.h"],
    visibility = ["//:__subpackages__"],
)

cc_library(
    name = "e2e",
    testonly = 1,
    visibility = ["//:__subpackages__"],
    deps = [
        "//test/pc/e2e:metric_metadata_keys",
        "//test/pc/e2e:peerconnection_quality_test",
        "//test/pc/e2e:test_peer",
    ],
)

cc_library(
    name = "e2e_unittests",
    testonly = 1,
    data = [
        "//resources:pc_quality_smoke_test_alice_source.wav",
        "//resources:pc_quality_smoke_test_bob_source.wav",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//test/pc/e2e:peer_connection_e2e_smoke_test",
        "//test/pc/e2e:peer_connection_quality_test_metric_names_test",
        "//test/pc/e2e:peer_connection_quality_test_test",
        "//test/pc/e2e:stats_based_network_quality_metrics_reporter_test",
        "//test/pc/e2e:stats_poller_test",
    ],
)

cc_library(
    name = "echo_emulation",
    testonly = 1,
    srcs = ["echo/echo_emulation.cc"],
    hdrs = ["echo/echo_emulation.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/test/pclf:media_configuration",
        "//modules/audio_device:test_audio_device_module",
        "//rtc_base:swap_queue",
    ],
)

cc_library(
    name = "test_peer",
    testonly = 1,
    srcs = ["test_peer.cc"],
    hdrs = ["test_peer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:variant",
        "//api:dtmf_sender_interface",
        "//api:frame_generator_api",
        "//api:function_view",
        "//api:libjingle_peerconnection_api",
        "//api:rtp_sender_interface",
        "//api:scoped_refptr",
        "//api:sequence_checker",
        "//api/audio:audio_processing",
        "//api/task_queue:pending_task_safety_flag",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//pc:peerconnection_wrapper",
        "//rtc_base:logging",
        "//rtc_base:refcount",
        "//rtc_base/synchronization:mutex",
        "//test/pc/e2e:stats_provider",
    ],
)

cc_library(
    name = "test_peer_factory",
    testonly = 1,
    srcs = ["test_peer_factory.cc"],
    hdrs = ["test_peer_factory.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "//api:create_time_controller",
        "//api:enable_media_with_defaults",
        "//api:time_controller",
        "//api/rtc_event_log:rtc_event_log_factory",
        "//api/task_queue",
        "//api/task_queue:default_task_queue_factory",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//api/transport:field_trial_based_config",
        "//api/video_codecs:builtin_video_decoder_factory",
        "//api/video_codecs:builtin_video_encoder_factory",
        "//modules/audio_device:test_audio_device_module",
        "//modules/audio_processing/aec_dump",
        "//p2p:basic_port_allocator",
        "//p2p:rtc_p2p",
        "//rtc_base:threading",
        "//test:copy_to_file_audio_capturer",
        "//test/pc/e2e:echo_emulation",
        "//test/pc/e2e:test_peer",
        "//test/pc/e2e/analyzer/video:quality_analyzing_video_encoder",
        "//test/pc/e2e/analyzer/video:video_quality_analyzer_injection_helper",
    ],
)

cc_library(
    name = "test_video_capturer_video_track_source",
    testonly = 1,
    hdrs = ["media/test_video_capturer_video_track_source.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:sequence_checker",
        "//api/test/video:test_video_track_source",
        "//api/video:video_frame",
        "//test:test_video_capturer",
    ],
)

cc_library(
    name = "media_helper",
    testonly = 1,
    srcs = ["media/media_helper.cc"],
    hdrs = ["media/media_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:variant",
        "//api:create_frame_generator",
        "//api:frame_generator_api",
        "//api:media_stream_interface",
        "//api:sequence_checker",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:peer_configurer",
        "//api/test/video:test_video_track_source",
        "//api/video:video_frame",
        "//pc:session_description",
        "//pc:video_track_source",
        "//test:fileutils",
        "//test:frame_generator_capturer",
        "//test:platform_video_capturer",
        "//test/pc/e2e:test_peer",
        "//test/pc/e2e:test_video_capturer_video_track_source",
        "//test/pc/e2e/analyzer/video:video_quality_analyzer_injection_helper",
    ],
)

cc_library(
    name = "peer_params_preprocessor",
    testonly = 1,
    srcs = ["peer_params_preprocessor.cc"],
    hdrs = ["peer_params_preprocessor.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:peer_network_dependencies",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//modules/video_coding/svc:scalability_mode_util",
        "//modules/video_coding/svc:scalability_structures",
        "//rtc_base:macromagic",
        "//test:fileutils",
    ],
)

cc_library(
    name = "test_activities_executor",
    testonly = 1,
    srcs = ["test_activities_executor.cc"],
    hdrs = ["test_activities_executor.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/types:optional",
        "//api/task_queue",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base:criticalsection",
        "//rtc_base:logging",
        "//rtc_base:task_queue_for_test",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/task_utils:repeating_task",
        "//system_wrappers",
    ],
)

cc_library(
    name = "peerconnection_quality_test",
    testonly = 1,
    srcs = ["peer_connection_quality_test.cc"],
    hdrs = ["peer_connection_quality_test.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/strings",
        "//api:audio_quality_analyzer_api",
        "//api:dtmf_sender_interface",
        "//api:libjingle_peerconnection_api",
        "//api:media_stream_interface",
        "//api:peer_connection_quality_test_fixture_api",
        "//api:rtc_event_log_output_file",
        "//api:rtp_sender_interface",
        "//api:scoped_refptr",
        "//api:time_controller",
        "//api:video_quality_analyzer_api",
        "//api/rtc_event_log",
        "//api/task_queue",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//pc:pc_test_utils",
        "//pc:sdp_utils",
        "//rtc_base:gunit_helpers",
        "//rtc_base:macromagic",
        "//rtc_base:safe_conversions",
        "//rtc_base:stringutils",
        "//rtc_base:task_queue_for_test",
        "//rtc_base:threading",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers",
        "//system_wrappers:field_trial",
        "//test:field_trial",
        "//test:fileutils",
        "//test:perf_test",
        "//test:test_flags",
        "//test/pc/e2e:analyzer_helper",
        "//test/pc/e2e:cross_media_metrics_reporter",
        "//test/pc/e2e:default_audio_quality_analyzer",
        "//test/pc/e2e:media_helper",
        "//test/pc/e2e:metric_metadata_keys",
        "//test/pc/e2e:peer_params_preprocessor",
        "//test/pc/e2e:sdp_changer",
        "//test/pc/e2e:stats_poller",
        "//test/pc/e2e:test_activities_executor",
        "//test/pc/e2e:test_peer",
        "//test/pc/e2e:test_peer_factory",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer",
        "//test/pc/e2e/analyzer/video:single_process_encoded_image_data_injector",
        "//test/pc/e2e/analyzer/video:video_frame_tracking_id_injector",
        "//test/pc/e2e/analyzer/video:video_quality_analyzer_injection_helper",
        "//test/pc/e2e/analyzer/video:video_quality_metrics_reporter",
    ],
)

cc_library(
    name = "peer_connection_e2e_smoke_test",
    testonly = 1,
    srcs = ["peer_connection_e2e_smoke_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = [
        "//resources:pc_quality_smoke_test_alice_source.wav",
        "//resources:pc_quality_smoke_test_bob_source.wav",
    ],
    defines = [
        "HAVE_WEBRTC_VIDEO",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_network_emulation_manager",
        "//api:create_peer_connection_quality_test_frame_generator",
        "//api:create_peerconnection_quality_test_fixture",
        "//api:dtmf_sender_interface",
        "//api:libjingle_peerconnection_api",
        "//api:media_stream_interface",
        "//api:network_emulation_manager_api",
        "//api:peer_connection_quality_test_fixture_api",
        "//api:rtp_sender_interface",
        "//api:scoped_refptr",
        "//api:simulated_network_api",
        "//api/audio_codecs:builtin_audio_decoder_factory",
        "//api/audio_codecs:builtin_audio_encoder_factory",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//api/video_codecs:builtin_video_decoder_factory",
        "//api/video_codecs:builtin_video_encoder_factory",
        "//media:rtc_audio_video",
        "//modules/audio_device:audio_device_impl",
        "//p2p:rtc_p2p",
        "//pc:pc_test_utils",
        "//pc:peerconnection_wrapper",
        "//rtc_base:gunit_helpers",
        "//rtc_base:logging",
        "//rtc_base:rtc_event",
        "//system_wrappers:field_trial",
        "//test:field_trial",
        "//test:fileutils",
        "//test:test_support",
        "//test/network:simulated_network",
        "//test/pc/e2e:default_audio_quality_analyzer",
        "//test/pc/e2e:network_quality_metrics_reporter",
        "//test/pc/e2e:stats_based_network_quality_metrics_reporter",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer",
        "//test/pc/e2e/analyzer/video:default_video_quality_analyzer_shared",
    ] + platform_select(
        arm64 = ["//modules/video_coding:objc_codec_factory_helper"],
        linux = [],
        windows = [],
    ),
)

cc_library(
    name = "peer_connection_quality_test_metric_names_test",
    testonly = 1,
    srcs = ["peer_connection_quality_test_metric_names_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_network_emulation_manager",
        "//api:create_peer_connection_quality_test_frame_generator",
        "//api:network_emulation_manager_api",
        "//api:peer_connection_quality_test_fixture_api",
        "//api/test/metrics:metrics_logger",
        "//api/test/metrics:stdout_metrics_exporter",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//api/units:time_delta",
        "//test:test_support",
        "//test/pc/e2e:metric_metadata_keys",
        "//test/pc/e2e:network_quality_metrics_reporter",
        "//test/pc/e2e:peerconnection_quality_test",
        "//test/pc/e2e:stats_based_network_quality_metrics_reporter",
    ],
)

cc_library(
    name = "stats_based_network_quality_metrics_reporter_test",
    testonly = 1,
    srcs = ["stats_based_network_quality_metrics_reporter_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:create_network_emulation_manager",
        "//api:create_peer_connection_quality_test_frame_generator",
        "//api:network_emulation_manager_api",
        "//api:peer_connection_quality_test_fixture_api",
        "//api/test/metrics:metrics_logger",
        "//api/test/metrics:stdout_metrics_exporter",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//api/units:time_delta",
        "//test:test_support",
        "//test/pc/e2e:metric_metadata_keys",
        "//test/pc/e2e:peerconnection_quality_test",
        "//test/pc/e2e:stats_based_network_quality_metrics_reporter",
    ],
)

cc_library(
    name = "peer_connection_quality_test_test",
    testonly = 1,
    srcs = ["peer_connection_quality_test_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_network_emulation_manager",
        "//api:network_emulation_manager_api",
        "//api:peer_connection_quality_test_fixture_api",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/test/pclf:media_configuration",
        "//api/test/pclf:media_quality_test_params",
        "//api/test/pclf:peer_configurer",
        "//api/units:time_delta",
        "//rtc_base:timeutils",
        "//test:fileutils",
        "//test:test_support",
        "//test:video_test_support",
        "//test/pc/e2e:peerconnection_quality_test",
    ],
)

cc_library(
    name = "stats_provider",
    testonly = 1,
    hdrs = ["stats_provider.h"],
    visibility = ["//:__subpackages__"],
    deps = ["//api:rtc_stats_api"],
)

cc_library(
    name = "stats_poller",
    testonly = 1,
    srcs = ["stats_poller.cc"],
    hdrs = ["stats_poller.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:dtmf_sender_interface",
        "//api:libjingle_peerconnection_api",
        "//api:rtc_stats_api",
        "//api:rtp_sender_interface",
        "//api:stats_observer_interface",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base/synchronization:mutex",
        "//test/pc/e2e:stats_provider",
        "//test/pc/e2e:test_peer",
    ],
)

cc_library(
    name = "stats_poller_test",
    testonly = 1,
    srcs = ["stats_poller_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:rtc_stats_api",
        "//test:test_support",
        "//test/pc/e2e:stats_poller",
    ],
)

cc_library(
    name = "analyzer_helper",
    srcs = ["analyzer_helper.cc"],
    hdrs = ["analyzer_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:sequence_checker",
        "//api:track_id_stream_info_map",
        "//rtc_base:macromagic",
    ],
)

cc_library(
    name = "default_audio_quality_analyzer",
    testonly = 1,
    srcs = ["analyzer/audio/default_audio_quality_analyzer.cc"],
    hdrs = ["analyzer/audio/default_audio_quality_analyzer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:audio_quality_analyzer_api",
        "//api:rtc_stats_api",
        "//api:stats_observer_interface",
        "//api:track_id_stream_info_map",
        "//api/numerics",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base:criticalsection",
        "//rtc_base:logging",
        "//rtc_base:rtc_numerics",
        "//rtc_base/synchronization:mutex",
        "//test:perf_test",
        "//test/pc/e2e:metric_metadata_keys",
    ],
)

cc_library(
    name = "network_quality_metrics_reporter",
    testonly = 1,
    srcs = ["network_quality_metrics_reporter.cc"],
    hdrs = ["network_quality_metrics_reporter.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:network_emulation_manager_api",
        "//api:peer_connection_quality_test_fixture_api",
        "//api:rtc_stats_api",
        "//api:track_id_stream_info_map",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/units:data_size",
        "//rtc_base:checks",
        "//rtc_base:criticalsection",
        "//rtc_base:rtc_event",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers:field_trial",
        "//test:perf_test",
    ],
)

cc_library(
    name = "stats_based_network_quality_metrics_reporter",
    testonly = 1,
    srcs = ["stats_based_network_quality_metrics_reporter.cc"],
    hdrs = ["stats_based_network_quality_metrics_reporter.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:array_view",
        "//api:network_emulation_manager_api",
        "//api:peer_connection_quality_test_fixture_api",
        "//api:rtc_stats_api",
        "//api:scoped_refptr",
        "//api:sequence_checker",
        "//api/numerics",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/test/network_emulation",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base:ip_address",
        "//rtc_base:rtc_event",
        "//rtc_base:stringutils",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/system:no_unique_address",
        "//system_wrappers:field_trial",
        "//test:perf_test",
        "//test/pc/e2e:metric_metadata_keys",
    ],
)

cc_library(
    name = "cross_media_metrics_reporter",
    testonly = 1,
    srcs = ["cross_media_metrics_reporter.cc"],
    hdrs = ["cross_media_metrics_reporter.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:network_emulation_manager_api",
        "//api:peer_connection_quality_test_fixture_api",
        "//api:rtc_stats_api",
        "//api:track_id_stream_info_map",
        "//api/numerics",
        "//api/test/metrics:metric",
        "//api/test/metrics:metrics_logger",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base:criticalsection",
        "//rtc_base:rtc_event",
        "//rtc_base:rtc_numerics",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers:field_trial",
        "//test:perf_test",
        "//test/pc/e2e:metric_metadata_keys",
    ],
)

cc_library(
    name = "sdp_changer",
    testonly = 1,
    srcs = ["sdp/sdp_changer.cc"],
    hdrs = ["sdp/sdp_changer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:dtmf_sender_interface",
        "//api:libjingle_peerconnection_api",
        "//api:rtp_parameters",
        "//api:rtp_sender_interface",
        "//api/test/pclf:media_configuration",
        "//media:media_constants",
        "//media:rid_description",
        "//p2p:p2p_constants",
        "//p2p:rtc_p2p",
        "//pc:sdp_utils",
        "//pc:session_description",
        "//pc:simulcast_description",
        "//rtc_base:stringutils",
    ],
)
