# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "rtp_replayer",
    testonly = 1,
    srcs = ["rtp_replayer.cc"],
    hdrs = ["rtp_replayer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "//api/environment:environment_factory",
        "//api/test/video:function_video_factory",
        "//api/units:timestamp",
        "//api/video_codecs:video_codecs_api",
        "//call",
        "//call:call_interfaces",
        "//common_video",
        "//media:rtc_internal_video_codecs",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:checks",
        "//rtc_base:rtc_base_tests_utils",
        "//rtc_base:rtc_json",
        "//rtc_base:timeutils",
        "//system_wrappers",
        "//test:call_config_utils",
        "//test:encoder_settings",
        "//test:fake_video_codecs",
        "//test:null_transport",
        "//test:rtp_test_utils",
        "//test:run_loop",
        "//test:run_test",
        "//test:run_test_interface",
        "//test:test_renderer",
        "//test:test_renderer_generic",
        "//test:test_support",
        "//test:test_video_capturer",
        "//test:video_test_common",
    ] + platform_select(
        arm64 = [
            "//test:run_test_objc",
            "//test:test_renderer_objc",
        ],
        linux = ["//test:run_test_generic"],
        windows = ["//test:run_test_generic"],
    ),
)
