# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "time_controller",
    testonly = 1,
    srcs = [
        "external_time_controller.cc",
        "real_time_controller.cc",
        "simulated_task_queue.cc",
        "simulated_thread.cc",
        "simulated_time_controller.cc",
    ],
    hdrs = [
        "external_time_controller.h",
        "real_time_controller.h",
        "simulated_task_queue.h",
        "simulated_thread.h",
        "simulated_time_controller.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/strings",
        "//api:field_trials_view",
        "//api:sequence_checker",
        "//api:time_controller",
        "//api/task_queue",
        "//api/task_queue:default_task_queue_factory",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base:null_socket_server",
        "//rtc_base:platform_thread_types",
        "//rtc_base:rtc_base_tests_utils",
        "//rtc_base:rtc_event",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/synchronization:yield_policy",
        "//system_wrappers",
    ],
)

cc_library(
    name = "time_controller_unittests",
    testonly = 1,
    srcs = [
        "external_time_controller_unittest.cc",
        "simulated_time_controller_unittest.cc",
        "time_controller_conformance_test.cc",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:time_controller",
        "//api/task_queue",
        "//api/units:time_delta",
        "//rtc_base:macromagic",
        "//rtc_base:rtc_event",
        "//rtc_base:task_queue_for_test",
        "//rtc_base:threading",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/task_utils:repeating_task",
        "//test:test_support",
        "//test/time_controller",
    ],
)
