# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "peer_scenario",
    testonly = 1,
    srcs = [
        "peer_scenario.cc",
        "peer_scenario_client.cc",
        "scenario_connection.cc",
        "signaling_route.cc",
    ],
    hdrs = [
        "peer_scenario.h",
        "peer_scenario_client.h",
        "scenario_connection.h",
        "signaling_route.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = [
        "//resources:difficult_photo_1850_1110.yuv",
        "//resources:photo_1850_1110.yuv",
        "//resources:presentation_1850_1110.yuv",
        "//resources:web_screenshot_1850_1110.yuv",
    ],
    defines = [
        "HAVE_WEBRTC_VIDEO",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/memory",
        "//api:candidate",
        "//api:create_time_controller",
        "//api:dtmf_sender_interface",
        "//api:libjingle_peerconnection_api",
        "//api:network_emulation_manager_api",
        "//api:rtc_stats_api",
        "//api:rtp_sender_interface",
        "//api:time_controller",
        "//api/audio_codecs:builtin_audio_decoder_factory",
        "//api/audio_codecs:builtin_audio_encoder_factory",
        "//api/environment",
        "//api/rtc_event_log:rtc_event_log_factory",
        "//api/task_queue:default_task_queue_factory",
        "//api/transport:field_trial_based_config",
        "//api/video_codecs:video_decoder_factory_template",
        "//api/video_codecs:video_decoder_factory_template_dav1d_adapter",
        "//api/video_codecs:video_decoder_factory_template_libvpx_vp8_adapter",
        "//api/video_codecs:video_decoder_factory_template_libvpx_vp9_adapter",
        "//api/video_codecs:video_decoder_factory_template_open_h264_adapter",
        "//api/video_codecs:video_encoder_factory_template",
        "//api/video_codecs:video_encoder_factory_template_libaom_av1_adapter",
        "//api/video_codecs:video_encoder_factory_template_libvpx_vp8_adapter",
        "//api/video_codecs:video_encoder_factory_template_libvpx_vp9_adapter",
        "//api/video_codecs:video_encoder_factory_template_open_h264_adapter",
        "//media:rtc_audio_video",
        "//media:rtp_utils",
        "//modules/audio_device:test_audio_device_module",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//p2p:basic_port_allocator",
        "//p2p:rtc_p2p",
        "//p2p:transport_description",
        "//pc:channel",
        "//pc:jsep_transport_controller",
        "//pc:pc_test_utils",
        "//pc:rtp_transport_internal",
        "//pc:session_description",
        "//rtc_base:null_socket_server",
        "//rtc_base:stringutils",
        "//rtc_base:task_queue_for_test",
        "//test:create_frame_generator_capturer",
        "//test:explicit_key_value_config",
        "//test:fake_video_codecs",
        "//test:fileutils",
        "//test:frame_generator_capturer",
        "//test:scoped_key_value_config",
        "//test:test_support",
        "//test/logging:log_writer",
        "//test/network:emulated_network",
        "//test/scenario",
        "//test/time_controller",
    ],
)
