# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select", "webrtc_proto_library")

cc_library(
    name = "logging",
    visibility = ["//:__subpackages__"],
    deps = [
        "//logging:rtc_event_audio",
        "//logging:rtc_event_begin_end",
        "//logging:rtc_event_bwe",
        "//logging:rtc_event_log_impl_encoder",
        "//logging:rtc_event_pacing",
        "//logging:rtc_event_rtp_rtcp",
        "//logging:rtc_event_video",
    ],
)

cc_library(
    name = "rtc_event_log_api",
    hdrs = ["rtc_event_log/encoder/rtc_event_log_encoder.h"],
    visibility = ["//:__subpackages__"],
    deps = ["//api/rtc_event_log"],
)

cc_library(
    name = "rtc_event_log_parse_status",
    hdrs = ["rtc_event_log/events/rtc_event_log_parse_status.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "rtc_event_field",
    srcs = [
        "rtc_event_log/events/fixed_length_encoding_parameters_v3.cc",
        "rtc_event_log/events/rtc_event_field_encoding.cc",
        "rtc_event_log/events/rtc_event_field_encoding_parser.cc",
        "rtc_event_log/events/rtc_event_field_extraction.cc",
    ],
    hdrs = [
        "rtc_event_log/events/fixed_length_encoding_parameters_v3.h",
        "rtc_event_log/events/rtc_event_definition.h",
        "rtc_event_log/events/rtc_event_field_encoding.h",
        "rtc_event_log/events/rtc_event_field_encoding_parser.h",
        "rtc_event_log/events/rtc_event_field_extraction.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_log_parse_status",
        "//logging:rtc_event_number_encodings",
        "//rtc_base:bitstream_reader",
        "//rtc_base:checks",
        "//rtc_base:logging",
    ],
)

cc_library(
    name = "rtc_stream_config",
    srcs = ["rtc_event_log/rtc_stream_config.cc"],
    hdrs = ["rtc_event_log/rtc_stream_config.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:rtp_headers",
        "//api:rtp_parameters",
    ],
)

cc_library(
    name = "rtc_event_pacing",
    srcs = ["rtc_event_log/events/rtc_event_alr_state.cc"],
    hdrs = ["rtc_event_log/events/rtc_event_alr_state.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
    ],
)

cc_library(
    name = "rtc_event_audio",
    srcs = [
        "rtc_event_log/events/rtc_event_audio_network_adaptation.cc",
        "rtc_event_log/events/rtc_event_audio_playout.cc",
        "rtc_event_log/events/rtc_event_audio_receive_stream_config.cc",
        "rtc_event_log/events/rtc_event_audio_send_stream_config.cc",
        "rtc_event_log/events/rtc_event_neteq_set_minimum_delay.cc",
    ],
    hdrs = [
        "rtc_event_log/events/rtc_event_audio_network_adaptation.h",
        "rtc_event_log/events/rtc_event_audio_playout.h",
        "rtc_event_log/events/rtc_event_audio_receive_stream_config.h",
        "rtc_event_log/events/rtc_event_audio_send_stream_config.h",
        "rtc_event_log/events/rtc_event_neteq_set_minimum_delay.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
        "//logging:rtc_stream_config",
        "//modules/audio_coding:audio_network_adaptor_config",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "rtc_event_begin_end",
    srcs = [
        "rtc_event_log/events/rtc_event_begin_log.cc",
        "rtc_event_log/events/rtc_event_end_log.cc",
    ],
    hdrs = [
        "rtc_event_log/events/rtc_event_begin_log.h",
        "rtc_event_log/events/rtc_event_end_log.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:array_view",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
    ],
)

cc_library(
    name = "rtc_event_bwe",
    srcs = [
        "rtc_event_log/events/rtc_event_bwe_update_delay_based.cc",
        "rtc_event_log/events/rtc_event_bwe_update_loss_based.cc",
        "rtc_event_log/events/rtc_event_probe_cluster_created.cc",
        "rtc_event_log/events/rtc_event_probe_result_failure.cc",
        "rtc_event_log/events/rtc_event_probe_result_success.cc",
        "rtc_event_log/events/rtc_event_route_change.cc",
    ],
    hdrs = [
        "rtc_event_log/events/rtc_event_bwe_update_delay_based.h",
        "rtc_event_log/events/rtc_event_bwe_update_loss_based.h",
        "rtc_event_log/events/rtc_event_probe_cluster_created.h",
        "rtc_event_log/events/rtc_event_probe_result_failure.h",
        "rtc_event_log/events/rtc_event_probe_result_success.h",
        "rtc_event_log/events/rtc_event_remote_estimate.h",
        "rtc_event_log/events/rtc_event_route_change.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:network_state_predictor_api",
        "//api/rtc_event_log",
        "//api/units:data_rate",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
    ],
)

cc_library(
    name = "rtc_event_frame_events",
    srcs = ["rtc_event_log/events/rtc_event_frame_decoded.cc"],
    hdrs = ["rtc_event_log/events/rtc_event_frame_decoded.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//api/video:video_frame",
        "//logging:rtc_event_field",
        "//rtc_base:timeutils",
    ],
)

cc_library(
    name = "rtc_event_generic_packet_events",
    srcs = [
        "rtc_event_log/events/rtc_event_generic_ack_received.cc",
        "rtc_event_log/events/rtc_event_generic_packet_received.cc",
        "rtc_event_log/events/rtc_event_generic_packet_sent.cc",
    ],
    hdrs = [
        "rtc_event_log/events/rtc_event_generic_ack_received.h",
        "rtc_event_log/events/rtc_event_generic_packet_received.h",
        "rtc_event_log/events/rtc_event_generic_packet_sent.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
        "//rtc_base:timeutils",
    ],
)

cc_library(
    name = "rtc_event_rtp_rtcp",
    srcs = [
        "rtc_event_log/events/rtc_event_rtcp_packet_incoming.cc",
        "rtc_event_log/events/rtc_event_rtcp_packet_outgoing.cc",
        "rtc_event_log/events/rtc_event_rtp_packet_incoming.cc",
        "rtc_event_log/events/rtc_event_rtp_packet_outgoing.cc",
    ],
    hdrs = [
        "rtc_event_log/events/logged_rtp_rtcp.h",
        "rtc_event_log/events/rtc_event_rtcp_packet_incoming.h",
        "rtc_event_log/events/rtc_event_rtcp_packet_outgoing.h",
        "rtc_event_log/events/rtc_event_rtp_packet_incoming.h",
        "rtc_event_log/events/rtc_event_rtp_packet_outgoing.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "//api:array_view",
        "//api:rtp_headers",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:buffer",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "rtc_event_video",
    srcs = [
        "rtc_event_log/events/rtc_event_video_receive_stream_config.cc",
        "rtc_event_log/events/rtc_event_video_send_stream_config.cc",
    ],
    hdrs = [
        "rtc_event_log/events/rtc_event_video_receive_stream_config.h",
        "rtc_event_log/events/rtc_event_video_send_stream_config.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
        "//logging:rtc_stream_config",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "rtc_event_number_encodings",
    srcs = [
        "rtc_event_log/encoder/bit_writer.cc",
        "rtc_event_log/encoder/rtc_event_log_encoder_common.cc",
        "rtc_event_log/encoder/var_int.cc",
    ],
    hdrs = [
        "rtc_event_log/encoder/bit_writer.h",
        "rtc_event_log/encoder/rtc_event_log_encoder_common.h",
        "rtc_event_log/encoder/var_int.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//rtc_base:bit_buffer",
        "//rtc_base:bitstream_reader",
        "//rtc_base:checks",
        "//rtc_base:macromagic",
    ],
)

cc_library(
    name = "rtc_event_log_blob_encoding",
    srcs = ["rtc_event_log/encoder/blob_encoding.cc"],
    hdrs = ["rtc_event_log/encoder/blob_encoding.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//logging:rtc_event_number_encodings",
        "//rtc_base:checks",
        "//rtc_base:logging",
    ],
)

cc_library(
    name = "rtc_event_log_optional_blob_encoding",
    srcs = ["rtc_event_log/encoder/optional_blob_encoding.cc"],
    hdrs = ["rtc_event_log/encoder/optional_blob_encoding.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//rtc_base:bit_buffer",
        "//rtc_base:bitstream_reader",
        "//rtc_base:checks",
        "//rtc_base:logging",
    ],
)

cc_library(
    name = "rtc_event_log_delta_encoding",
    srcs = ["rtc_event_log/encoder/delta_encoding.cc"],
    hdrs = ["rtc_event_log/encoder/delta_encoding.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//logging:rtc_event_number_encodings",
        "//rtc_base:bit_buffer",
        "//rtc_base:bitstream_reader",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:safe_conversions",
    ],
)

cc_library(
    name = "rtc_event_log_impl_encoder",
    srcs = [
        "rtc_event_log/encoder/rtc_event_log_encoder_legacy.cc",
        "rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "rtc_event_log/encoder/rtc_event_log_encoder_v3.cc",
    ],
    hdrs = [
        "rtc_event_log/encoder/rtc_event_log_encoder_legacy.h",
        "rtc_event_log/encoder/rtc_event_log_encoder_new_format.h",
        "rtc_event_log/encoder/rtc_event_log_encoder_v3.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api:rtp_headers",
        "//api:rtp_parameters",
        "//api/transport:network_control",
        "//logging:dependency_descriptor_encoder_decoder",
        "//logging:ice_log",
        "//logging:rtc_event_audio",
        "//logging:rtc_event_begin_end",
        "//logging:rtc_event_bwe",
        "//logging:rtc_event_field",
        "//logging:rtc_event_frame_events",
        "//logging:rtc_event_generic_packet_events",
        "//logging:rtc_event_log2_proto",
        "//logging:rtc_event_log_api",
        "//logging:rtc_event_log_blob_encoding",
        "//logging:rtc_event_log_delta_encoding",
        "//logging:rtc_event_log_proto",
        "//logging:rtc_event_number_encodings",
        "//logging:rtc_event_pacing",
        "//logging:rtc_event_rtp_rtcp",
        "//logging:rtc_event_video",
        "//logging:rtc_stream_config",
        "//modules/audio_coding:audio_network_adaptor",
        "//modules/audio_coding:audio_network_adaptor_config",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:bit_buffer",
        "//rtc_base:bitstream_reader",
        "//rtc_base:buffer",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:safe_conversions",
    ],
)

cc_library(
    name = "dependency_descriptor_encoder_decoder",
    srcs = ["rtc_event_log/dependency_descriptor_encoder_decoder.cc"],
    hdrs = ["rtc_event_log/dependency_descriptor_encoder_decoder.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//logging:rtc_event_log2_proto_include",
        "//logging:rtc_event_log_delta_encoding",
        "//logging:rtc_event_log_optional_blob_encoding",
        "//logging:rtc_event_log_parse_status",
        "//logging:rtc_event_log_proto",
        "//rtc_base:bitstream_reader",
        "//rtc_base:checks",
        "//rtc_base:logging",
    ],
)

cc_library(
    name = "rtc_event_log2_proto_include",
    hdrs = ["rtc_event_log/rtc_event_log2_proto_include.h"],
    visibility = ["//:__subpackages__"],
    deps = ["//logging:rtc_event_log2_proto"],
)

cc_library(
    name = "rtc_event_log_impl_output",
    hdrs = ["rtc_event_log/output/rtc_event_log_output_file.h"],
    visibility = ["//:__subpackages__"],
    deps = ["//api:rtc_event_log_output_file"],
)

cc_library(
    name = "rtc_event_log_impl",
    srcs = ["rtc_event_log/rtc_event_log_impl.cc"],
    hdrs = ["rtc_event_log/rtc_event_log_impl.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = [
        "//api/rtc_event_log:__pkg__",
        "//logging:__pkg__",
    ],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api:libjingle_logging_api",
        "//api:sequence_checker",
        "//api/environment",
        "//api/rtc_event_log",
        "//api/task_queue",
        "//api/units:time_delta",
        "//logging:ice_log",
        "//logging:rtc_event_log_api",
        "//logging:rtc_event_log_impl_encoder",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:rtc_event",
        "//rtc_base:safe_conversions",
        "//rtc_base:safe_minmax",
        "//rtc_base:timeutils",
        "//rtc_base/system:no_unique_address",
    ],
)

cc_library(
    name = "fake_rtc_event_log",
    testonly = 1,
    srcs = [
        "rtc_event_log/fake_rtc_event_log.cc",
        "rtc_event_log/fake_rtc_event_log_factory.cc",
    ],
    hdrs = [
        "rtc_event_log/fake_rtc_event_log.h",
        "rtc_event_log/fake_rtc_event_log_factory.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/base:nullability",
        "//api/environment",
        "//api/rtc_event_log",
        "//rtc_base:macromagic",
        "//rtc_base/synchronization:mutex",
    ],
)

webrtc_proto_library(
    name = "rtc_event_log_proto",
    srcs = ["rtc_event_log/rtc_event_log.proto"],
    visibility = ["//visibility:public"],
)

webrtc_proto_library(
    name = "rtc_event_log2_proto",
    srcs = ["rtc_event_log/rtc_event_log2.proto"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "rtc_event_log_parser",
    srcs = [
        "rtc_event_log/rtc_event_log_parser.cc",
        "rtc_event_log/rtc_event_processor.cc",
    ],
    hdrs = [
        "rtc_event_log/rtc_event_log_parser.h",
        "rtc_event_log/rtc_event_processor.h",
        "rtc_event_log/rtc_event_processor_order.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "GOOGLE_PROTOBUF_NO_RTTI",
        "GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:function_view",
        "//api:network_state_predictor_api",
        "//api:rtp_headers",
        "//api:rtp_parameters",
        "//api/rtc_event_log",
        "//api/units:data_rate",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:video_frame",
        "//call:video_stream_api",
        "//logging:dependency_descriptor_encoder_decoder",
        "//logging:ice_log",
        "//logging:rtc_event_audio",
        "//logging:rtc_event_begin_end",
        "//logging:rtc_event_bwe",
        "//logging:rtc_event_frame_events",
        "//logging:rtc_event_generic_packet_events",
        "//logging:rtc_event_log2_proto",
        "//logging:rtc_event_log_blob_encoding",
        "//logging:rtc_event_log_delta_encoding",
        "//logging:rtc_event_log_impl_encoder",
        "//logging:rtc_event_log_proto",
        "//logging:rtc_event_number_encodings",
        "//logging:rtc_event_pacing",
        "//logging:rtc_event_rtp_rtcp",
        "//logging:rtc_event_video",
        "//logging:rtc_stream_config",
        "//modules:module_api_public",
        "//modules/audio_coding:audio_network_adaptor",
        "//modules/audio_coding:audio_network_adaptor_config",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:checks",
        "//rtc_base:copy_on_write_buffer",
        "//rtc_base:logging",
        "//rtc_base:protobuf_utils",
        "//rtc_base:rtc_numerics",
        "//rtc_base:safe_conversions",
        "//rtc_base/system:file_wrapper",
    ],
)

cc_library(
    name = "rtc_event_log_tests",
    testonly = 1,
    srcs = [
        "rtc_event_log/dependency_descriptor_encoder_decoder_unittest.cc",
        "rtc_event_log/encoder/blob_encoding_unittest.cc",
        "rtc_event_log/encoder/delta_encoding_unittest.cc",
        "rtc_event_log/encoder/optional_blob_encoding_unittest.cc",
        "rtc_event_log/encoder/rtc_event_log_encoder_common_unittest.cc",
        "rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "rtc_event_log/events/rtc_event_field_encoding_unittest.cc",
        "rtc_event_log/events/rtc_event_field_extraction_unittest.cc",
        "rtc_event_log/rtc_event_log_impl_unittest.cc",
        "rtc_event_log/rtc_event_log_unittest.cc",
        "rtc_event_log/rtc_event_log_unittest_helper.cc",
        "rtc_event_log/rtc_event_processor_unittest.cc",
    ],
    hdrs = ["rtc_event_log/rtc_event_log_unittest_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_googletest//:gtest",
        "//api:array_view",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api:rtc_event_log_output_file",
        "//api:rtp_headers",
        "//api:rtp_parameters",
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/rtc_event_log",
        "//api/rtc_event_log:rtc_event_log_factory",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//call",
        "//call:call_interfaces",
        "//logging:dependency_descriptor_encoder_decoder",
        "//logging:ice_log",
        "//logging:rtc_event_audio",
        "//logging:rtc_event_bwe",
        "//logging:rtc_event_field",
        "//logging:rtc_event_frame_events",
        "//logging:rtc_event_generic_packet_events",
        "//logging:rtc_event_log2_proto",
        "//logging:rtc_event_log2_proto_include",
        "//logging:rtc_event_log_blob_encoding",
        "//logging:rtc_event_log_delta_encoding",
        "//logging:rtc_event_log_impl",
        "//logging:rtc_event_log_impl_encoder",
        "//logging:rtc_event_log_optional_blob_encoding",
        "//logging:rtc_event_log_parser",
        "//logging:rtc_event_log_proto",
        "//logging:rtc_event_number_encodings",
        "//logging:rtc_event_pacing",
        "//logging:rtc_event_rtp_rtcp",
        "//logging:rtc_event_video",
        "//logging:rtc_stream_config",
        "//modules/audio_coding:audio_network_adaptor",
        "//modules/audio_coding:audio_network_adaptor_config",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:buffer",
        "//rtc_base:checks",
        "//rtc_base:macromagic",
        "//rtc_base:random",
        "//rtc_base:rtc_base_tests_utils",
        "//rtc_base:timeutils",
        "//system_wrappers",
        "//test:explicit_key_value_config",
        "//test:fileutils",
        "//test:test_support",
        "//test/logging:log_writer",
        "//test/time_controller",
    ],
)

cc_binary(
    name = "rtc_event_log_rtp_dump",
    testonly = 1,
    srcs = ["rtc_event_log/rtc_event_log2rtp_dump.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "GOOGLE_PROTOBUF_NO_RTTI",
        "GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/flags:usage",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:rtp_headers",
        "//api/rtc_event_log",
        "//logging:rtc_event_log_parser",
        "//modules/rtp_rtcp",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:checks",
        "//rtc_base:protobuf_utils",
        "//test:rtp_test_utils",
    ],
)

cc_library(
    name = "ice_log",
    srcs = [
        "rtc_event_log/events/rtc_event_dtls_transport_state.cc",
        "rtc_event_log/events/rtc_event_dtls_writable_state.cc",
        "rtc_event_log/events/rtc_event_ice_candidate_pair.cc",
        "rtc_event_log/events/rtc_event_ice_candidate_pair_config.cc",
        "rtc_event_log/ice_logger.cc",
    ],
    hdrs = [
        "rtc_event_log/events/rtc_event_dtls_transport_state.h",
        "rtc_event_log/events/rtc_event_dtls_writable_state.h",
        "rtc_event_log/events/rtc_event_ice_candidate_pair.h",
        "rtc_event_log/events/rtc_event_ice_candidate_pair_config.h",
        "rtc_event_log/ice_logger.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "//api:candidate",
        "//api:dtls_transport_interface",
        "//api:libjingle_logging_api",
        "//api/rtc_event_log",
        "//api/units:timestamp",
        "//logging:rtc_event_field",
    ],
)

cc_library(
    name = "mocks",
    testonly = 1,
    srcs = ["rtc_event_log/mock/mock_rtc_event_log.cc"],
    hdrs = ["rtc_event_log/mock/mock_rtc_event_log.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/rtc_event_log",
        "//test:test_support",
    ],
)
