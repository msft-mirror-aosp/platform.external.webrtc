# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select", "webrtc_proto_library")

webrtc_proto_library(
    name = "network_tester_config_proto",
    srcs = ["network_tester_config.proto"],
    visibility = ["//:__subpackages__"],
)

webrtc_proto_library(
    name = "network_tester_packet_proto",
    srcs = ["network_tester_packet.proto"],
    visibility = ["//:__subpackages__"],
)

cc_library(
    name = "network_tester",
    srcs = [
        "config_reader.cc",
        "packet_logger.cc",
        "packet_sender.cc",
        "test_controller.cc",
    ],
    hdrs = [
        "config_reader.h",
        "packet_logger.h",
        "packet_sender.h",
        "test_controller.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "GOOGLE_PROTOBUF_NO_RTTI",
        "GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NETWORK_TESTER_PROTO",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/types:optional",
        "//api:sequence_checker",
        "//api/task_queue",
        "//api/task_queue:default_task_queue_factory",
        "//api/task_queue:pending_task_safety_flag",
        "//api/units:timestamp",
        "//p2p:basic_packet_socket_factory",
        "//p2p:rtc_p2p",
        "//rtc_base:async_packet_socket",
        "//rtc_base:checks",
        "//rtc_base:ip_address",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:protobuf_utils",
        "//rtc_base:socket_address",
        "//rtc_base:socket_server",
        "//rtc_base:threading",
        "//rtc_base:timeutils",
        "//rtc_base/network:received_packet",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/system:no_unique_address",
        "//rtc_tools/network_tester:network_tester_config_proto",
        "//rtc_tools/network_tester:network_tester_packet_proto",
    ],
)

cc_library(
    name = "network_tester_unittests",
    testonly = 1,
    srcs = ["network_tester_unittest.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = [
        "//resources:network_tester/client_config.dat",
        "//resources:network_tester/server_config.dat",
    ],
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_googletest//:gtest",
        "//rtc_base:gunit_helpers",
        "//rtc_base:random",
        "//rtc_base:threading",
        "//rtc_tools/network_tester",
        "//test:fileutils",
        "//test:test_support",
    ],
)

cc_binary(
    name = "network_tester_server",
    srcs = ["server.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//rtc_base:null_socket_server",
        "//rtc_base:threading",
        "//rtc_tools/network_tester",
    ],
)
