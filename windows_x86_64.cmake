# Generated on 12/15/23 for target: Windows
# This is an autogenerated file by calling:

# ./import-webrtc.py --target webrtc_api_video_codecs_builtin_video_decoder_factory --target webrtc_api_video_codecs_builtin_video_encoder_factory --target webrtc_api_libjingle_peerconnection_api --target webrtc_pc_peerconnection --target webrtc_api_create_peerconnection_factory --target webrtc_api_audio_codecs_builtin_audio_decoder_factory --target webrtc_api_audio_codecs_builtin_audio_encoder_factory --target webrtc_common_audio_common_audio_unittests --target webrtc_common_video_common_video_unittests --target webrtc_media_rtc_media_unittests --target webrtc_modules_audio_coding_audio_decoder_unittests --target webrtc_pc_peerconnection_unittests --target webrtc_pc_rtc_pc_unittests --root /usr/local/google/home/jansene/src/webrtc-blaze/third_party/webrtc/files/stable/webrtc/ --platform Windows BUILD .

# Re-running this script will require you to merge in the latest upstream-master for webrtc

# Expecting jsoncpp  at 42e892d96e47b1f6e29844cc705e148ec4856448
# Expecting libaom  at e1b78c57e41b332d2345b3f85ad84956002468e9
# Expecting libsrtp2  at 5b7c744eb8310250ccc534f3f86a2015b3887a0a
# Expecting libvpx  at fa60c7d9c16f0e7ce1daa2030e9920e1a64525d8
# Expecting libyuv  at 04821d1e7d60845525e8db55c7bcd41ef5be9406



# Create a symlink so webrtc can find required includes, we already have all
# the required dependencies in our tree.
message("Creating webrtc test symlinks ${CMAKE_CURRENT_BINARY_DIR}/testing/")
android_symlink("${AOSP_ROOT}/external/googletest/googletest/" "gtest" ${CMAKE_CURRENT_BINARY_DIR}/testing)
android_symlink("${AOSP_ROOT}/external/googletest/googlemock/" "gmock" ${CMAKE_CURRENT_BINARY_DIR}/testing)

# ==== Generated modules are coming next ====
    
# api/adaptation:resource_adaptation_api
add_library(webrtc_api_adaptation_resource_adaptation_api ${WEBRTC_ROOT}/api/adaptation/resource.cc)
target_include_directories(webrtc_api_adaptation_resource_adaptation_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_adaptation_resource_adaptation_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_adaptation_resource_adaptation_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_adaptation_resource_adaptation_api PUBLIC webrtc_api_scoped_refptr webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_system_rtc_export )

# api:array_view
add_library(webrtc_api_array_view INTERFACE)
target_link_libraries(webrtc_api_array_view INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_type_traits )
target_include_directories(webrtc_api_array_view INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:async_dns_resolver
add_library(webrtc_api_async_dns_resolver INTERFACE)
target_link_libraries(webrtc_api_async_dns_resolver INTERFACE absl::any_invocable webrtc_rtc_base_checks webrtc_rtc_base_socket_address webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_api_async_dns_resolver INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/audio:aec3_config
add_library(webrtc_api_audio_aec3_config ${WEBRTC_ROOT}/api/audio/echo_canceller3_config.cc)
target_include_directories(webrtc_api_audio_aec3_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_aec3_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_aec3_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_aec3_config PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_safe_minmax webrtc_rtc_base_system_rtc_export )

# api/audio:aec3_factory
add_library(webrtc_api_audio_aec3_factory ${WEBRTC_ROOT}/api/audio/echo_canceller3_factory.cc)
target_include_directories(webrtc_api_audio_aec3_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_aec3_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_aec3_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_aec3_factory PUBLIC webrtc_api_audio_aec3_config webrtc_api_audio_echo_control webrtc_modules_audio_processing_aec3_aec3 webrtc_rtc_base_system_rtc_export )

# api/audio:audio_frame_api
add_library(webrtc_api_audio_audio_frame_api ${WEBRTC_ROOT}/api/audio/audio_frame.cc ${WEBRTC_ROOT}/api/audio/channel_layout.cc)
target_include_directories(webrtc_api_audio_audio_frame_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_audio_frame_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_audio_frame_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_audio_frame_api PUBLIC webrtc_api_rtp_packet_info webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_timeutils )

# api/audio:audio_frame_processor
add_library(webrtc_api_audio_audio_frame_processor INTERFACE)
target_include_directories(webrtc_api_audio_audio_frame_processor INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/audio:audio_mixer_api
add_library(webrtc_api_audio_audio_mixer_api INTERFACE)
target_link_libraries(webrtc_api_audio_audio_mixer_api INTERFACE webrtc_api_make_ref_counted webrtc_api_audio_audio_frame_api webrtc_rtc_base_refcount )
target_include_directories(webrtc_api_audio_audio_mixer_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/audio_codecs/L16:audio_decoder_L16
add_library(webrtc_api_audio_codecs_L16_audio_decoder_L16 ${WEBRTC_ROOT}/api/audio_codecs/L16/audio_decoder_L16.cc)
target_include_directories(webrtc_api_audio_codecs_L16_audio_decoder_L16 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_L16_audio_decoder_L16 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_L16_audio_decoder_L16 PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_L16_audio_decoder_L16 PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_modules_audio_coding_pcm16b webrtc_modules_audio_coding_pcm16b_c webrtc_rtc_base_safe_conversions webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/L16:audio_encoder_L16
add_library(webrtc_api_audio_codecs_L16_audio_encoder_L16 ${WEBRTC_ROOT}/api/audio_codecs/L16/audio_encoder_L16.cc)
target_include_directories(webrtc_api_audio_codecs_L16_audio_encoder_L16 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_L16_audio_encoder_L16 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_L16_audio_encoder_L16 PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_L16_audio_encoder_L16 PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_modules_audio_coding_pcm16b webrtc_modules_audio_coding_pcm16b_c webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api/audio_codecs:audio_codecs_api
add_library(webrtc_api_audio_codecs_audio_codecs_api ${WEBRTC_ROOT}/api/audio_codecs/audio_codec_pair_id.cc ${WEBRTC_ROOT}/api/audio_codecs/audio_decoder.cc ${WEBRTC_ROOT}/api/audio_codecs/audio_encoder.cc ${WEBRTC_ROOT}/api/audio_codecs/audio_format.cc)
target_include_directories(webrtc_api_audio_codecs_audio_codecs_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_audio_codecs_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_audio_codecs_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_audio_codecs_api PUBLIC absl::core_headers absl::strings absl::optional webrtc_api_array_view webrtc_api_bitrate_allocation webrtc_api_field_trials_view webrtc_api_make_ref_counted webrtc_api_ref_count webrtc_api_scoped_refptr webrtc_api_units_time_delta webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_refcount webrtc_rtc_base_sanitizer webrtc_rtc_base_system_rtc_export )

# api/audio_codecs:builtin_audio_decoder_factory
add_library(webrtc_api_audio_codecs_builtin_audio_decoder_factory ${WEBRTC_ROOT}/api/audio_codecs/builtin_audio_decoder_factory.cc)
target_include_directories(webrtc_api_audio_codecs_builtin_audio_decoder_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_builtin_audio_decoder_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_USE_BUILTIN_ILBC=0 WEBRTC_USE_BUILTIN_OPUS=1)
target_compile_options(webrtc_api_audio_codecs_builtin_audio_decoder_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_builtin_audio_decoder_factory PUBLIC webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_L16_audio_decoder_L16 webrtc_api_audio_codecs_g711_audio_decoder_g711 webrtc_api_audio_codecs_g722_audio_decoder_g722 webrtc_api_audio_codecs_opus_audio_decoder_multiopus webrtc_api_audio_codecs_opus_audio_decoder_opus )

# api/audio_codecs:builtin_audio_encoder_factory
add_library(webrtc_api_audio_codecs_builtin_audio_encoder_factory ${WEBRTC_ROOT}/api/audio_codecs/builtin_audio_encoder_factory.cc)
target_include_directories(webrtc_api_audio_codecs_builtin_audio_encoder_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_builtin_audio_encoder_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_USE_BUILTIN_ILBC=0 WEBRTC_USE_BUILTIN_OPUS=1)
target_compile_options(webrtc_api_audio_codecs_builtin_audio_encoder_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_builtin_audio_encoder_factory PUBLIC webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_L16_audio_encoder_L16 webrtc_api_audio_codecs_g711_audio_encoder_g711 webrtc_api_audio_codecs_g722_audio_encoder_g722 webrtc_api_audio_codecs_opus_audio_encoder_multiopus webrtc_api_audio_codecs_opus_audio_encoder_opus )

# api/audio_codecs/g711:audio_decoder_g711
add_library(webrtc_api_audio_codecs_g711_audio_decoder_g711 ${WEBRTC_ROOT}/api/audio_codecs/g711/audio_decoder_g711.cc)
target_include_directories(webrtc_api_audio_codecs_g711_audio_decoder_g711 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_g711_audio_decoder_g711 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_g711_audio_decoder_g711 PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_g711_audio_decoder_g711 PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_modules_audio_coding_g711 webrtc_modules_audio_coding_g711_c webrtc_rtc_base_safe_conversions webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/g711:audio_encoder_g711
add_library(webrtc_api_audio_codecs_g711_audio_encoder_g711 ${WEBRTC_ROOT}/api/audio_codecs/g711/audio_encoder_g711.cc)
target_include_directories(webrtc_api_audio_codecs_g711_audio_encoder_g711 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_g711_audio_encoder_g711 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_g711_audio_encoder_g711 PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_g711_audio_encoder_g711 PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_modules_audio_coding_g711 webrtc_modules_audio_coding_g711_c webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/g722:audio_decoder_g722
add_library(webrtc_api_audio_codecs_g722_audio_decoder_g722 ${WEBRTC_ROOT}/api/audio_codecs/g722/audio_decoder_g722.cc)
target_include_directories(webrtc_api_audio_codecs_g722_audio_decoder_g722 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_g722_audio_decoder_g722 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_g722_audio_decoder_g722 PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_g722_audio_decoder_g722 PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_modules_audio_coding_g722 webrtc_modules_audio_coding_g722_c webrtc_rtc_base_safe_conversions webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/g722:audio_encoder_g722
add_library(webrtc_api_audio_codecs_g722_audio_encoder_g722 ${WEBRTC_ROOT}/api/audio_codecs/g722/audio_encoder_g722.cc)
target_include_directories(webrtc_api_audio_codecs_g722_audio_encoder_g722 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_g722_audio_encoder_g722 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_g722_audio_encoder_g722 PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_g722_audio_encoder_g722 PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_g722_audio_encoder_g722_config webrtc_modules_audio_coding_g722 webrtc_modules_audio_coding_g722_c webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/g722:audio_encoder_g722_config
add_library(webrtc_api_audio_codecs_g722_audio_encoder_g722_config INTERFACE)
target_link_libraries(webrtc_api_audio_codecs_g722_audio_encoder_g722_config INTERFACE webrtc_api_audio_codecs_audio_codecs_api )
target_include_directories(webrtc_api_audio_codecs_g722_audio_encoder_g722_config INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/audio_codecs/ilbc:audio_encoder_ilbc_config
add_library(webrtc_api_audio_codecs_ilbc_audio_encoder_ilbc_config INTERFACE)
target_include_directories(webrtc_api_audio_codecs_ilbc_audio_encoder_ilbc_config INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/audio_codecs:opus_audio_decoder_factory
add_library(webrtc_api_audio_codecs_opus_audio_decoder_factory ${WEBRTC_ROOT}/api/audio_codecs/opus_audio_decoder_factory.cc)
target_include_directories(webrtc_api_audio_codecs_opus_audio_decoder_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_opus_audio_decoder_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_opus_audio_decoder_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_opus_audio_decoder_factory PUBLIC webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_decoder_multiopus webrtc_api_audio_codecs_opus_audio_decoder_opus )

# api/audio_codecs/opus:audio_decoder_multiopus
add_library(webrtc_api_audio_codecs_opus_audio_decoder_multiopus ${WEBRTC_ROOT}/api/audio_codecs/opus/audio_decoder_multi_channel_opus.cc)
target_include_directories(webrtc_api_audio_codecs_opus_audio_decoder_multiopus PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_opus_audio_decoder_multiopus PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_opus_audio_decoder_multiopus PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_opus_audio_decoder_multiopus PUBLIC absl::memory absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_decoder_opus_config webrtc_modules_audio_coding_webrtc_multiopus webrtc_modules_audio_coding_webrtc_opus_wrapper webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/opus:audio_decoder_opus
add_library(webrtc_api_audio_codecs_opus_audio_decoder_opus ${WEBRTC_ROOT}/api/audio_codecs/opus/audio_decoder_opus.cc)
target_include_directories(webrtc_api_audio_codecs_opus_audio_decoder_opus PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_opus_audio_decoder_opus PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_opus_audio_decoder_opus PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_opus_audio_decoder_opus PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_modules_audio_coding_webrtc_opus webrtc_modules_audio_coding_webrtc_opus_wrapper webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/opus:audio_decoder_opus_config
add_library(webrtc_api_audio_codecs_opus_audio_decoder_opus_config INTERFACE)
target_link_libraries(webrtc_api_audio_codecs_opus_audio_decoder_opus_config INTERFACE webrtc_api_audio_codecs_audio_codecs_api )
target_include_directories(webrtc_api_audio_codecs_opus_audio_decoder_opus_config INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/audio_codecs:opus_audio_encoder_factory
add_library(webrtc_api_audio_codecs_opus_audio_encoder_factory ${WEBRTC_ROOT}/api/audio_codecs/opus_audio_encoder_factory.cc)
target_include_directories(webrtc_api_audio_codecs_opus_audio_encoder_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_opus_audio_encoder_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_opus_audio_encoder_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_opus_audio_encoder_factory PUBLIC webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_encoder_multiopus webrtc_api_audio_codecs_opus_audio_encoder_opus )

# api/audio_codecs/opus:audio_encoder_multiopus
add_library(webrtc_api_audio_codecs_opus_audio_encoder_multiopus ${WEBRTC_ROOT}/api/audio_codecs/opus/audio_encoder_multi_channel_opus.cc)
target_include_directories(webrtc_api_audio_codecs_opus_audio_encoder_multiopus PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_opus_audio_encoder_multiopus PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_opus_audio_encoder_multiopus PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_opus_audio_encoder_multiopus PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_encoder_opus_config webrtc_modules_audio_coding_webrtc_multiopus webrtc_modules_audio_coding_webrtc_opus_wrapper webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/opus:audio_encoder_opus
add_library(webrtc_api_audio_codecs_opus_audio_encoder_opus ${WEBRTC_ROOT}/api/audio_codecs/opus/audio_encoder_opus.cc)
target_include_directories(webrtc_api_audio_codecs_opus_audio_encoder_opus PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_opus_audio_encoder_opus PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_opus_audio_encoder_opus PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_opus_audio_encoder_opus PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_encoder_opus_config webrtc_modules_audio_coding_webrtc_opus webrtc_modules_audio_coding_webrtc_opus_wrapper webrtc_rtc_base_system_rtc_export )

# api/audio_codecs/opus:audio_encoder_opus_config
add_library(webrtc_api_audio_codecs_opus_audio_encoder_opus_config ${WEBRTC_ROOT}/api/audio_codecs/opus/audio_encoder_multi_channel_opus_config.cc ${WEBRTC_ROOT}/api/audio_codecs/opus/audio_encoder_opus_config.cc)
target_include_directories(webrtc_api_audio_codecs_opus_audio_encoder_opus_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_codecs_opus_audio_encoder_opus_config PRIVATE RTC_ENABLE_VP9 WEBRTC_OPUS_VARIABLE_COMPLEXITY=0 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_codecs_opus_audio_encoder_opus_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_codecs_opus_audio_encoder_opus_config PUBLIC absl::optional webrtc_rtc_base_system_rtc_export )

# api/audio:echo_control
add_library(webrtc_api_audio_echo_control INTERFACE)
target_link_libraries(webrtc_api_audio_echo_control INTERFACE webrtc_rtc_base_checks )
target_include_directories(webrtc_api_audio_echo_control INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:audio_options_api
add_library(webrtc_api_audio_options_api ${WEBRTC_ROOT}/api/audio_options.cc)
target_include_directories(webrtc_api_audio_options_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_audio_options_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_audio_options_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_audio_options_api PUBLIC absl::optional webrtc_api_array_view webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api:bitrate_allocation
add_library(webrtc_api_bitrate_allocation INTERFACE)
target_link_libraries(webrtc_api_bitrate_allocation INTERFACE webrtc_api_units_data_rate webrtc_api_units_time_delta )
target_include_directories(webrtc_api_bitrate_allocation INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:call_api
add_library(webrtc_api_call_api INTERFACE)
target_include_directories(webrtc_api_call_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:candidate
add_library(webrtc_api_candidate ${WEBRTC_ROOT}/api/candidate.cc)
target_include_directories(webrtc_api_candidate PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_candidate PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_candidate PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_candidate PUBLIC absl::core_headers absl::strings webrtc_rtc_base_checks webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_network_constants webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api:create_frame_generator
add_library(webrtc_api_create_frame_generator ${WEBRTC_ROOT}/api/test/create_frame_generator.cc)
target_include_directories(webrtc_api_create_frame_generator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_create_frame_generator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_create_frame_generator PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_create_frame_generator PUBLIC absl::optional webrtc_api_frame_generator_api webrtc_rtc_base_checks webrtc_system_wrappers_system_wrappers webrtc_test_frame_generator_impl )

# api:create_peerconnection_factory
add_library(webrtc_api_create_peerconnection_factory ${WEBRTC_ROOT}/api/create_peerconnection_factory.cc)
target_include_directories(webrtc_api_create_peerconnection_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_create_peerconnection_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_create_peerconnection_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_create_peerconnection_factory PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_enable_media webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_audio_audio_mixer_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_rtc_event_log_rtc_event_log_factory webrtc_api_task_queue_default_task_queue_factory webrtc_api_transport_field_trial_based_config webrtc_api_video_codecs_video_codecs_api webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_processing_api webrtc_pc_peer_connection_factory webrtc_pc_webrtc_sdp webrtc_rtc_base_threading webrtc_stats_rtc_stats )

# api:create_simulcast_test_fixture_api
add_library(webrtc_api_create_simulcast_test_fixture_api ${WEBRTC_ROOT}/api/test/create_simulcast_test_fixture.cc)
target_include_directories(webrtc_api_create_simulcast_test_fixture_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_create_simulcast_test_fixture_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_create_simulcast_test_fixture_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_create_simulcast_test_fixture_api PUBLIC webrtc_api_simulcast_test_fixture_api webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_simulcast_test_fixture_impl )

# api/crypto:frame_decryptor_interface
add_library(webrtc_api_crypto_frame_decryptor_interface INTERFACE)
target_link_libraries(webrtc_api_crypto_frame_decryptor_interface INTERFACE webrtc_api_array_view webrtc_api_rtp_parameters webrtc_rtc_base_refcount )
target_include_directories(webrtc_api_crypto_frame_decryptor_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/crypto:frame_encryptor_interface
add_library(webrtc_api_crypto_frame_encryptor_interface INTERFACE)
target_link_libraries(webrtc_api_crypto_frame_encryptor_interface INTERFACE webrtc_api_array_view webrtc_api_rtp_parameters webrtc_rtc_base_refcount )
target_include_directories(webrtc_api_crypto_frame_encryptor_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/crypto:options
add_library(webrtc_api_crypto_options ${WEBRTC_ROOT}/api/crypto/crypto_options.cc)
target_include_directories(webrtc_api_crypto_options PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_crypto_options PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_crypto_options PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_crypto_options PUBLIC webrtc_rtc_base_ssl webrtc_rtc_base_system_rtc_export )

# api:dtls_transport_interface
add_library(webrtc_api_dtls_transport_interface ${WEBRTC_ROOT}/api/dtls_transport_interface.cc)
target_include_directories(webrtc_api_dtls_transport_interface PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_dtls_transport_interface PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_dtls_transport_interface PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_dtls_transport_interface PUBLIC absl::optional webrtc_api_ice_transport_interface webrtc_api_ref_count webrtc_api_rtc_error webrtc_api_scoped_refptr webrtc_rtc_base_ssl webrtc_rtc_base_system_rtc_export )

# api:dtmf_sender_interface
add_library(webrtc_api_dtmf_sender_interface INTERFACE)
target_link_libraries(webrtc_api_dtmf_sender_interface INTERFACE webrtc_api_media_stream_interface webrtc_api_ref_count )
target_include_directories(webrtc_api_dtmf_sender_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:enable_media
add_library(webrtc_api_enable_media ${WEBRTC_ROOT}/api/enable_media.cc)
target_include_directories(webrtc_api_enable_media PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_enable_media PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN HAVE_WEBRTC_VIDEO RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_enable_media PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_enable_media PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_environment_environment webrtc_call_call webrtc_media_rtc_audio_video webrtc_pc_media_factory webrtc_rtc_base_system_rtc_export )

# api:enable_media_with_defaults
add_library(webrtc_api_enable_media_with_defaults ${WEBRTC_ROOT}/api/enable_media_with_defaults.cc)
target_include_directories(webrtc_api_enable_media_with_defaults PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_enable_media_with_defaults PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_enable_media_with_defaults PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_enable_media_with_defaults PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_enable_media webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_audio_codecs_builtin_audio_decoder_factory webrtc_api_audio_codecs_builtin_audio_encoder_factory webrtc_api_task_queue_default_task_queue_factory webrtc_api_video_codecs_builtin_video_decoder_factory webrtc_api_video_codecs_builtin_video_encoder_factory webrtc_modules_audio_processing_api webrtc_rtc_base_system_rtc_export )

# api/environment
add_library(webrtc_api_environment_environment INTERFACE)
target_link_libraries(webrtc_api_environment_environment INTERFACE absl::nullability webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_api_environment_environment INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/environment:environment_factory
add_library(webrtc_api_environment_environment_factory ${WEBRTC_ROOT}/api/environment/environment_factory.cc)
target_include_directories(webrtc_api_environment_environment_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_environment_environment_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_environment_environment_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_environment_environment_factory PUBLIC absl::nullability webrtc_api_make_ref_counted webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_environment_environment webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_default_task_queue_factory webrtc_api_transport_field_trial_based_config webrtc_rtc_base_checks webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_system_wrappers )

# api:fake_frame_decryptor
add_library(webrtc_api_fake_frame_decryptor ${WEBRTC_ROOT}/api/test/fake_frame_decryptor.cc)
target_include_directories(webrtc_api_fake_frame_decryptor PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_fake_frame_decryptor PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_fake_frame_decryptor PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_fake_frame_decryptor PUBLIC webrtc_api_array_view webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_crypto_frame_decryptor_interface webrtc_rtc_base_checks )

# api:fake_frame_encryptor
add_library(webrtc_api_fake_frame_encryptor ${WEBRTC_ROOT}/api/test/fake_frame_encryptor.cc)
target_include_directories(webrtc_api_fake_frame_encryptor PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_fake_frame_encryptor PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_fake_frame_encryptor PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_fake_frame_encryptor PUBLIC webrtc_api_array_view webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_ref_count webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_crypto_frame_encryptor_interface webrtc_rtc_base_checks webrtc_rtc_base_refcount )

# api:fec_controller_api
add_library(webrtc_api_fec_controller_api INTERFACE)
target_link_libraries(webrtc_api_fec_controller_api INTERFACE webrtc_api_video_video_frame_type webrtc_modules_module_fec_api )
target_include_directories(webrtc_api_fec_controller_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:field_trials
add_library(webrtc_api_field_trials ${WEBRTC_ROOT}/api/field_trials.cc)
target_include_directories(webrtc_api_field_trials PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_field_trials PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_field_trials PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_field_trials PUBLIC absl::strings webrtc_api_field_trials_registry webrtc_rtc_base_checks webrtc_rtc_base_containers_flat_map webrtc_system_wrappers_field_trial )

# api:field_trials_registry
add_library(webrtc_api_field_trials_registry ${WEBRTC_ROOT}/api/field_trials_registry.cc)
target_include_directories(webrtc_api_field_trials_registry PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_field_trials_registry PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_field_trials_registry PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_field_trials_registry PUBLIC absl::algorithm_container absl::strings webrtc_api_field_trials_view webrtc_experiments_registered_field_trials webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_containers_flat_set webrtc_rtc_base_system_rtc_export )

# api:field_trials_view
add_library(webrtc_api_field_trials_view INTERFACE)
target_link_libraries(webrtc_api_field_trials_view INTERFACE absl::strings webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_api_field_trials_view INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:frame_generator_api
add_library(webrtc_api_frame_generator_api ${WEBRTC_ROOT}/api/test/frame_generator_interface.cc)
target_include_directories(webrtc_api_frame_generator_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_frame_generator_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_frame_generator_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_frame_generator_api PUBLIC absl::optional webrtc_api_scoped_refptr webrtc_api_video_video_frame )

# api:frame_transformer_interface
add_library(webrtc_api_frame_transformer_interface INTERFACE)
target_link_libraries(webrtc_api_frame_transformer_interface INTERFACE webrtc_api_make_ref_counted webrtc_api_ref_count webrtc_api_scoped_refptr webrtc_api_video_encoded_frame webrtc_api_video_video_frame_metadata )
target_include_directories(webrtc_api_frame_transformer_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:function_view
add_library(webrtc_api_function_view INTERFACE)
target_link_libraries(webrtc_api_function_view INTERFACE webrtc_rtc_base_checks )
target_include_directories(webrtc_api_function_view INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:ice_transport_factory
add_library(webrtc_api_ice_transport_factory ${WEBRTC_ROOT}/api/ice_transport_factory.cc)
target_include_directories(webrtc_api_ice_transport_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_ice_transport_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_ice_transport_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_ice_transport_factory PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_ice_transport_interface webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_packet_socket_factory webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_rtc_event_log_rtc_event_log webrtc_p2p_rtc_p2p webrtc_rtc_base_threading webrtc_rtc_base_system_rtc_export )

# api:ice_transport_interface
add_library(webrtc_api_ice_transport_interface INTERFACE)
target_link_libraries(webrtc_api_ice_transport_interface INTERFACE webrtc_api_async_dns_resolver webrtc_api_packet_socket_factory webrtc_api_ref_count webrtc_api_rtc_error webrtc_api_scoped_refptr webrtc_api_rtc_event_log_rtc_event_log )
target_include_directories(webrtc_api_ice_transport_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:libjingle_logging_api
add_library(webrtc_api_libjingle_logging_api INTERFACE)
target_link_libraries(webrtc_api_libjingle_logging_api INTERFACE absl::strings )
target_include_directories(webrtc_api_libjingle_logging_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:libjingle_peerconnection_api
add_library(webrtc_api_libjingle_peerconnection_api ${WEBRTC_ROOT}/api/data_channel_interface.cc ${WEBRTC_ROOT}/api/jsep.cc ${WEBRTC_ROOT}/api/jsep_ice_candidate.cc ${WEBRTC_ROOT}/api/legacy_stats_types.cc ${WEBRTC_ROOT}/api/peer_connection_interface.cc ${WEBRTC_ROOT}/api/rtp_receiver_interface.cc ${WEBRTC_ROOT}/api/rtp_transceiver_interface.cc ${WEBRTC_ROOT}/api/sctp_transport_interface.cc)
target_include_directories(webrtc_api_libjingle_peerconnection_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_libjingle_peerconnection_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_libjingle_peerconnection_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_libjingle_peerconnection_api PUBLIC absl::algorithm_container absl::core_headers absl::any_invocable absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_async_dns_resolver webrtc_api_audio_options_api webrtc_api_candidate webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_fec_controller_api webrtc_api_field_trials webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_ice_transport_interface webrtc_api_libjingle_logging_api webrtc_api_make_ref_counted webrtc_api_media_stream_interface webrtc_api_network_state_predictor_api webrtc_api_packet_socket_factory webrtc_api_priority webrtc_api_ref_count webrtc_api_rtc_error webrtc_api_rtc_stats_api webrtc_api_rtp_packet_info webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_turn_customizer webrtc_api_adaptation_resource_adaptation_api webrtc_api_audio_audio_mixer_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_metronome_metronome webrtc_api_neteq_neteq_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_transport_bitrate_settings webrtc_api_transport_enums webrtc_api_transport_network_control webrtc_api_transport_sctp_transport_factory_interface webrtc_api_transport_rtp_rtp_source webrtc_api_units_data_rate webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_call_rtp_interfaces webrtc_media_rtc_media_base webrtc_media_rtc_media_config webrtc_modules_audio_processing_audio_processing_statistics webrtc_p2p_rtc_p2p webrtc_pc_media_factory webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_network webrtc_rtc_base_network_constants webrtc_rtc_base_rtc_certificate_generator webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_system_rtc_export )

# api:location
add_library(webrtc_api_location INTERFACE)
target_link_libraries(webrtc_api_location INTERFACE webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_api_location INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:make_ref_counted
add_library(webrtc_api_make_ref_counted INTERFACE)
target_link_libraries(webrtc_api_make_ref_counted INTERFACE webrtc_api_ref_count webrtc_rtc_base_refcount )
target_include_directories(webrtc_api_make_ref_counted INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:media_stream_interface
add_library(webrtc_api_media_stream_interface ${WEBRTC_ROOT}/api/media_stream_interface.cc)
target_include_directories(webrtc_api_media_stream_interface PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_media_stream_interface PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_media_stream_interface PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_media_stream_interface PUBLIC absl::strings absl::optional webrtc_api_audio_options_api webrtc_api_make_ref_counted webrtc_api_ref_count webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_video_track_source_constraints webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_modules_audio_processing_audio_processing_statistics webrtc_rtc_base_checks webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export )

# api/metronome
add_library(webrtc_api_metronome_metronome INTERFACE)
target_link_libraries(webrtc_api_metronome_metronome INTERFACE webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_api_metronome_metronome INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_async_dns_resolver
add_library(webrtc_api_mock_async_dns_resolver INTERFACE)
target_link_libraries(webrtc_api_mock_async_dns_resolver INTERFACE webrtc_api_async_dns_resolver webrtc_test_test_support )
target_include_directories(webrtc_api_mock_async_dns_resolver INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_encoder_selector
add_library(webrtc_api_mock_encoder_selector INTERFACE)
target_link_libraries(webrtc_api_mock_encoder_selector INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_video_codecs_video_codecs_api webrtc_test_test_support )
target_include_directories(webrtc_api_mock_encoder_selector INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_packet_socket_factory
add_library(webrtc_api_mock_packet_socket_factory INTERFACE)
target_link_libraries(webrtc_api_mock_packet_socket_factory INTERFACE webrtc_api_packet_socket_factory webrtc_test_test_support )
target_include_directories(webrtc_api_mock_packet_socket_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_rtp
add_library(webrtc_api_mock_rtp INTERFACE)
target_link_libraries(webrtc_api_mock_rtp INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_crypto_frame_decryptor_interface webrtc_test_test_support )
target_include_directories(webrtc_api_mock_rtp INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_video_bitrate_allocator
add_library(webrtc_api_mock_video_bitrate_allocator INTERFACE)
target_link_libraries(webrtc_api_mock_video_bitrate_allocator INTERFACE webrtc_api_video_video_bitrate_allocator webrtc_test_test_support )
target_include_directories(webrtc_api_mock_video_bitrate_allocator INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_video_bitrate_allocator_factory
add_library(webrtc_api_mock_video_bitrate_allocator_factory INTERFACE)
target_link_libraries(webrtc_api_mock_video_bitrate_allocator_factory INTERFACE webrtc_api_video_video_bitrate_allocator_factory webrtc_test_test_support )
target_include_directories(webrtc_api_mock_video_bitrate_allocator_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_video_codec_factory
add_library(webrtc_api_mock_video_codec_factory INTERFACE)
target_link_libraries(webrtc_api_mock_video_codec_factory INTERFACE webrtc_api_video_codecs_video_codecs_api webrtc_test_test_support )
target_include_directories(webrtc_api_mock_video_codec_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_video_decoder
add_library(webrtc_api_mock_video_decoder INTERFACE)
target_link_libraries(webrtc_api_mock_video_decoder INTERFACE webrtc_api_video_codecs_video_codecs_api webrtc_test_test_support )
target_include_directories(webrtc_api_mock_video_decoder INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_video_encoder
add_library(webrtc_api_mock_video_encoder INTERFACE)
target_link_libraries(webrtc_api_mock_video_encoder INTERFACE webrtc_api_video_codecs_video_codecs_api webrtc_test_test_support )
target_include_directories(webrtc_api_mock_video_encoder INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:mock_video_track
add_library(webrtc_api_mock_video_track INTERFACE)
target_link_libraries(webrtc_api_mock_video_track INTERFACE webrtc_api_media_stream_interface webrtc_api_ref_count webrtc_api_scoped_refptr webrtc_rtc_base_refcount webrtc_test_test_support )
target_include_directories(webrtc_api_mock_video_track INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/neteq:custom_neteq_factory
add_library(webrtc_api_neteq_custom_neteq_factory ${WEBRTC_ROOT}/api/neteq/custom_neteq_factory.cc)
target_include_directories(webrtc_api_neteq_custom_neteq_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_neteq_custom_neteq_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_neteq_custom_neteq_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_neteq_custom_neteq_factory PUBLIC webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_neteq_neteq_api webrtc_api_neteq_neteq_controller_api webrtc_modules_audio_coding_neteq webrtc_system_wrappers_system_wrappers )

# api/neteq:default_neteq_controller_factory
add_library(webrtc_api_neteq_default_neteq_controller_factory ${WEBRTC_ROOT}/api/neteq/default_neteq_controller_factory.cc)
target_include_directories(webrtc_api_neteq_default_neteq_controller_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_neteq_default_neteq_controller_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_neteq_default_neteq_controller_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_neteq_default_neteq_controller_factory PUBLIC webrtc_api_neteq_neteq_controller_api webrtc_modules_audio_coding_neteq )

# api/neteq:neteq_api
add_library(webrtc_api_neteq_neteq_api ${WEBRTC_ROOT}/api/neteq/neteq.cc)
target_include_directories(webrtc_api_neteq_neteq_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_neteq_neteq_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_neteq_neteq_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_neteq_neteq_api PUBLIC absl::optional webrtc_api_rtp_headers webrtc_api_rtp_packet_info webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_rtc_base_stringutils webrtc_system_wrappers_system_wrappers )

# api/neteq:neteq_controller_api
add_library(webrtc_api_neteq_neteq_controller_api INTERFACE)
target_link_libraries(webrtc_api_neteq_neteq_controller_api INTERFACE absl::optional webrtc_api_neteq_neteq_api webrtc_api_neteq_tick_timer webrtc_system_wrappers_system_wrappers )
target_include_directories(webrtc_api_neteq_neteq_controller_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:neteq_simulator_api
add_library(webrtc_api_neteq_simulator_api ${WEBRTC_ROOT}/api/test/neteq_simulator.cc)
target_include_directories(webrtc_api_neteq_simulator_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_neteq_simulator_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_neteq_simulator_api PRIVATE -fno-rtti )

# api/neteq:tick_timer
add_library(webrtc_api_neteq_tick_timer ${WEBRTC_ROOT}/api/neteq/tick_timer.cc)
target_include_directories(webrtc_api_neteq_tick_timer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_neteq_tick_timer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_neteq_tick_timer PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_neteq_tick_timer PUBLIC webrtc_rtc_base_checks )

# api:network_state_predictor_api
add_library(webrtc_api_network_state_predictor_api INTERFACE)
target_include_directories(webrtc_api_network_state_predictor_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/numerics
add_library(webrtc_api_numerics_numerics ${WEBRTC_ROOT}/api/numerics/samples_stats_counter.cc)
target_include_directories(webrtc_api_numerics_numerics PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_numerics_numerics PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_numerics_numerics PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_numerics_numerics PUBLIC absl::algorithm_container webrtc_api_array_view webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_rtc_numerics webrtc_rtc_base_timeutils )

# api:packet_socket_factory
add_library(webrtc_api_packet_socket_factory INTERFACE)
target_link_libraries(webrtc_api_packet_socket_factory INTERFACE webrtc_api_async_dns_resolver webrtc_rtc_base_async_packet_socket webrtc_rtc_base_proxy_info webrtc_rtc_base_socket_address webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_api_packet_socket_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:priority
add_library(webrtc_api_priority INTERFACE)
target_include_directories(webrtc_api_priority INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:ref_count
add_library(webrtc_api_ref_count INTERFACE)
target_include_directories(webrtc_api_ref_count INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:refcountedbase
add_library(webrtc_api_refcountedbase INTERFACE)
target_link_libraries(webrtc_api_refcountedbase INTERFACE webrtc_api_ref_count webrtc_rtc_base_macromagic webrtc_rtc_base_refcount )
target_include_directories(webrtc_api_refcountedbase INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:rtc_error
add_library(webrtc_api_rtc_error ${WEBRTC_ROOT}/api/rtc_error.cc)
target_include_directories(webrtc_api_rtc_error PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtc_error PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtc_error PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtc_error PUBLIC absl::strings absl::optional webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_system_rtc_export )

# api:rtc_event_log_output_file
add_library(webrtc_api_rtc_event_log_output_file ${WEBRTC_ROOT}/api/rtc_event_log_output_file.cc)
target_include_directories(webrtc_api_rtc_event_log_output_file PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtc_event_log_output_file PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtc_event_log_output_file PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtc_event_log_output_file PUBLIC webrtc_api_libjingle_logging_api webrtc_api_rtc_event_log_rtc_event_log webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_system_file_wrapper )

# api/rtc_event_log
add_library(webrtc_api_rtc_event_log_rtc_event_log ${WEBRTC_ROOT}/api/rtc_event_log/rtc_event.cc ${WEBRTC_ROOT}/api/rtc_event_log/rtc_event_log.cc)
target_include_directories(webrtc_api_rtc_event_log_rtc_event_log PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtc_event_log_rtc_event_log PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtc_event_log_rtc_event_log PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtc_event_log_rtc_event_log PUBLIC absl::nullability webrtc_api_libjingle_logging_api webrtc_api_environment_environment webrtc_api_task_queue_task_queue webrtc_rtc_base_checks webrtc_rtc_base_timeutils )

# api/rtc_event_log:rtc_event_log_factory
add_library(webrtc_api_rtc_event_log_rtc_event_log_factory ${WEBRTC_ROOT}/api/rtc_event_log/rtc_event_log_factory.cc)
target_include_directories(webrtc_api_rtc_event_log_rtc_event_log_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtc_event_log_rtc_event_log_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_ENABLE_RTC_EVENT_LOG WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtc_event_log_rtc_event_log_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtc_event_log_rtc_event_log_factory PUBLIC absl::nullability webrtc_api_field_trials_view webrtc_api_environment_environment webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_logging_rtc_event_log_impl webrtc_rtc_base_system_rtc_export )

# api:rtc_stats_api
add_library(webrtc_api_rtc_stats_api INTERFACE)
target_link_libraries(webrtc_api_rtc_stats_api INTERFACE absl::optional webrtc_api_make_ref_counted webrtc_api_ref_count webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_api_rtc_stats_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:rtp_headers
add_library(webrtc_api_rtp_headers ${WEBRTC_ROOT}/api/rtp_headers.cc)
target_include_directories(webrtc_api_rtp_headers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtp_headers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtp_headers PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtp_headers PUBLIC absl::optional webrtc_api_array_view webrtc_api_units_timestamp webrtc_api_video_video_rtp_headers )

# api:rtp_packet_info
add_library(webrtc_api_rtp_packet_info ${WEBRTC_ROOT}/api/rtp_packet_info.cc)
target_include_directories(webrtc_api_rtp_packet_info PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtp_packet_info PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtp_packet_info PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtp_packet_info PUBLIC absl::optional webrtc_api_array_view webrtc_api_make_ref_counted webrtc_api_refcountedbase webrtc_api_rtp_headers webrtc_api_scoped_refptr webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_system_rtc_export )

# api:rtp_parameters
add_library(webrtc_api_rtp_parameters ${WEBRTC_ROOT}/api/media_types.cc ${WEBRTC_ROOT}/api/rtp_parameters.cc)
target_include_directories(webrtc_api_rtp_parameters PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtp_parameters PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtp_parameters PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtp_parameters PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_api_priority webrtc_api_rtp_transceiver_direction webrtc_api_video_resolution webrtc_api_video_codecs_scalability_mode webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api:rtp_sender_interface
add_library(webrtc_api_rtp_sender_interface ${WEBRTC_ROOT}/api/rtp_sender_interface.cc)
target_include_directories(webrtc_api_rtp_sender_interface PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_rtp_sender_interface PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_rtp_sender_interface PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_rtp_sender_interface PUBLIC absl::any_invocable webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_frame_transformer_interface webrtc_api_media_stream_interface webrtc_api_ref_count webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_crypto_frame_encryptor_interface webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_checks webrtc_rtc_base_system_rtc_export )

# api:rtp_transceiver_direction
add_library(webrtc_api_rtp_transceiver_direction INTERFACE)
target_include_directories(webrtc_api_rtp_transceiver_direction INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:scoped_refptr
add_library(webrtc_api_scoped_refptr INTERFACE)
target_include_directories(webrtc_api_scoped_refptr INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:sequence_checker
add_library(webrtc_api_sequence_checker INTERFACE)
target_link_libraries(webrtc_api_sequence_checker INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_synchronization_sequence_checker_internal )
target_include_directories(webrtc_api_sequence_checker INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:simulated_network_api
add_library(webrtc_api_simulated_network_api INTERFACE)
target_link_libraries(webrtc_api_simulated_network_api INTERFACE absl::optional webrtc_rtc_base_macromagic webrtc_rtc_base_random )
target_include_directories(webrtc_api_simulated_network_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:simulcast_test_fixture_api
add_library(webrtc_api_simulcast_test_fixture_api INTERFACE)
target_include_directories(webrtc_api_simulcast_test_fixture_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/task_queue:default_task_queue_factory
add_library(webrtc_api_task_queue_default_task_queue_factory ${WEBRTC_ROOT}/api/task_queue/default_task_queue_factory_win.cc)
target_include_directories(webrtc_api_task_queue_default_task_queue_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_task_queue_default_task_queue_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_task_queue_default_task_queue_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_task_queue_default_task_queue_factory PUBLIC webrtc_rtc_base_rtc_task_queue_win webrtc_api_field_trials_view webrtc_api_task_queue_task_queue webrtc_rtc_base_memory_always_valid_pointer )

# api/task_queue:pending_task_safety_flag
add_library(webrtc_api_task_queue_pending_task_safety_flag ${WEBRTC_ROOT}/api/task_queue/pending_task_safety_flag.cc)
target_include_directories(webrtc_api_task_queue_pending_task_safety_flag PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_task_queue_pending_task_safety_flag PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_task_queue_pending_task_safety_flag PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_task_queue_pending_task_safety_flag PUBLIC absl::nullability absl::any_invocable webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_rtc_base_checks webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export )

# api/task_queue
add_library(webrtc_api_task_queue_task_queue ${WEBRTC_ROOT}/api/task_queue/task_queue_base.cc)
target_include_directories(webrtc_api_task_queue_task_queue PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_task_queue_task_queue PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_task_queue_task_queue PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_task_queue_task_queue PUBLIC absl::config absl::core_headers absl::any_invocable absl::strings webrtc_api_location webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_system_rtc_export )

# api/test/metrics:chrome_perf_dashboard_metrics_exporter
add_library(webrtc_api_test_metrics_chrome_perf_dashboard_metrics_exporter ${WEBRTC_ROOT}/api/test/metrics/chrome_perf_dashboard_metrics_exporter.cc)
target_include_directories(webrtc_api_test_metrics_chrome_perf_dashboard_metrics_exporter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_chrome_perf_dashboard_metrics_exporter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_chrome_perf_dashboard_metrics_exporter PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_chrome_perf_dashboard_metrics_exporter PUBLIC absl::memory absl::strings webrtc_api_array_view webrtc_api_test_metrics_metric webrtc_api_test_metrics_metrics_exporter webrtc_test_fileutils webrtc_test_perf_test )

# api/test/metrics:global_metrics_logger_and_exporter
add_library(webrtc_api_test_metrics_global_metrics_logger_and_exporter ${WEBRTC_ROOT}/api/test/metrics/global_metrics_logger_and_exporter.cc)
target_include_directories(webrtc_api_test_metrics_global_metrics_logger_and_exporter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_global_metrics_logger_and_exporter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_global_metrics_logger_and_exporter PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_global_metrics_logger_and_exporter PUBLIC webrtc_api_test_metrics_metrics_exporter webrtc_api_test_metrics_metrics_logger webrtc_rtc_base_checks webrtc_system_wrappers_system_wrappers )

# api/test/metrics:metric
add_library(webrtc_api_test_metrics_metric ${WEBRTC_ROOT}/api/test/metrics/metric.cc)
target_include_directories(webrtc_api_test_metrics_metric PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_metric PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_metric PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_metric PUBLIC absl::optional webrtc_api_units_timestamp )

# //third_party/webrtc/files/stable/webrtc/api/test/metrics:metric_proto
add_library(webrtc_api_test_metrics_metric_proto)
protobuf_generate_with_plugin(
  TARGET webrtc_api_test_metrics_metric_proto
  PROTOS  ${WEBRTC_ROOT}/api/test/metrics/proto/metric.proto
  HEADERFILEEXTENSION .pb.h
  APPEND_PATH
  PROTOPATH  -I${WEBRTC_ROOT}/api/test/metrics/proto
  PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/api/test/metrics/proto)
target_include_directories(webrtc_api_test_metrics_metric_proto PUBLIC  ${CMAKE_CURRENT_BINARY_DIR}/api/test/metrics/proto)
add_library(webrtc_api_test_metrics_metric_proto_lib ALIAS webrtc_api_test_metrics_metric_proto)
target_link_libraries(webrtc_api_test_metrics_metric_proto PUBLIC libprotobuf)

# api/test/metrics:metrics_accumulator
add_library(webrtc_api_test_metrics_metrics_accumulator ${WEBRTC_ROOT}/api/test/metrics/metrics_accumulator.cc)
target_include_directories(webrtc_api_test_metrics_metrics_accumulator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_metrics_accumulator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_metrics_accumulator PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_metrics_accumulator PUBLIC absl::strings webrtc_api_numerics_numerics webrtc_api_test_metrics_metric webrtc_api_units_timestamp webrtc_rtc_base_macromagic webrtc_rtc_base_synchronization_mutex )

# api/test/metrics:metrics_exporter
add_library(webrtc_api_test_metrics_metrics_exporter INTERFACE)
target_link_libraries(webrtc_api_test_metrics_metrics_exporter INTERFACE webrtc_api_array_view webrtc_api_test_metrics_metric )
target_include_directories(webrtc_api_test_metrics_metrics_exporter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/test/metrics:metrics_logger
add_library(webrtc_api_test_metrics_metrics_logger ${WEBRTC_ROOT}/api/test/metrics/metrics_logger.cc)
target_include_directories(webrtc_api_test_metrics_metrics_logger PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_metrics_logger PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_metrics_logger PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_metrics_logger PUBLIC absl::strings webrtc_api_array_view webrtc_api_numerics_numerics webrtc_api_test_metrics_metric webrtc_api_test_metrics_metrics_accumulator webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers )

# api/test/metrics:metrics_set_proto_file_exporter
add_library(webrtc_api_test_metrics_metrics_set_proto_file_exporter ${WEBRTC_ROOT}/api/test/metrics/metrics_set_proto_file_exporter.cc)
target_include_directories(webrtc_api_test_metrics_metrics_set_proto_file_exporter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_metrics_set_proto_file_exporter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_metrics_set_proto_file_exporter PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_metrics_set_proto_file_exporter PUBLIC webrtc_api_array_view webrtc_api_test_metrics_metric webrtc_api_test_metrics_metric_proto webrtc_api_test_metrics_metrics_exporter webrtc_rtc_base_logging webrtc_test_fileutils )

# api/test/metrics:print_result_proxy_metrics_exporter
add_library(webrtc_api_test_metrics_print_result_proxy_metrics_exporter ${WEBRTC_ROOT}/api/test/metrics/print_result_proxy_metrics_exporter.cc)
target_include_directories(webrtc_api_test_metrics_print_result_proxy_metrics_exporter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_print_result_proxy_metrics_exporter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_print_result_proxy_metrics_exporter PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_print_result_proxy_metrics_exporter PUBLIC webrtc_api_array_view webrtc_api_test_metrics_metric webrtc_api_test_metrics_metrics_exporter webrtc_test_perf_test )

# api/test/metrics:stdout_metrics_exporter
add_library(webrtc_api_test_metrics_stdout_metrics_exporter ${WEBRTC_ROOT}/api/test/metrics/stdout_metrics_exporter.cc)
target_include_directories(webrtc_api_test_metrics_stdout_metrics_exporter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_test_metrics_stdout_metrics_exporter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_test_metrics_stdout_metrics_exporter PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_test_metrics_stdout_metrics_exporter PUBLIC absl::optional webrtc_api_array_view webrtc_api_test_metrics_metric webrtc_api_test_metrics_metrics_exporter webrtc_rtc_base_stringutils )

# api/test/video:function_video_factory
add_library(webrtc_api_test_video_function_video_factory INTERFACE)
target_link_libraries(webrtc_api_test_video_function_video_factory INTERFACE webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_checks )
target_include_directories(webrtc_api_test_video_function_video_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:time_controller
add_library(webrtc_api_time_controller ${WEBRTC_ROOT}/api/test/time_controller.cc)
target_include_directories(webrtc_api_time_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_time_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_time_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_time_controller PUBLIC webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_threading webrtc_rtc_base_synchronization_yield_policy webrtc_system_wrappers_system_wrappers )

# api:transport_api
add_library(webrtc_api_transport_api ${WEBRTC_ROOT}/api/call/transport.cc)
target_include_directories(webrtc_api_transport_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_transport_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_transport_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_transport_api PUBLIC webrtc_api_array_view webrtc_api_refcountedbase webrtc_api_scoped_refptr )

# api/transport:bitrate_settings
add_library(webrtc_api_transport_bitrate_settings ${WEBRTC_ROOT}/api/transport/bitrate_settings.cc)
target_include_directories(webrtc_api_transport_bitrate_settings PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_transport_bitrate_settings PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_transport_bitrate_settings PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_transport_bitrate_settings PUBLIC absl::optional webrtc_rtc_base_system_rtc_export )

# api/transport:datagram_transport_interface
add_library(webrtc_api_transport_datagram_transport_interface INTERFACE)
target_link_libraries(webrtc_api_transport_datagram_transport_interface INTERFACE absl::optional webrtc_api_array_view webrtc_api_rtc_error webrtc_rtc_base_copy_on_write_buffer )
target_include_directories(webrtc_api_transport_datagram_transport_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/transport:enums
add_library(webrtc_api_transport_enums INTERFACE)
target_include_directories(webrtc_api_transport_enums INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/transport:field_trial_based_config
add_library(webrtc_api_transport_field_trial_based_config ${WEBRTC_ROOT}/api/transport/field_trial_based_config.cc)
target_include_directories(webrtc_api_transport_field_trial_based_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_transport_field_trial_based_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_transport_field_trial_based_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_transport_field_trial_based_config PUBLIC absl::strings webrtc_api_field_trials_registry webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_field_trial )

# api/transport:goog_cc
add_library(webrtc_api_transport_goog_cc ${WEBRTC_ROOT}/api/transport/goog_cc_factory.cc)
target_include_directories(webrtc_api_transport_goog_cc PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_transport_goog_cc PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_transport_goog_cc PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_transport_goog_cc PUBLIC absl::core_headers webrtc_api_field_trials_view webrtc_api_network_state_predictor_api webrtc_api_transport_network_control webrtc_modules_congestion_controller_goog_cc_goog_cc )

# api/transport:network_control
add_library(webrtc_api_transport_network_control ${WEBRTC_ROOT}/api/transport/network_types.cc)
target_include_directories(webrtc_api_transport_network_control PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_transport_network_control PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_transport_network_control PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_transport_network_control PUBLIC absl::core_headers absl::optional webrtc_api_field_trials_view webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp )

# api/transport/rtp:dependency_descriptor
add_library(webrtc_api_transport_rtp_dependency_descriptor ${WEBRTC_ROOT}/api/transport/rtp/dependency_descriptor.cc)
target_include_directories(webrtc_api_transport_rtp_dependency_descriptor PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_transport_rtp_dependency_descriptor PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_transport_rtp_dependency_descriptor PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_transport_rtp_dependency_descriptor PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_video_render_resolution webrtc_rtc_base_checks )

# api/transport/rtp:rtp_source
add_library(webrtc_api_transport_rtp_rtp_source INTERFACE)
target_link_libraries(webrtc_api_transport_rtp_rtp_source INTERFACE absl::optional webrtc_api_rtp_headers webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_checks )
target_include_directories(webrtc_api_transport_rtp_rtp_source INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/transport:sctp_transport_factory_interface
add_library(webrtc_api_transport_sctp_transport_factory_interface INTERFACE)
target_include_directories(webrtc_api_transport_sctp_transport_factory_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/transport:stun_types
add_library(webrtc_api_transport_stun_types ${WEBRTC_ROOT}/api/transport/stun.cc)
target_include_directories(webrtc_api_transport_stun_types PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_transport_stun_types PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_transport_stun_types PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_transport_stun_types PUBLIC absl::strings webrtc_api_array_view webrtc_rtc_base_byte_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_crc32 webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_system_wrappers_metrics )

# api:turn_customizer
add_library(webrtc_api_turn_customizer INTERFACE)
target_link_libraries(webrtc_api_turn_customizer INTERFACE webrtc_api_transport_stun_types )
target_include_directories(webrtc_api_turn_customizer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/units:data_rate
add_library(webrtc_api_units_data_rate ${WEBRTC_ROOT}/api/units/data_rate.cc)
target_include_directories(webrtc_api_units_data_rate PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_units_data_rate PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_units_data_rate PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_units_data_rate PUBLIC webrtc_api_array_view webrtc_api_units_data_size webrtc_api_units_frequency webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_rtc_base_units_unit_base )

# api/units:data_size
add_library(webrtc_api_units_data_size ${WEBRTC_ROOT}/api/units/data_size.cc)
target_include_directories(webrtc_api_units_data_size PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_units_data_size PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_units_data_size PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_units_data_size PUBLIC webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_rtc_base_units_unit_base )

# api/units:frequency
add_library(webrtc_api_units_frequency ${WEBRTC_ROOT}/api/units/frequency.cc)
target_include_directories(webrtc_api_units_frequency PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_units_frequency PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_units_frequency PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_units_frequency PUBLIC webrtc_api_array_view webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_rtc_base_units_unit_base )

# api/units:time_delta
add_library(webrtc_api_units_time_delta ${WEBRTC_ROOT}/api/units/time_delta.cc)
target_include_directories(webrtc_api_units_time_delta PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_units_time_delta PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_units_time_delta PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_units_time_delta PUBLIC webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_rtc_base_units_unit_base )

# api/units:timestamp
add_library(webrtc_api_units_timestamp ${WEBRTC_ROOT}/api/units/timestamp.cc)
target_include_directories(webrtc_api_units_timestamp PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_units_timestamp PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_units_timestamp PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_units_timestamp PUBLIC webrtc_api_array_view webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_rtc_base_units_unit_base )

# api/video:builtin_video_bitrate_allocator_factory
add_library(webrtc_api_video_builtin_video_bitrate_allocator_factory ${WEBRTC_ROOT}/api/video/builtin_video_bitrate_allocator_factory.cc)
target_include_directories(webrtc_api_video_builtin_video_bitrate_allocator_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_builtin_video_bitrate_allocator_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_builtin_video_bitrate_allocator_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_builtin_video_bitrate_allocator_factory PUBLIC absl::core_headers webrtc_api_scoped_refptr webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_codecs_video_codecs_api webrtc_media_rtc_media_base webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_svc_svc_rate_allocator )

# api/video_codecs:bitstream_parser_api
add_library(webrtc_api_video_codecs_bitstream_parser_api INTERFACE)
target_link_libraries(webrtc_api_video_codecs_bitstream_parser_api INTERFACE absl::optional webrtc_api_array_view )
target_include_directories(webrtc_api_video_codecs_bitstream_parser_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:builtin_video_decoder_factory
add_library(webrtc_api_video_codecs_builtin_video_decoder_factory ${WEBRTC_ROOT}/api/video_codecs/builtin_video_decoder_factory.cc)
target_include_directories(webrtc_api_video_codecs_builtin_video_decoder_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_codecs_builtin_video_decoder_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_codecs_builtin_video_decoder_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_codecs_builtin_video_decoder_factory PUBLIC webrtc_api_scoped_refptr webrtc_api_video_codecs_video_codecs_api webrtc_media_rtc_internal_video_codecs webrtc_rtc_base_system_rtc_export )

# api/video_codecs:builtin_video_encoder_factory
add_library(webrtc_api_video_codecs_builtin_video_encoder_factory ${WEBRTC_ROOT}/api/video_codecs/builtin_video_encoder_factory.cc)
target_include_directories(webrtc_api_video_codecs_builtin_video_encoder_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_codecs_builtin_video_encoder_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_codecs_builtin_video_encoder_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_codecs_builtin_video_encoder_factory PUBLIC absl::strings absl::optional webrtc_api_scoped_refptr webrtc_api_video_codecs_video_codecs_api webrtc_media_codec webrtc_media_media_constants webrtc_media_rtc_internal_video_codecs webrtc_media_rtc_media_base webrtc_media_rtc_simulcast_encoder_adapter webrtc_rtc_base_checks webrtc_rtc_base_system_rtc_export )

# api/video_codecs:rtc_software_fallback_wrappers
add_library(webrtc_api_video_codecs_rtc_software_fallback_wrappers ${WEBRTC_ROOT}/api/video_codecs/video_decoder_software_fallback_wrapper.cc ${WEBRTC_ROOT}/api/video_codecs/video_encoder_software_fallback_wrapper.cc)
target_include_directories(webrtc_api_video_codecs_rtc_software_fallback_wrappers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_codecs_rtc_software_fallback_wrappers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_codecs_rtc_software_fallback_wrappers PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_codecs_rtc_software_fallback_wrappers PUBLIC absl::core_headers absl::strings absl::optional webrtc_api_fec_controller_api webrtc_api_transport_field_trial_based_config webrtc_api_video_encoded_image webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_media_rtc_media_base webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# api/video_codecs:scalability_mode
add_library(webrtc_api_video_codecs_scalability_mode ${WEBRTC_ROOT}/api/video_codecs/scalability_mode.cc)
target_include_directories(webrtc_api_video_codecs_scalability_mode PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_codecs_scalability_mode PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_codecs_scalability_mode PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_codecs_scalability_mode PUBLIC absl::strings webrtc_rtc_base_checks webrtc_rtc_base_system_rtc_export )

# api/video_codecs:video_codecs_api
add_library(webrtc_api_video_codecs_video_codecs_api ${WEBRTC_ROOT}/api/video_codecs/av1_profile.cc ${WEBRTC_ROOT}/api/video_codecs/h264_profile_level_id.cc ${WEBRTC_ROOT}/api/video_codecs/sdp_video_format.cc ${WEBRTC_ROOT}/api/video_codecs/simulcast_stream.cc ${WEBRTC_ROOT}/api/video_codecs/spatial_layer.cc ${WEBRTC_ROOT}/api/video_codecs/video_codec.cc ${WEBRTC_ROOT}/api/video_codecs/video_decoder.cc ${WEBRTC_ROOT}/api/video_codecs/video_encoder.cc ${WEBRTC_ROOT}/api/video_codecs/vp8_frame_config.cc ${WEBRTC_ROOT}/api/video_codecs/vp8_temporal_layers.cc ${WEBRTC_ROOT}/api/video_codecs/vp9_profile.cc)
target_include_directories(webrtc_api_video_codecs_video_codecs_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_codecs_video_codecs_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_codecs_video_codecs_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_codecs_video_codecs_api PUBLIC absl::algorithm_container absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_api_fec_controller_api webrtc_api_scoped_refptr webrtc_api_units_data_rate webrtc_api_video_encoded_image webrtc_api_video_render_resolution webrtc_api_video_resolution webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_modules_video_coding_codec_globals_headers webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_refcount webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api/video_codecs:video_decoder_factory_template
add_library(webrtc_api_video_codecs_video_decoder_factory_template INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_decoder_factory_template INTERFACE absl::algorithm_container webrtc_api_array_view webrtc_api_video_codecs_video_codecs_api )
target_include_directories(webrtc_api_video_codecs_video_decoder_factory_template INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_decoder_factory_template_dav1d_adapter
add_library(webrtc_api_video_codecs_video_decoder_factory_template_dav1d_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_decoder_factory_template_dav1d_adapter INTERFACE webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_codecs_av1_dav1d_decoder )
target_include_directories(webrtc_api_video_codecs_video_decoder_factory_template_dav1d_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_decoder_factory_template_libvpx_vp8_adapter
add_library(webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp8_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp8_adapter INTERFACE webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_webrtc_vp8 )
target_include_directories(webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp8_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_decoder_factory_template_libvpx_vp9_adapter
add_library(webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp9_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp9_adapter INTERFACE webrtc_modules_video_coding_webrtc_vp9 )
target_include_directories(webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp9_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_decoder_factory_template_open_h264_adapter
add_library(webrtc_api_video_codecs_video_decoder_factory_template_open_h264_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_decoder_factory_template_open_h264_adapter INTERFACE webrtc_modules_video_coding_webrtc_h264 )
target_include_directories(webrtc_api_video_codecs_video_decoder_factory_template_open_h264_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_encoder_factory_template
add_library(webrtc_api_video_codecs_video_encoder_factory_template INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_encoder_factory_template INTERFACE absl::algorithm_container webrtc_api_array_view webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_svc_scalability_mode_util )
target_include_directories(webrtc_api_video_codecs_video_encoder_factory_template INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_encoder_factory_template_libaom_av1_adapter
add_library(webrtc_api_video_codecs_video_encoder_factory_template_libaom_av1_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_encoder_factory_template_libaom_av1_adapter INTERFACE absl::algorithm_container webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_codecs_av1_av1_svc_config webrtc_modules_video_coding_codecs_av1_libaom_av1_encoder webrtc_modules_video_coding_svc_scalability_mode_util )
target_include_directories(webrtc_api_video_codecs_video_encoder_factory_template_libaom_av1_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_encoder_factory_template_libvpx_vp8_adapter
add_library(webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp8_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp8_adapter INTERFACE absl::algorithm_container webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_webrtc_vp8 webrtc_modules_video_coding_webrtc_vp8_scalability )
target_include_directories(webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp8_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_encoder_factory_template_libvpx_vp9_adapter
add_library(webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp9_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp9_adapter INTERFACE webrtc_modules_video_coding_webrtc_vp9 )
target_include_directories(webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp9_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:video_encoder_factory_template_open_h264_adapter
add_library(webrtc_api_video_codecs_video_encoder_factory_template_open_h264_adapter INTERFACE)
target_link_libraries(webrtc_api_video_codecs_video_encoder_factory_template_open_h264_adapter INTERFACE webrtc_modules_video_coding_webrtc_h264 )
target_include_directories(webrtc_api_video_codecs_video_encoder_factory_template_open_h264_adapter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video_codecs:vp8_temporal_layers_factory
add_library(webrtc_api_video_codecs_vp8_temporal_layers_factory ${WEBRTC_ROOT}/api/video_codecs/vp8_temporal_layers_factory.cc)
target_include_directories(webrtc_api_video_codecs_vp8_temporal_layers_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_codecs_vp8_temporal_layers_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_codecs_vp8_temporal_layers_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_codecs_vp8_temporal_layers_factory PUBLIC webrtc_api_fec_controller_api webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_vp8_temporal_layers webrtc_rtc_base_checks )

# api/video:encoded_frame
add_library(webrtc_api_video_encoded_frame ${WEBRTC_ROOT}/api/video/encoded_frame.cc)
target_include_directories(webrtc_api_video_encoded_frame PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_encoded_frame PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_encoded_frame PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_encoded_frame PUBLIC absl::optional webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_modules_rtp_rtcp_rtp_video_header webrtc_modules_video_coding_video_codec_interface )

# api/video:encoded_image
add_library(webrtc_api_video_encoded_image ${WEBRTC_ROOT}/api/video/encoded_image.cc)
target_include_directories(webrtc_api_video_encoded_image PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_encoded_image PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_encoded_image PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_encoded_image PUBLIC absl::optional webrtc_api_refcountedbase webrtc_api_rtp_packet_info webrtc_api_scoped_refptr webrtc_api_units_timestamp webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_frame_type webrtc_api_video_video_rtp_headers webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_system_rtc_export )

# api/video:frame_buffer
add_library(webrtc_api_video_frame_buffer ${WEBRTC_ROOT}/api/video/frame_buffer.cc)
target_include_directories(webrtc_api_video_frame_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_frame_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_frame_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_frame_buffer PUBLIC absl::algorithm_container absl::algorithm_container absl::optional webrtc_api_field_trials_view webrtc_api_units_timestamp webrtc_api_video_encoded_frame webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_logging webrtc_rtc_base_rtc_numerics )

# api/video:recordable_encoded_frame
add_library(webrtc_api_video_recordable_encoded_frame INTERFACE)
target_link_libraries(webrtc_api_video_recordable_encoded_frame INTERFACE webrtc_api_array_view webrtc_api_make_ref_counted webrtc_api_scoped_refptr webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers )
target_include_directories(webrtc_api_video_recordable_encoded_frame INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video:render_resolution
add_library(webrtc_api_video_render_resolution INTERFACE)
target_include_directories(webrtc_api_video_render_resolution INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video:resolution
add_library(webrtc_api_video_resolution INTERFACE)
target_include_directories(webrtc_api_video_resolution INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video/test:mock_recordable_encoded_frame
add_library(webrtc_api_video_test_mock_recordable_encoded_frame INTERFACE)
target_link_libraries(webrtc_api_video_test_mock_recordable_encoded_frame INTERFACE webrtc_api_video_recordable_encoded_frame webrtc_test_test_support )
target_include_directories(webrtc_api_video_test_mock_recordable_encoded_frame INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api:video_track_source_constraints
add_library(webrtc_api_video_track_source_constraints INTERFACE)
target_link_libraries(webrtc_api_video_track_source_constraints INTERFACE absl::optional )
target_include_directories(webrtc_api_video_track_source_constraints INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video:video_adaptation
add_library(webrtc_api_video_video_adaptation ${WEBRTC_ROOT}/api/video/video_adaptation_counters.cc)
target_include_directories(webrtc_api_video_video_adaptation PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_video_adaptation PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_video_adaptation PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_video_adaptation PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_stringutils )

# api/video:video_bitrate_allocation
add_library(webrtc_api_video_video_bitrate_allocation ${WEBRTC_ROOT}/api/video/video_bitrate_allocation.cc)
target_include_directories(webrtc_api_video_video_bitrate_allocation PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_video_bitrate_allocation PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_video_bitrate_allocation PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_video_bitrate_allocation PUBLIC absl::optional webrtc_api_video_video_codec_constants webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api/video:video_bitrate_allocator
add_library(webrtc_api_video_video_bitrate_allocator ${WEBRTC_ROOT}/api/video/video_bitrate_allocator.cc)
target_include_directories(webrtc_api_video_video_bitrate_allocator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_video_bitrate_allocator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_video_bitrate_allocator PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_video_bitrate_allocator PUBLIC webrtc_api_units_data_rate webrtc_api_video_video_bitrate_allocation )

# api/video:video_bitrate_allocator_factory
add_library(webrtc_api_video_video_bitrate_allocator_factory INTERFACE)
target_link_libraries(webrtc_api_video_video_bitrate_allocator_factory INTERFACE webrtc_api_video_video_bitrate_allocator webrtc_api_video_codecs_video_codecs_api )
target_include_directories(webrtc_api_video_video_bitrate_allocator_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video:video_codec_constants
add_library(webrtc_api_video_video_codec_constants INTERFACE)
target_include_directories(webrtc_api_video_video_codec_constants INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video:video_frame
add_library(webrtc_api_video_video_frame ${WEBRTC_ROOT}/api/video/i420_buffer.cc ${WEBRTC_ROOT}/api/video/i422_buffer.cc ${WEBRTC_ROOT}/api/video/i444_buffer.cc ${WEBRTC_ROOT}/api/video/nv12_buffer.cc ${WEBRTC_ROOT}/api/video/video_frame.cc ${WEBRTC_ROOT}/api/video/video_frame_buffer.cc ${WEBRTC_ROOT}/api/video/video_source_interface.cc)
target_include_directories(webrtc_api_video_video_frame PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_video_frame PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_video_frame PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_video_frame PUBLIC absl::optional webrtc-yuv webrtc_api_array_view webrtc_api_make_ref_counted webrtc_api_ref_count webrtc_api_rtp_packet_info webrtc_api_scoped_refptr webrtc_api_video_track_source_constraints webrtc_api_video_video_rtp_headers webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_timeutils webrtc_rtc_base_memory_aligned_malloc webrtc_rtc_base_system_rtc_export )

# api/video:video_frame_i010
add_library(webrtc_api_video_video_frame_i010 ${WEBRTC_ROOT}/api/video/i010_buffer.cc ${WEBRTC_ROOT}/api/video/i210_buffer.cc ${WEBRTC_ROOT}/api/video/i410_buffer.cc)
target_include_directories(webrtc_api_video_video_frame_i010 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_video_frame_i010 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_video_frame_i010 PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_video_frame_i010 PUBLIC webrtc-yuv webrtc_api_make_ref_counted webrtc_api_scoped_refptr webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_memory_aligned_malloc )

# api/video:video_frame_metadata
add_library(webrtc_api_video_video_frame_metadata ${WEBRTC_ROOT}/api/video/video_frame_metadata.cc)
target_include_directories(webrtc_api_video_video_frame_metadata PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_video_frame_metadata PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_video_frame_metadata PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_video_frame_metadata PUBLIC absl::algorithm_container absl::optional absl::variant webrtc_api_array_view webrtc_api_transport_rtp_dependency_descriptor webrtc_api_video_video_frame webrtc_api_video_video_frame_type webrtc_api_video_video_rtp_headers webrtc_modules_video_coding_codec_globals_headers webrtc_rtc_base_system_rtc_export )

# api/video:video_frame_type
add_library(webrtc_api_video_video_frame_type INTERFACE)
target_link_libraries(webrtc_api_video_video_frame_type INTERFACE absl::strings webrtc_rtc_base_checks )
target_include_directories(webrtc_api_video_video_frame_type INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video:video_layers_allocation
add_library(webrtc_api_video_video_layers_allocation INTERFACE)
target_link_libraries(webrtc_api_video_video_layers_allocation INTERFACE absl::algorithm_container webrtc_api_units_data_rate )
target_include_directories(webrtc_api_video_video_layers_allocation INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# api/video:video_rtp_headers
add_library(webrtc_api_video_video_rtp_headers ${WEBRTC_ROOT}/api/video/color_space.cc ${WEBRTC_ROOT}/api/video/hdr_metadata.cc ${WEBRTC_ROOT}/api/video/video_content_type.cc ${WEBRTC_ROOT}/api/video/video_timing.cc)
target_include_directories(webrtc_api_video_video_rtp_headers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_api_video_video_rtp_headers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_api_video_video_rtp_headers PRIVATE -fno-rtti )
target_link_libraries(webrtc_api_video_video_rtp_headers PUBLIC absl::algorithm_container absl::optional webrtc_api_array_view webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# api/video:video_stream_encoder
add_library(webrtc_api_video_video_stream_encoder INTERFACE)
target_link_libraries(webrtc_api_video_video_stream_encoder INTERFACE absl::optional webrtc_api_fec_controller_api webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_adaptation_resource_adaptation_api webrtc_api_units_data_rate webrtc_api_video_video_adaptation webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_layers_allocation webrtc_api_video_codecs_video_codecs_api )
target_include_directories(webrtc_api_video_video_stream_encoder INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# audio
add_library(webrtc_audio_audio ${WEBRTC_ROOT}/audio/audio_level.cc ${WEBRTC_ROOT}/audio/audio_receive_stream.cc ${WEBRTC_ROOT}/audio/audio_send_stream.cc ${WEBRTC_ROOT}/audio/audio_state.cc ${WEBRTC_ROOT}/audio/audio_transport_impl.cc ${WEBRTC_ROOT}/audio/channel_receive.cc ${WEBRTC_ROOT}/audio/channel_receive_frame_transformer_delegate.cc ${WEBRTC_ROOT}/audio/channel_send.cc ${WEBRTC_ROOT}/audio/channel_send_frame_transformer_delegate.cc ${WEBRTC_ROOT}/audio/remix_resample.cc)
target_include_directories(webrtc_audio_audio PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_audio_audio PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_audio_audio PRIVATE -fno-rtti )
target_link_libraries(webrtc_audio_audio PUBLIC absl::any_invocable absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_call_api webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_function_view webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_api webrtc_api_audio_aec3_factory webrtc_api_audio_audio_frame_api webrtc_api_audio_audio_frame_processor webrtc_api_audio_audio_mixer_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_neteq_neteq_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_rtp_rtp_source webrtc_api_units_time_delta webrtc_audio_utility_audio_frame_operations webrtc_call_audio_sender_interface webrtc_call_bitrate_allocator webrtc_call_call_interfaces webrtc_call_rtp_interfaces webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_logging_rtc_event_audio webrtc_logging_rtc_stream_config webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_modules_async_audio_processing_async_audio_processing webrtc_modules_audio_coding_audio_coding webrtc_modules_audio_coding_audio_coding_module_typedefs webrtc_modules_audio_coding_audio_encoder_cng webrtc_modules_audio_coding_audio_network_adaptor_config webrtc_modules_audio_coding_red webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_frame_proxies webrtc_modules_audio_processing_rms_level webrtc_modules_pacing_pacing webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_audio_format_to_string webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_rate_limiter webrtc_rtc_base_refcount webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_numerics webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_containers_flat_set webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# audio/utility:audio_frame_operations
add_library(webrtc_audio_utility_audio_frame_operations ${WEBRTC_ROOT}/audio/utility/audio_frame_operations.cc ${WEBRTC_ROOT}/audio/utility/channel_mixer.cc ${WEBRTC_ROOT}/audio/utility/channel_mixing_matrix.cc)
target_include_directories(webrtc_audio_utility_audio_frame_operations PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_audio_utility_audio_frame_operations PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_audio_utility_audio_frame_operations PRIVATE -fno-rtti )
target_link_libraries(webrtc_audio_utility_audio_frame_operations PUBLIC absl::core_headers webrtc_api_audio_audio_frame_api webrtc_common_audio_common_audio webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_system_wrappers_field_trial )

# call/adaptation:resource_adaptation
add_library(webrtc_call_adaptation_resource_adaptation ${WEBRTC_ROOT}/call/adaptation/adaptation_constraint.cc ${WEBRTC_ROOT}/call/adaptation/broadcast_resource_listener.cc ${WEBRTC_ROOT}/call/adaptation/degradation_preference_provider.cc ${WEBRTC_ROOT}/call/adaptation/encoder_settings.cc ${WEBRTC_ROOT}/call/adaptation/resource_adaptation_processor.cc ${WEBRTC_ROOT}/call/adaptation/resource_adaptation_processor_interface.cc ${WEBRTC_ROOT}/call/adaptation/video_source_restrictions.cc ${WEBRTC_ROOT}/call/adaptation/video_stream_adapter.cc ${WEBRTC_ROOT}/call/adaptation/video_stream_input_state.cc ${WEBRTC_ROOT}/call/adaptation/video_stream_input_state_provider.cc)
target_include_directories(webrtc_call_adaptation_resource_adaptation PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_adaptation_resource_adaptation PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_adaptation_resource_adaptation PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_adaptation_resource_adaptation PUBLIC absl::algorithm_container absl::strings absl::optional absl::variant webrtc_api_field_trials_view webrtc_api_make_ref_counted webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_adaptation_resource_adaptation_api webrtc_api_task_queue_task_queue webrtc_api_video_video_adaptation webrtc_api_video_video_frame webrtc_api_video_video_stream_encoder webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_svc_scalability_mode_util webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_refcount webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_experiments_balanced_degradation_settings webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_video_video_stream_encoder_interface webrtc_video_config_encoder_config )

# call/adaptation:resource_adaptation_test_utilities
add_library(webrtc_call_adaptation_resource_adaptation_test_utilities ${WEBRTC_ROOT}/call/adaptation/test/fake_adaptation_constraint.cc ${WEBRTC_ROOT}/call/adaptation/test/fake_frame_rate_provider.cc ${WEBRTC_ROOT}/call/adaptation/test/fake_resource.cc ${WEBRTC_ROOT}/call/adaptation/test/fake_video_stream_input_state_provider.cc)
target_include_directories(webrtc_call_adaptation_resource_adaptation_test_utilities PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_adaptation_resource_adaptation_test_utilities PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_call_adaptation_resource_adaptation_test_utilities PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_adaptation_resource_adaptation_test_utilities PUBLIC absl::strings absl::optional webrtc_api_make_ref_counted webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_adaptation_resource_adaptation_api webrtc_api_task_queue_task_queue webrtc_api_video_video_stream_encoder webrtc_call_adaptation_resource_adaptation webrtc_test_test_support webrtc_video_video_stream_encoder_interface webrtc_video_config_encoder_config )

# call:audio_sender_interface
add_library(webrtc_call_audio_sender_interface INTERFACE)
target_link_libraries(webrtc_call_audio_sender_interface INTERFACE webrtc_api_audio_audio_frame_api )
target_include_directories(webrtc_call_audio_sender_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# call:bitrate_allocator
add_library(webrtc_call_bitrate_allocator ${WEBRTC_ROOT}/call/bitrate_allocator.cc)
target_include_directories(webrtc_call_bitrate_allocator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_bitrate_allocator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_bitrate_allocator PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_bitrate_allocator PUBLIC absl::algorithm_container webrtc_api_bitrate_allocation webrtc_api_sequence_checker webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_minmax webrtc_rtc_base_system_no_unique_address webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# call:bitrate_configurator
add_library(webrtc_call_bitrate_configurator ${WEBRTC_ROOT}/call/rtp_bitrate_configurator.cc)
target_include_directories(webrtc_call_bitrate_configurator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_bitrate_configurator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_bitrate_configurator PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_bitrate_configurator PUBLIC absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_transport_bitrate_settings webrtc_api_units_data_rate webrtc_call_rtp_interfaces webrtc_rtc_base_checks )

# call
add_library(webrtc_call_call ${WEBRTC_ROOT}/call/call.cc ${WEBRTC_ROOT}/call/create_call.cc ${WEBRTC_ROOT}/call/degraded_call.cc ${WEBRTC_ROOT}/call/flexfec_receive_stream_impl.cc ${WEBRTC_ROOT}/call/receive_time_calculator.cc)
target_include_directories(webrtc_call_call PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_call PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_call PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_call PUBLIC absl::bind_front absl::strings absl::optional webrtc_api_array_view webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_sequence_checker webrtc_api_simulated_network_api webrtc_api_transport_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_network_control webrtc_api_units_time_delta webrtc_api_video_codecs_video_codecs_api webrtc_audio_audio webrtc_call_bitrate_allocator webrtc_call_call_interfaces webrtc_call_fake_network webrtc_call_rtp_interfaces webrtc_call_rtp_receiver webrtc_call_rtp_sender webrtc_call_simulated_network webrtc_call_version webrtc_call_video_stream_api webrtc_call_adaptation_resource_adaptation webrtc_logging_rtc_event_audio webrtc_logging_rtc_event_rtp_rtcp webrtc_logging_rtc_event_video webrtc_logging_rtc_stream_config webrtc_modules_congestion_controller_congestion_controller webrtc_modules_pacing_pacing webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_video_coding_video_coding webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rate_limiter webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_network_sent_packet webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics webrtc_video_video webrtc_video_decode_synchronizer webrtc_video_config_encoder_config )

# call:call_interfaces
add_library(webrtc_call_call_interfaces ${WEBRTC_ROOT}/call/audio_receive_stream.cc ${WEBRTC_ROOT}/call/audio_send_stream.cc ${WEBRTC_ROOT}/call/audio_state.cc ${WEBRTC_ROOT}/call/call_config.cc ${WEBRTC_ROOT}/call/flexfec_receive_stream.cc ${WEBRTC_ROOT}/call/syncable.cc)
target_include_directories(webrtc_call_call_interfaces PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_call_interfaces PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_call_interfaces PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_call_interfaces PUBLIC absl::any_invocable absl::bind_front absl::strings absl::optional webrtc_api_fec_controller_api webrtc_api_frame_transformer_interface webrtc_api_network_state_predictor_api webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_transport_api webrtc_api_adaptation_resource_adaptation_api webrtc_api_audio_audio_frame_processor webrtc_api_audio_audio_mixer_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_environment_environment webrtc_api_metronome_metronome webrtc_api_neteq_neteq_api webrtc_api_task_queue_task_queue webrtc_api_transport_bitrate_settings webrtc_api_transport_network_control webrtc_call_audio_sender_interface webrtc_call_receive_stream_interface webrtc_call_rtp_interfaces webrtc_call_video_stream_api webrtc_modules_async_audio_processing_async_audio_processing webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_audio_format_to_string webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_network_route webrtc_rtc_base_refcount webrtc_rtc_base_stringutils webrtc_rtc_base_network_sent_packet )

# call:fake_network
add_library(webrtc_call_fake_network ${WEBRTC_ROOT}/call/fake_network_pipe.cc)
target_include_directories(webrtc_call_fake_network PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_fake_network PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_fake_network PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_fake_network PUBLIC webrtc_api_rtp_parameters webrtc_api_sequence_checker webrtc_api_simulated_network_api webrtc_api_transport_api webrtc_api_units_timestamp webrtc_call_call_interfaces webrtc_call_simulated_network webrtc_call_simulated_packet_receiver webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers )

# call:mock_rtp_interfaces
add_library(webrtc_call_mock_rtp_interfaces INTERFACE)
target_link_libraries(webrtc_call_mock_rtp_interfaces INTERFACE absl::strings webrtc_api_dtmf_sender_interface webrtc_api_frame_transformer_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_transport_bitrate_settings webrtc_call_rtp_interfaces webrtc_modules_pacing_pacing webrtc_rtc_base_network_route webrtc_rtc_base_rate_limiter webrtc_rtc_base_network_sent_packet webrtc_test_test_support )
target_include_directories(webrtc_call_mock_rtp_interfaces INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# call:receive_stream_interface
add_library(webrtc_call_receive_stream_interface INTERFACE)
target_link_libraries(webrtc_call_receive_stream_interface INTERFACE webrtc_api_frame_transformer_interface webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_crypto_frame_decryptor_interface webrtc_api_transport_rtp_rtp_source webrtc_modules_rtp_rtcp_rtp_rtcp_format )
target_include_directories(webrtc_call_receive_stream_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# call:rtp_interfaces
add_library(webrtc_call_rtp_interfaces ${WEBRTC_ROOT}/call/rtp_config.cc)
target_include_directories(webrtc_call_rtp_interfaces PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_rtp_interfaces PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_rtp_interfaces PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_rtp_interfaces PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_network_state_predictor_api webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_crypto_options webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_bitrate_settings webrtc_api_transport_network_control webrtc_api_units_timestamp webrtc_common_video_frame_counts webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_stringutils )

# call:rtp_receiver
add_library(webrtc_call_rtp_receiver ${WEBRTC_ROOT}/call/rtp_demuxer.cc ${WEBRTC_ROOT}/call/rtp_stream_receiver_controller.cc ${WEBRTC_ROOT}/call/rtx_receive_stream.cc)
target_include_directories(webrtc_call_rtp_receiver PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_rtp_receiver PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_rtp_receiver PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_rtp_receiver PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_rtp_headers webrtc_api_sequence_checker webrtc_call_rtp_interfaces webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_containers_flat_map webrtc_rtc_base_containers_flat_set webrtc_rtc_base_system_no_unique_address )

# call:rtp_sender
add_library(webrtc_call_rtp_sender ${WEBRTC_ROOT}/call/rtp_payload_params.cc ${WEBRTC_ROOT}/call/rtp_transport_controller_send.cc ${WEBRTC_ROOT}/call/rtp_video_sender.cc)
target_include_directories(webrtc_call_rtp_sender PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_rtp_sender PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_rtp_sender PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_rtp_sender PUBLIC absl::algorithm_container absl::algorithm_container absl::strings absl::optional absl::variant webrtc_api_array_view webrtc_api_bitrate_allocation webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_network_state_predictor_api webrtc_api_rtp_parameters webrtc_api_sequence_checker webrtc_api_transport_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_field_trial_based_config webrtc_api_transport_goog_cc webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_video_frame webrtc_api_video_video_layers_allocation webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_call_bitrate_configurator webrtc_call_rtp_interfaces webrtc_logging_rtc_event_bwe webrtc_modules_congestion_controller_congestion_controller webrtc_modules_congestion_controller_rtp_control_handler webrtc_modules_congestion_controller_rtp_transport_feedback webrtc_modules_pacing_pacing webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_rtp_rtcp_rtp_video_header webrtc_modules_video_coding_chain_diff_calculator webrtc_modules_video_coding_codec_globals_headers webrtc_modules_video_coding_frame_dependencies_calculator webrtc_modules_video_coding_video_codec_interface webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_route webrtc_rtc_base_race_checker webrtc_rtc_base_random webrtc_rtc_base_rate_limiter webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_task_utils_repeating_task )

# call:simulated_network
add_library(webrtc_call_simulated_network ${WEBRTC_ROOT}/call/simulated_network.cc)
target_include_directories(webrtc_call_simulated_network PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_simulated_network PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_simulated_network PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_simulated_network PUBLIC absl::optional webrtc_api_sequence_checker webrtc_api_simulated_network_api webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_random webrtc_rtc_base_synchronization_mutex )

# call:simulated_packet_receiver
add_library(webrtc_call_simulated_packet_receiver INTERFACE)
target_link_libraries(webrtc_call_simulated_packet_receiver INTERFACE webrtc_api_simulated_network_api webrtc_call_call_interfaces )
target_include_directories(webrtc_call_simulated_packet_receiver INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# call:version
add_library(webrtc_call_version ${WEBRTC_ROOT}/call/version.cc)
target_include_directories(webrtc_call_version PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_version PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_version PRIVATE -fno-rtti )

# call:video_stream_api
add_library(webrtc_call_video_stream_api ${WEBRTC_ROOT}/call/video_receive_stream.cc ${WEBRTC_ROOT}/call/video_send_stream.cc)
target_include_directories(webrtc_call_video_stream_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_call_video_stream_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_call_video_stream_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_call_video_stream_api PUBLIC absl::any_invocable absl::optional webrtc_api_frame_transformer_interface webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_transport_api webrtc_api_adaptation_resource_adaptation_api webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_video_stream_encoder webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_call_receive_stream_interface webrtc_call_rtp_interfaces webrtc_common_video_common_video webrtc_common_video_frame_counts webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_video_config_encoder_config )

# common_audio
add_library(webrtc_common_audio_common_audio ${WEBRTC_ROOT}/common_audio/audio_converter.cc ${WEBRTC_ROOT}/common_audio/audio_util.cc ${WEBRTC_ROOT}/common_audio/channel_buffer.cc ${WEBRTC_ROOT}/common_audio/real_fourier.cc ${WEBRTC_ROOT}/common_audio/real_fourier_ooura.cc ${WEBRTC_ROOT}/common_audio/resampler/push_resampler.cc ${WEBRTC_ROOT}/common_audio/resampler/push_sinc_resampler.cc ${WEBRTC_ROOT}/common_audio/resampler/resampler.cc ${WEBRTC_ROOT}/common_audio/resampler/sinc_resampler.cc ${WEBRTC_ROOT}/common_audio/smoothing_filter.cc ${WEBRTC_ROOT}/common_audio/vad/vad.cc ${WEBRTC_ROOT}/common_audio/wav_file.cc ${WEBRTC_ROOT}/common_audio/wav_header.cc ${WEBRTC_ROOT}/common_audio/window_generator.cc)
target_include_directories(webrtc_common_audio_common_audio PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_audio_common_audio PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_audio_common_audio PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_audio_common_audio PUBLIC webrtc_common_audio_common_audio_avx2 webrtc_common_audio_common_audio_sse2 absl::optional webrtc_fft_size_256 webrtc_api_array_view webrtc_common_audio_common_audio_c webrtc_common_audio_sinc_resampler webrtc_rtc_base_checks webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_rtc_base_sanitizer webrtc_rtc_base_timeutils webrtc_rtc_base_memory_aligned_malloc webrtc_rtc_base_system_arch webrtc_rtc_base_system_file_wrapper webrtc_system_wrappers_system_wrappers )

# common_audio:common_audio_avx2
add_library(webrtc_common_audio_common_audio_avx2 ${WEBRTC_ROOT}/common_audio/fir_filter_avx2.cc ${WEBRTC_ROOT}/common_audio/resampler/sinc_resampler_avx2.cc)
target_include_directories(webrtc_common_audio_common_audio_avx2 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_audio_common_audio_avx2 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_audio_common_audio_avx2 PRIVATE -fno-rtti -march=haswell )
target_link_libraries(webrtc_common_audio_common_audio_avx2 PUBLIC webrtc_common_audio_fir_filter webrtc_common_audio_sinc_resampler webrtc_rtc_base_checks webrtc_rtc_base_memory_aligned_malloc )

# common_audio:common_audio_c
add_library(webrtc_common_audio_common_audio_c ${WEBRTC_ROOT}/common_audio/signal_processing/complex_bit_reverse.c ${WEBRTC_ROOT}/common_audio/signal_processing/filter_ar_fast_q12.c ${WEBRTC_ROOT}/common_audio/ring_buffer.c ${WEBRTC_ROOT}/common_audio/signal_processing/auto_corr_to_refl_coef.c ${WEBRTC_ROOT}/common_audio/signal_processing/auto_correlation.c ${WEBRTC_ROOT}/common_audio/signal_processing/complex_fft.c ${WEBRTC_ROOT}/common_audio/signal_processing/copy_set_operations.c ${WEBRTC_ROOT}/common_audio/signal_processing/cross_correlation.c ${WEBRTC_ROOT}/common_audio/signal_processing/division_operations.c ${WEBRTC_ROOT}/common_audio/signal_processing/downsample_fast.c ${WEBRTC_ROOT}/common_audio/signal_processing/energy.c ${WEBRTC_ROOT}/common_audio/signal_processing/filter_ar.c ${WEBRTC_ROOT}/common_audio/signal_processing/filter_ma_fast_q12.c ${WEBRTC_ROOT}/common_audio/signal_processing/get_hanning_window.c ${WEBRTC_ROOT}/common_audio/signal_processing/get_scaling_square.c ${WEBRTC_ROOT}/common_audio/signal_processing/ilbc_specific_functions.c ${WEBRTC_ROOT}/common_audio/signal_processing/levinson_durbin.c ${WEBRTC_ROOT}/common_audio/signal_processing/lpc_to_refl_coef.c ${WEBRTC_ROOT}/common_audio/signal_processing/min_max_operations.c ${WEBRTC_ROOT}/common_audio/signal_processing/randomization_functions.c ${WEBRTC_ROOT}/common_audio/signal_processing/real_fft.c ${WEBRTC_ROOT}/common_audio/signal_processing/refl_coef_to_lpc.c ${WEBRTC_ROOT}/common_audio/signal_processing/resample.c ${WEBRTC_ROOT}/common_audio/signal_processing/resample_48khz.c ${WEBRTC_ROOT}/common_audio/signal_processing/resample_by_2.c ${WEBRTC_ROOT}/common_audio/signal_processing/resample_by_2_internal.c ${WEBRTC_ROOT}/common_audio/signal_processing/resample_fractional.c ${WEBRTC_ROOT}/common_audio/signal_processing/spl_init.c ${WEBRTC_ROOT}/common_audio/signal_processing/spl_inl.c ${WEBRTC_ROOT}/common_audio/signal_processing/spl_sqrt.c ${WEBRTC_ROOT}/common_audio/signal_processing/splitting_filter.c ${WEBRTC_ROOT}/common_audio/signal_processing/sqrt_of_one_minus_x_squared.c ${WEBRTC_ROOT}/common_audio/signal_processing/vector_scaling_operations.c ${WEBRTC_ROOT}/common_audio/vad/vad_core.c ${WEBRTC_ROOT}/common_audio/vad/vad_filterbank.c ${WEBRTC_ROOT}/common_audio/vad/vad_gmm.c ${WEBRTC_ROOT}/common_audio/vad/vad_sp.c ${WEBRTC_ROOT}/common_audio/vad/webrtc_vad.c)
target_include_directories(webrtc_common_audio_common_audio_c PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_audio_common_audio_c PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_audio_common_audio_c PRIVATE -fno-rtti -x c )
target_link_libraries(webrtc_common_audio_common_audio_c PUBLIC webrtc_fft_size_256 webrtc_spl_sqrt_floor webrtc_common_audio_common_audio_c_arm_asm webrtc_common_audio_common_audio_cc webrtc_rtc_base_checks webrtc_rtc_base_compile_assert_c webrtc_rtc_base_sanitizer webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers )

# common_audio:common_audio_c_arm_asm
add_library(webrtc_common_audio_common_audio_c_arm_asm INTERFACE)
target_include_directories(webrtc_common_audio_common_audio_c_arm_asm INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# common_audio:common_audio_cc
add_library(webrtc_common_audio_common_audio_cc ${WEBRTC_ROOT}/common_audio/signal_processing/dot_product_with_scale.cc)
target_include_directories(webrtc_common_audio_common_audio_cc PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_audio_common_audio_cc PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_audio_common_audio_cc PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_audio_common_audio_cc PUBLIC webrtc_rtc_base_safe_conversions webrtc_system_wrappers_system_wrappers )

# common_audio:common_audio_sse2
add_library(webrtc_common_audio_common_audio_sse2 ${WEBRTC_ROOT}/common_audio/fir_filter_sse.cc ${WEBRTC_ROOT}/common_audio/resampler/sinc_resampler_sse.cc)
target_include_directories(webrtc_common_audio_common_audio_sse2 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_audio_common_audio_sse2 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_audio_common_audio_sse2 PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_audio_common_audio_sse2 PUBLIC webrtc_common_audio_fir_filter webrtc_common_audio_sinc_resampler webrtc_rtc_base_checks webrtc_rtc_base_memory_aligned_malloc )

# common_audio:common_audio_unittests
  android_add_executable(TARGET webrtc_common_audio_common_audio_unittests NODISTRIBUTE SRC ${WEBRTC_ROOT}/common_audio/resampler/sinc_resampler_unittest.cc ${WEBRTC_ROOT}/common_audio/audio_converter_unittest.cc ${WEBRTC_ROOT}/common_audio/audio_util_unittest.cc ${WEBRTC_ROOT}/common_audio/channel_buffer_unittest.cc ${WEBRTC_ROOT}/common_audio/fir_filter_unittest.cc ${WEBRTC_ROOT}/common_audio/real_fourier_unittest.cc ${WEBRTC_ROOT}/common_audio/resampler/push_resampler_unittest.cc ${WEBRTC_ROOT}/common_audio/resampler/push_sinc_resampler_unittest.cc ${WEBRTC_ROOT}/common_audio/resampler/resampler_unittest.cc ${WEBRTC_ROOT}/common_audio/resampler/sinusoidal_linear_chirp_source.cc ${WEBRTC_ROOT}/common_audio/resampler/sinusoidal_linear_chirp_source.h ${WEBRTC_ROOT}/common_audio/ring_buffer_unittest.cc ${WEBRTC_ROOT}/common_audio/signal_processing/real_fft_unittest.cc ${WEBRTC_ROOT}/common_audio/signal_processing/signal_processing_unittest.cc ${WEBRTC_ROOT}/common_audio/smoothing_filter_unittest.cc ${WEBRTC_ROOT}/common_audio/vad/vad_core_unittest.cc ${WEBRTC_ROOT}/common_audio/vad/vad_filterbank_unittest.cc ${WEBRTC_ROOT}/common_audio/vad/vad_gmm_unittest.cc ${WEBRTC_ROOT}/common_audio/vad/vad_sp_unittest.cc ${WEBRTC_ROOT}/common_audio/vad/vad_unittest.cc ${WEBRTC_ROOT}/common_audio/vad/vad_unittest.h ${WEBRTC_ROOT}/common_audio/wav_file_unittest.cc ${WEBRTC_ROOT}/common_audio/wav_header_unittest.cc ${WEBRTC_ROOT}/common_audio/window_generator_unittest.cc)
target_include_directories(webrtc_common_audio_common_audio_unittests PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_audio_common_audio_unittests PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_common_audio_common_audio_unittests PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_audio_common_audio_unittests PUBLIC gmock gtest webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_common_audio_fir_filter webrtc_common_audio_fir_filter_factory webrtc_common_audio_sinc_resampler webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers webrtc_test_fileutils webrtc_test_rtc_expect_death webrtc_test_test_main webrtc_test_test_support )

# common_audio:fir_filter
add_library(webrtc_common_audio_fir_filter INTERFACE)
target_include_directories(webrtc_common_audio_fir_filter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# common_audio:fir_filter_factory
add_library(webrtc_common_audio_fir_filter_factory ${WEBRTC_ROOT}/common_audio/fir_filter_c.cc ${WEBRTC_ROOT}/common_audio/fir_filter_factory.cc)
target_include_directories(webrtc_common_audio_fir_filter_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_audio_fir_filter_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_audio_fir_filter_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_audio_fir_filter_factory PUBLIC webrtc_common_audio_common_audio_avx2 webrtc_common_audio_common_audio_sse2 webrtc_common_audio_fir_filter webrtc_rtc_base_checks webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers )

# common_audio:sinc_resampler
add_library(webrtc_common_audio_sinc_resampler INTERFACE)
target_link_libraries(webrtc_common_audio_sinc_resampler INTERFACE webrtc_rtc_base_gtest_prod webrtc_rtc_base_memory_aligned_malloc webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers )
target_include_directories(webrtc_common_audio_sinc_resampler INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# common_video
add_library(webrtc_common_video_common_video ${WEBRTC_ROOT}/common_video/bitrate_adjuster.cc ${WEBRTC_ROOT}/common_video/frame_rate_estimator.cc ${WEBRTC_ROOT}/common_video/framerate_controller.cc ${WEBRTC_ROOT}/common_video/h264/h264_bitstream_parser.cc ${WEBRTC_ROOT}/common_video/h264/h264_common.cc ${WEBRTC_ROOT}/common_video/h264/pps_parser.cc ${WEBRTC_ROOT}/common_video/h264/sps_parser.cc ${WEBRTC_ROOT}/common_video/h264/sps_vui_rewriter.cc ${WEBRTC_ROOT}/common_video/libyuv/webrtc_libyuv.cc ${WEBRTC_ROOT}/common_video/video_frame_buffer.cc ${WEBRTC_ROOT}/common_video/video_frame_buffer_pool.cc)
target_include_directories(webrtc_common_video_common_video PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_video_common_video PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_video_common_video PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_video_common_video PUBLIC absl::bits absl::optional webrtc-yuv webrtc_api_array_view webrtc_api_make_ref_counted webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_frame webrtc_api_video_video_frame_i010 webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_bitstream_parser_api webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_bit_buffer webrtc_rtc_base_bitstream_reader webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_rate_statistics webrtc_rtc_base_refcount webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_minmax webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_metrics )

# common_video:common_video_unittests
  android_add_executable(TARGET webrtc_common_video_common_video_unittests NODISTRIBUTE SRC ${WEBRTC_ROOT}/common_video/bitrate_adjuster_unittest.cc ${WEBRTC_ROOT}/common_video/frame_rate_estimator_unittest.cc ${WEBRTC_ROOT}/common_video/framerate_controller_unittest.cc ${WEBRTC_ROOT}/common_video/h264/h264_bitstream_parser_unittest.cc ${WEBRTC_ROOT}/common_video/h264/pps_parser_unittest.cc ${WEBRTC_ROOT}/common_video/h264/sps_parser_unittest.cc ${WEBRTC_ROOT}/common_video/h264/sps_vui_rewriter_unittest.cc ${WEBRTC_ROOT}/common_video/libyuv/libyuv_unittest.cc ${WEBRTC_ROOT}/common_video/video_frame_buffer_pool_unittest.cc ${WEBRTC_ROOT}/common_video/video_frame_unittest.cc)
target_include_directories(webrtc_common_video_common_video_unittests PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_video_common_video_unittests PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_common_video_common_video_unittests PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_video_common_video_unittests PUBLIC gmock gtest absl::optional webrtc-yuv webrtc_api_scoped_refptr webrtc_api_units_time_delta webrtc_api_video_video_frame webrtc_api_video_video_frame_i010 webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_rtc_base_bit_buffer webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_timeutils webrtc_system_wrappers_system_wrappers webrtc_test_fileutils webrtc_test_frame_utils webrtc_test_test_main webrtc_test_test_support webrtc_test_video_test_common )

# common_video:frame_counts
add_library(webrtc_common_video_frame_counts INTERFACE)
target_include_directories(webrtc_common_video_frame_counts INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# common_video/generic_frame_descriptor
add_library(webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor ${WEBRTC_ROOT}/common_video/generic_frame_descriptor/generic_frame_info.cc)
target_include_directories(webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor PRIVATE -fno-rtti )
target_link_libraries(webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_api_transport_rtp_dependency_descriptor webrtc_api_video_video_codec_constants webrtc_rtc_base_checks )

# experiments:registered_field_trials
add_library(webrtc_experiments_registered_field_trials INTERFACE)
target_link_libraries(webrtc_experiments_registered_field_trials INTERFACE  )
target_include_directories(webrtc_experiments_registered_field_trials INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# logging:dependency_descriptor_encoder_decoder
add_library(webrtc_logging_dependency_descriptor_encoder_decoder ${WEBRTC_ROOT}/logging/rtc_event_log/dependency_descriptor_encoder_decoder.cc)
target_include_directories(webrtc_logging_dependency_descriptor_encoder_decoder PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_dependency_descriptor_encoder_decoder PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_dependency_descriptor_encoder_decoder PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_dependency_descriptor_encoder_decoder PUBLIC absl::strings absl::optional webrtc_logging_rtc_event_log2_proto_include webrtc_logging_rtc_event_log_delta_encoding webrtc_logging_rtc_event_log_optional_blob_encoding webrtc_logging_rtc_event_log_parse_status webrtc_logging_rtc_event_log_proto webrtc_rtc_base_bitstream_reader webrtc_rtc_base_checks webrtc_rtc_base_logging )

# logging:fake_rtc_event_log
add_library(webrtc_logging_fake_rtc_event_log ${WEBRTC_ROOT}/logging/rtc_event_log/fake_rtc_event_log.cc ${WEBRTC_ROOT}/logging/rtc_event_log/fake_rtc_event_log_factory.cc)
target_include_directories(webrtc_logging_fake_rtc_event_log PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_fake_rtc_event_log PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_fake_rtc_event_log PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_fake_rtc_event_log PUBLIC absl::nullability webrtc_api_environment_environment webrtc_api_rtc_event_log_rtc_event_log webrtc_rtc_base_macromagic webrtc_rtc_base_synchronization_mutex )

# logging:ice_log
add_library(webrtc_logging_ice_log ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_dtls_transport_state.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_dtls_writable_state.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_ice_candidate_pair.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_ice_candidate_pair_config.cc ${WEBRTC_ROOT}/logging/rtc_event_log/ice_logger.cc)
target_include_directories(webrtc_logging_ice_log PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_ice_log PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_ice_log PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_ice_log PUBLIC absl::memory absl::strings webrtc_api_dtls_transport_interface webrtc_api_libjingle_logging_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_field )

# logging:rtc_event_audio
add_library(webrtc_logging_rtc_event_audio ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_audio_network_adaptation.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_audio_playout.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_audio_receive_stream_config.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_audio_send_stream_config.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_neteq_set_minimum_delay.cc)
target_include_directories(webrtc_logging_rtc_event_audio PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_audio PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_audio PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_audio PUBLIC absl::memory absl::strings webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_field webrtc_logging_rtc_stream_config webrtc_modules_audio_coding_audio_network_adaptor_config webrtc_rtc_base_checks )

# logging:rtc_event_begin_end
add_library(webrtc_logging_rtc_event_begin_end ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_begin_log.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_end_log.cc)
target_include_directories(webrtc_logging_rtc_event_begin_end PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_begin_end PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_begin_end PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_begin_end PUBLIC absl::strings webrtc_api_array_view webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_field )

# logging:rtc_event_bwe
add_library(webrtc_logging_rtc_event_bwe ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_bwe_update_delay_based.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_bwe_update_loss_based.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_probe_cluster_created.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_probe_result_failure.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_probe_result_success.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_route_change.cc)
target_include_directories(webrtc_logging_rtc_event_bwe PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_bwe PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_bwe PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_bwe PUBLIC absl::memory absl::strings absl::optional webrtc_api_network_state_predictor_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_data_rate webrtc_api_units_timestamp webrtc_logging_rtc_event_field )

# logging:rtc_event_field
add_library(webrtc_logging_rtc_event_field ${WEBRTC_ROOT}/logging/rtc_event_log/events/fixed_length_encoding_parameters_v3.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_field_encoding.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_field_encoding_parser.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_field_extraction.cc)
target_include_directories(webrtc_logging_rtc_event_field PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_field PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_field PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_field PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_log_parse_status webrtc_logging_rtc_event_number_encodings webrtc_rtc_base_bitstream_reader webrtc_rtc_base_checks webrtc_rtc_base_logging )

# logging:rtc_event_frame_events
add_library(webrtc_logging_rtc_event_frame_events ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_frame_decoded.cc)
target_include_directories(webrtc_logging_rtc_event_frame_events PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_frame_events PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_frame_events PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_frame_events PUBLIC absl::memory absl::strings absl::optional webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_api_video_video_frame webrtc_logging_rtc_event_field webrtc_rtc_base_timeutils )

# logging:rtc_event_generic_packet_events
add_library(webrtc_logging_rtc_event_generic_packet_events ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_generic_ack_received.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_generic_packet_received.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_generic_packet_sent.cc)
target_include_directories(webrtc_logging_rtc_event_generic_packet_events PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_generic_packet_events PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_generic_packet_events PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_generic_packet_events PUBLIC absl::memory absl::strings absl::optional webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_field webrtc_rtc_base_timeutils )

# //third_party/webrtc/files/stable/webrtc/logging:rtc_event_log2_proto
add_library(webrtc_logging_rtc_event_log2_proto)
protobuf_generate_with_plugin(
  TARGET webrtc_logging_rtc_event_log2_proto
  PROTOS  ${WEBRTC_ROOT}/logging/rtc_event_log/rtc_event_log2.proto
  HEADERFILEEXTENSION .pb.h
  APPEND_PATH
  PROTOPATH  -I${WEBRTC_ROOT}/logging/rtc_event_log
  PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/logging/rtc_event_log)
target_include_directories(webrtc_logging_rtc_event_log2_proto PUBLIC  ${CMAKE_CURRENT_BINARY_DIR}/logging/rtc_event_log)
add_library(webrtc_logging_rtc_event_log2_proto_lib ALIAS webrtc_logging_rtc_event_log2_proto)
target_link_libraries(webrtc_logging_rtc_event_log2_proto PUBLIC libprotobuf)

# logging:rtc_event_log2_proto_include
add_library(webrtc_logging_rtc_event_log2_proto_include INTERFACE)
target_link_libraries(webrtc_logging_rtc_event_log2_proto_include INTERFACE webrtc_logging_rtc_event_log2_proto )
target_include_directories(webrtc_logging_rtc_event_log2_proto_include INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# logging:rtc_event_log_api
add_library(webrtc_logging_rtc_event_log_api INTERFACE)
target_link_libraries(webrtc_logging_rtc_event_log_api INTERFACE webrtc_api_rtc_event_log_rtc_event_log )
target_include_directories(webrtc_logging_rtc_event_log_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# logging:rtc_event_log_blob_encoding
add_library(webrtc_logging_rtc_event_log_blob_encoding ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/blob_encoding.cc)
target_include_directories(webrtc_logging_rtc_event_log_blob_encoding PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_log_blob_encoding PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_log_blob_encoding PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_log_blob_encoding PUBLIC absl::strings webrtc_logging_rtc_event_number_encodings webrtc_rtc_base_checks webrtc_rtc_base_logging )

# logging:rtc_event_log_delta_encoding
add_library(webrtc_logging_rtc_event_log_delta_encoding ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/delta_encoding.cc)
target_include_directories(webrtc_logging_rtc_event_log_delta_encoding PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_log_delta_encoding PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_log_delta_encoding PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_log_delta_encoding PUBLIC absl::memory absl::strings absl::optional webrtc_logging_rtc_event_number_encodings webrtc_rtc_base_bit_buffer webrtc_rtc_base_bitstream_reader webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions )

# logging:rtc_event_log_impl
add_library(webrtc_logging_rtc_event_log_impl ${WEBRTC_ROOT}/logging/rtc_event_log/rtc_event_log_impl.cc)
target_include_directories(webrtc_logging_rtc_event_log_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_log_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_log_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_log_impl PUBLIC absl::strings absl::optional webrtc_api_libjingle_logging_api webrtc_api_sequence_checker webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_logging_ice_log webrtc_logging_rtc_event_log_api webrtc_logging_rtc_event_log_impl_encoder webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_timeutils webrtc_rtc_base_system_no_unique_address )

# logging:rtc_event_log_impl_encoder
add_library(webrtc_logging_rtc_event_log_impl_encoder ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/rtc_event_log_encoder_legacy.cc ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/rtc_event_log_encoder_v3.cc)
target_include_directories(webrtc_logging_rtc_event_log_impl_encoder PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_log_impl_encoder PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_log_impl_encoder PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_log_impl_encoder PUBLIC absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_network_state_predictor_api webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_transport_network_control webrtc_logging_dependency_descriptor_encoder_decoder webrtc_logging_ice_log webrtc_logging_rtc_event_audio webrtc_logging_rtc_event_begin_end webrtc_logging_rtc_event_bwe webrtc_logging_rtc_event_field webrtc_logging_rtc_event_frame_events webrtc_logging_rtc_event_generic_packet_events webrtc_logging_rtc_event_log2_proto webrtc_logging_rtc_event_log_api webrtc_logging_rtc_event_log_blob_encoding webrtc_logging_rtc_event_log_delta_encoding webrtc_logging_rtc_event_log_proto webrtc_logging_rtc_event_number_encodings webrtc_logging_rtc_event_pacing webrtc_logging_rtc_event_rtp_rtcp webrtc_logging_rtc_event_video webrtc_logging_rtc_stream_config webrtc_modules_audio_coding_audio_network_adaptor webrtc_modules_audio_coding_audio_network_adaptor_config webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_bit_buffer webrtc_rtc_base_bitstream_reader webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_system_wrappers_field_trial )

# logging:rtc_event_log_optional_blob_encoding
add_library(webrtc_logging_rtc_event_log_optional_blob_encoding ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/optional_blob_encoding.cc)
target_include_directories(webrtc_logging_rtc_event_log_optional_blob_encoding PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_log_optional_blob_encoding PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_log_optional_blob_encoding PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_log_optional_blob_encoding PUBLIC absl::strings absl::optional webrtc_rtc_base_bit_buffer webrtc_rtc_base_bitstream_reader webrtc_rtc_base_checks webrtc_rtc_base_logging )

# logging:rtc_event_log_parse_status
add_library(webrtc_logging_rtc_event_log_parse_status INTERFACE)
target_link_libraries(webrtc_logging_rtc_event_log_parse_status INTERFACE absl::strings webrtc_rtc_base_checks )
target_include_directories(webrtc_logging_rtc_event_log_parse_status INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# logging:rtc_event_log_parser
add_library(webrtc_logging_rtc_event_log_parser ${WEBRTC_ROOT}/logging/rtc_event_log/rtc_event_log_parser.cc ${WEBRTC_ROOT}/logging/rtc_event_log/rtc_event_processor.cc)
target_include_directories(webrtc_logging_rtc_event_log_parser PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_log_parser PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN GOOGLE_PROTOBUF_NO_RTTI GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_log_parser PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_log_parser PUBLIC absl::core_headers absl::memory absl::strings absl::optional webrtc_api_function_view webrtc_api_network_state_predictor_api webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_video_frame webrtc_call_video_stream_api webrtc_logging_dependency_descriptor_encoder_decoder webrtc_logging_ice_log webrtc_logging_rtc_event_audio webrtc_logging_rtc_event_begin_end webrtc_logging_rtc_event_bwe webrtc_logging_rtc_event_frame_events webrtc_logging_rtc_event_generic_packet_events webrtc_logging_rtc_event_log2_proto webrtc_logging_rtc_event_log_blob_encoding webrtc_logging_rtc_event_log_delta_encoding webrtc_logging_rtc_event_log_impl_encoder webrtc_logging_rtc_event_log_proto webrtc_logging_rtc_event_number_encodings webrtc_logging_rtc_event_pacing webrtc_logging_rtc_event_rtp_rtcp webrtc_logging_rtc_event_video webrtc_logging_rtc_stream_config webrtc_modules_module_api_public webrtc_modules_audio_coding_audio_network_adaptor webrtc_modules_audio_coding_audio_network_adaptor_config webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_logging webrtc_rtc_base_protobuf_utils webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_system_file_wrapper )

# //third_party/webrtc/files/stable/webrtc/logging:rtc_event_log_proto
add_library(webrtc_logging_rtc_event_log_proto)
protobuf_generate_with_plugin(
  TARGET webrtc_logging_rtc_event_log_proto
  PROTOS  ${WEBRTC_ROOT}/logging/rtc_event_log/rtc_event_log.proto
  HEADERFILEEXTENSION .pb.h
  APPEND_PATH
  PROTOPATH  -I${WEBRTC_ROOT}/logging/rtc_event_log
  PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/logging/rtc_event_log)
target_include_directories(webrtc_logging_rtc_event_log_proto PUBLIC  ${CMAKE_CURRENT_BINARY_DIR}/logging/rtc_event_log)
add_library(webrtc_logging_rtc_event_log_proto_lib ALIAS webrtc_logging_rtc_event_log_proto)
target_link_libraries(webrtc_logging_rtc_event_log_proto PUBLIC libprotobuf)

# logging:rtc_event_number_encodings
add_library(webrtc_logging_rtc_event_number_encodings ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/bit_writer.cc ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/rtc_event_log_encoder_common.cc ${WEBRTC_ROOT}/logging/rtc_event_log/encoder/var_int.cc)
target_include_directories(webrtc_logging_rtc_event_number_encodings PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_number_encodings PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_number_encodings PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_number_encodings PUBLIC absl::memory absl::strings absl::optional webrtc_rtc_base_bit_buffer webrtc_rtc_base_bitstream_reader webrtc_rtc_base_checks webrtc_rtc_base_macromagic )

# logging:rtc_event_pacing
add_library(webrtc_logging_rtc_event_pacing ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_alr_state.cc)
target_include_directories(webrtc_logging_rtc_event_pacing PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_pacing PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_pacing PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_pacing PUBLIC absl::memory absl::strings webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_field )

# logging:rtc_event_rtp_rtcp
add_library(webrtc_logging_rtc_event_rtp_rtcp ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_rtcp_packet_incoming.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_rtcp_packet_outgoing.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_rtp_packet_incoming.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_rtp_packet_outgoing.cc)
target_include_directories(webrtc_logging_rtc_event_rtp_rtcp PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_rtp_rtcp PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_rtp_rtcp PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_rtp_rtcp PUBLIC absl::memory absl::strings webrtc_api_array_view webrtc_api_rtp_headers webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_field webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_buffer webrtc_rtc_base_checks )

# logging:rtc_event_video
add_library(webrtc_logging_rtc_event_video ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_video_receive_stream_config.cc ${WEBRTC_ROOT}/logging/rtc_event_log/events/rtc_event_video_send_stream_config.cc)
target_include_directories(webrtc_logging_rtc_event_video PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_event_video PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_event_video PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_event_video PUBLIC absl::memory absl::strings webrtc_api_rtc_event_log_rtc_event_log webrtc_api_units_timestamp webrtc_logging_rtc_event_field webrtc_logging_rtc_stream_config webrtc_rtc_base_checks )

# logging:rtc_stream_config
add_library(webrtc_logging_rtc_stream_config ${WEBRTC_ROOT}/logging/rtc_event_log/rtc_stream_config.cc)
target_include_directories(webrtc_logging_rtc_stream_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_logging_rtc_stream_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_logging_rtc_stream_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_logging_rtc_stream_config PUBLIC absl::strings webrtc_api_rtp_headers webrtc_api_rtp_parameters )

# media:codec
add_library(webrtc_media_codec ${WEBRTC_ROOT}/media/base/codec.cc)
target_include_directories(webrtc_media_codec PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_codec PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_codec PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_codec PUBLIC absl::algorithm_container absl::algorithm_container absl::strings absl::optional webrtc_api_rtp_parameters webrtc_api_audio_codecs_audio_codecs_api webrtc_api_video_codecs_video_codecs_api webrtc_media_media_constants webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# media:media_channel
add_library(webrtc_media_media_channel INTERFACE)
target_link_libraries(webrtc_media_media_channel INTERFACE absl::any_invocable absl::strings absl::optional webrtc_api_audio_options_api webrtc_api_call_api webrtc_api_frame_transformer_interface webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_datagram_transport_interface webrtc_api_transport_rtp_rtp_source webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_call_video_stream_api webrtc_common_video_common_video webrtc_media_codec webrtc_media_media_constants webrtc_media_rtp_utils webrtc_media_stream_params webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_async_packet_socket webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_dscp webrtc_rtc_base_logging webrtc_rtc_base_network_route webrtc_rtc_base_socket webrtc_rtc_base_stringutils webrtc_rtc_base_network_sent_packet webrtc_video_config_encoder_config )
target_include_directories(webrtc_media_media_channel INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# media:media_channel_impl
add_library(webrtc_media_media_channel_impl ${WEBRTC_ROOT}/media/base/media_channel_impl.cc)
target_include_directories(webrtc_media_media_channel_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_media_channel_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_media_channel_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_media_channel_impl PUBLIC absl::any_invocable absl::strings absl::optional webrtc_api_audio_options_api webrtc_api_call_api webrtc_api_frame_transformer_interface webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_rtp_rtp_source webrtc_api_units_time_delta webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_media_codec webrtc_media_media_channel webrtc_media_rtp_utils webrtc_media_stream_params webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_async_packet_socket webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_dscp webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_route webrtc_rtc_base_socket webrtc_rtc_base_network_sent_packet )

# media:media_constants
add_library(webrtc_media_media_constants ${WEBRTC_ROOT}/media/base/media_constants.cc)
target_include_directories(webrtc_media_media_constants PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_media_constants PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_media_constants PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_media_constants PUBLIC webrtc_rtc_base_system_rtc_export )

# media:rid_description
add_library(webrtc_media_rid_description ${WEBRTC_ROOT}/media/base/rid_description.cc)
target_include_directories(webrtc_media_rid_description PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rid_description PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rid_description PRIVATE -fno-rtti )

# media:rtc_audio_video
add_library(webrtc_media_rtc_audio_video ${WEBRTC_ROOT}/media/engine/adm_helpers.cc ${WEBRTC_ROOT}/media/engine/payload_type_mapper.cc ${WEBRTC_ROOT}/media/engine/webrtc_media_engine.cc ${WEBRTC_ROOT}/media/engine/webrtc_video_engine.cc ${WEBRTC_ROOT}/media/engine/webrtc_voice_engine.cc)
target_include_directories(webrtc_media_rtc_audio_video PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_audio_video PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN HAVE_WEBRTC_VIDEO RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtc_audio_video PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_audio_video PUBLIC absl::algorithm absl::algorithm_container absl::algorithm_container absl::any_invocable absl::bind_front absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_options_api webrtc_api_call_api webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_media_stream_interface webrtc_api_priority webrtc_api_rtc_error webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_api webrtc_api_audio_audio_frame_api webrtc_api_audio_audio_frame_processor webrtc_api_audio_audio_mixer_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_bitrate_settings webrtc_api_transport_field_trial_based_config webrtc_api_transport_rtp_rtp_source webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_recordable_encoded_frame webrtc_api_video_resolution webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_video_stream_encoder webrtc_api_video_codecs_rtc_software_fallback_wrappers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_call_call webrtc_call_call_interfaces webrtc_call_receive_stream_interface webrtc_call_rtp_interfaces webrtc_call_video_stream_api webrtc_common_video_common_video webrtc_common_video_frame_counts webrtc_media_codec webrtc_media_media_channel webrtc_media_media_channel_impl webrtc_media_media_constants webrtc_media_rid_description webrtc_media_rtc_media_base webrtc_media_rtc_media_config webrtc_media_rtp_utils webrtc_media_stream_params webrtc_modules_async_audio_processing_async_audio_processing webrtc_modules_audio_coding_ana_config_proto webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl webrtc_modules_audio_mixer_audio_mixer_impl webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_audio_processing_aec_dump_aec_dump webrtc_modules_audio_processing_aec_dump_aec_dump_impl webrtc_modules_audio_processing_agc_gain_control_interface webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_video_capture_video_capture_internal_impl webrtc_modules_video_coding_video_coding webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_vp9_helpers webrtc_modules_video_coding_svc_scalability_mode_util webrtc_rtc_base_audio_format_to_string webrtc_rtc_base_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_dscp webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_route webrtc_rtc_base_race_checker webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_socket webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_min_video_bitrate_experiment webrtc_rtc_base_experiments_normalize_simulcast_size_experiment webrtc_rtc_base_experiments_rate_control_settings webrtc_rtc_base_network_sent_packet webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_file_wrapper webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export webrtc_rtc_base_third_party_base64_base64 webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_metrics webrtc_video_config_encoder_config )

# media:rtc_data_dcsctp_transport
add_library(webrtc_media_rtc_data_dcsctp_transport ${WEBRTC_ROOT}/media/sctp/dcsctp_transport.cc)
target_include_directories(webrtc_media_rtc_data_dcsctp_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_data_dcsctp_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtc_data_dcsctp_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_data_dcsctp_transport PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_media_media_channel webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_net_dcsctp_public_factory webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_public_utils webrtc_net_dcsctp_timer_task_queue_timeout webrtc_p2p_rtc_p2p webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_random webrtc_rtc_base_socket webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_containers_flat_map webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_system_wrappers )

# media:rtc_data_sctp_transport_factory
add_library(webrtc_media_rtc_data_sctp_transport_factory ${WEBRTC_ROOT}/media/sctp/sctp_transport_factory.cc)
target_include_directories(webrtc_media_rtc_data_sctp_transport_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_data_sctp_transport_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_DCSCTP WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtc_data_sctp_transport_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_data_sctp_transport_factory PUBLIC webrtc_api_transport_sctp_transport_factory_interface webrtc_media_rtc_data_dcsctp_transport webrtc_media_rtc_data_sctp_transport_internal webrtc_rtc_base_threading webrtc_rtc_base_system_unused webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial )

# media:rtc_data_sctp_transport_internal
add_library(webrtc_media_rtc_data_sctp_transport_internal INTERFACE)
target_link_libraries(webrtc_media_rtc_data_sctp_transport_internal INTERFACE webrtc_api_rtc_error webrtc_api_transport_datagram_transport_interface webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_p2p_rtc_p2p webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_threading )
target_include_directories(webrtc_media_rtc_data_sctp_transport_internal INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# media:rtc_internal_video_codecs
add_library(webrtc_media_rtc_internal_video_codecs ${WEBRTC_ROOT}/media/engine/fake_video_codec_factory.cc ${WEBRTC_ROOT}/media/engine/internal_decoder_factory.cc ${WEBRTC_ROOT}/media/engine/internal_encoder_factory.cc ${WEBRTC_ROOT}/media/engine/multiplex_codec_factory.cc)
target_include_directories(webrtc_media_rtc_internal_video_codecs PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_internal_video_codecs PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtc_internal_video_codecs PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_internal_video_codecs PUBLIC absl::strings absl::optional webrtc_api_video_encoded_image webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_rtc_software_fallback_wrappers webrtc_api_video_codecs_video_codecs_api webrtc_api_video_codecs_video_encoder_factory_template webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp8_adapter webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp9_adapter webrtc_api_video_codecs_video_encoder_factory_template_open_h264_adapter webrtc_call_call_interfaces webrtc_call_video_stream_api webrtc_media_codec webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_media_rtc_simulcast_encoder_adapter webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_webrtc_h264 webrtc_modules_video_coding_webrtc_multiplex webrtc_modules_video_coding_webrtc_vp8 webrtc_modules_video_coding_webrtc_vp9 webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_field_trial webrtc_test_fake_video_codecs )

# media:rtc_media
add_library(webrtc_media_rtc_media INTERFACE)
target_link_libraries(webrtc_media_rtc_media INTERFACE webrtc_media_rtc_audio_video )
target_include_directories(webrtc_media_rtc_media INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# media:rtc_media_base
add_library(webrtc_media_rtc_media_base ${WEBRTC_ROOT}/media/base/adapted_video_track_source.cc ${WEBRTC_ROOT}/media/base/media_engine.cc ${WEBRTC_ROOT}/media/base/video_adapter.cc ${WEBRTC_ROOT}/media/base/video_broadcaster.cc ${WEBRTC_ROOT}/media/base/video_common.cc ${WEBRTC_ROOT}/media/base/video_source_base.cc)
target_include_directories(webrtc_media_rtc_media_base PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_media_base PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtc_media_base PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_media_base PUBLIC absl::algorithm_container absl::algorithm_container absl::any_invocable absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_options_api webrtc_api_call_api webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_api webrtc_api_audio_audio_frame_processor webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_datagram_transport_interface webrtc_api_transport_stun_types webrtc_api_transport_rtp_rtp_source webrtc_api_units_time_delta webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_call_call_interfaces webrtc_call_video_stream_api webrtc_common_video_common_video webrtc_media_codec webrtc_media_media_channel webrtc_media_media_channel_impl webrtc_media_rid_description webrtc_media_rtc_media_config webrtc_media_rtp_utils webrtc_media_stream_params webrtc_modules_async_audio_processing_async_audio_processing webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_async_packet_socket webrtc_rtc_base_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_dscp webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_route webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_sanitizer webrtc_rtc_base_socket webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_unique_id_generator webrtc_rtc_base_network_sent_packet webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_file_wrapper webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_field_trial webrtc_video_config_encoder_config )

# media:rtc_media_config
add_library(webrtc_media_rtc_media_config INTERFACE)
target_include_directories(webrtc_media_rtc_media_config INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# media:rtc_media_tests_utils
add_library(webrtc_media_rtc_media_tests_utils ${WEBRTC_ROOT}/media/base/fake_frame_source.cc ${WEBRTC_ROOT}/media/base/fake_media_engine.cc ${WEBRTC_ROOT}/media/base/fake_rtp.cc ${WEBRTC_ROOT}/media/base/fake_video_renderer.cc ${WEBRTC_ROOT}/media/base/test_utils.cc ${WEBRTC_ROOT}/media/engine/fake_webrtc_call.cc ${WEBRTC_ROOT}/media/engine/fake_webrtc_video_engine.cc)
target_include_directories(webrtc_media_rtc_media_tests_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_media_tests_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN HAVE_WEBRTC_VIDEO RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_media_rtc_media_tests_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_media_tests_utils PUBLIC gmock gtest absl::algorithm_container absl::any_invocable absl::strings absl::optional webrtc_api_call_api webrtc_api_fec_controller_api webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_field_trial_based_config webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_call_call_interfaces webrtc_call_mock_rtp_interfaces webrtc_call_video_stream_api webrtc_common_video_common_video webrtc_media_codec webrtc_media_media_channel webrtc_media_media_channel_impl webrtc_media_media_constants webrtc_media_rtc_audio_video webrtc_media_rtc_internal_video_codecs webrtc_media_rtc_media webrtc_media_rtc_media_base webrtc_media_rtc_simulcast_encoder_adapter webrtc_media_rtp_utils webrtc_media_stream_params webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_api webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_svc_scalability_mode_util webrtc_p2p_rtc_p2p webrtc_rtc_base_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_dscp webrtc_rtc_base_gunit_helpers webrtc_rtc_base_macromagic webrtc_rtc_base_network_route webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_third_party_sigslot_sigslot webrtc_test_scoped_key_value_config webrtc_test_test_support webrtc_video_config_streams_config )

# media:rtc_media_unittests
  android_add_executable(TARGET webrtc_media_rtc_media_unittests NODISTRIBUTE SRC ${WEBRTC_ROOT}/media/engine/webrtc_voice_engine_unittest.cc ${WEBRTC_ROOT}/media/base/codec_unittest.cc ${WEBRTC_ROOT}/media/base/media_engine_unittest.cc ${WEBRTC_ROOT}/media/base/rtp_utils_unittest.cc ${WEBRTC_ROOT}/media/base/sdp_video_format_utils_unittest.cc ${WEBRTC_ROOT}/media/base/stream_params_unittest.cc ${WEBRTC_ROOT}/media/base/turn_utils_unittest.cc ${WEBRTC_ROOT}/media/base/video_adapter_unittest.cc ${WEBRTC_ROOT}/media/base/video_broadcaster_unittest.cc ${WEBRTC_ROOT}/media/base/video_common_unittest.cc ${WEBRTC_ROOT}/media/engine/internal_decoder_factory_unittest.cc ${WEBRTC_ROOT}/media/engine/internal_encoder_factory_unittest.cc ${WEBRTC_ROOT}/media/engine/multiplex_codec_factory_unittest.cc ${WEBRTC_ROOT}/media/engine/null_webrtc_video_engine_unittest.cc ${WEBRTC_ROOT}/media/engine/payload_type_mapper_unittest.cc ${WEBRTC_ROOT}/media/engine/simulcast_encoder_adapter_unittest.cc ${WEBRTC_ROOT}/media/engine/webrtc_media_engine_unittest.cc ${WEBRTC_ROOT}/media/engine/webrtc_video_engine_unittest.cc ${WEBRTC_ROOT}/media/sctp/dcsctp_transport_unittest.cc)
target_include_directories(webrtc_media_rtc_media_unittests PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_media_unittests PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN HAVE_WEBRTC_VIDEO RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_OPUS_SUPPORT_120MS_PTIME=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_media_rtc_media_unittests PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_media_unittests PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_create_simulcast_test_fixture_api webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_libjingle_peerconnection_api webrtc_api_mock_encoder_selector webrtc_api_mock_video_bitrate_allocator webrtc_api_mock_video_bitrate_allocator_factory webrtc_api_mock_video_codec_factory webrtc_api_mock_video_encoder webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_simulcast_test_fixture_api webrtc_api_audio_codecs_builtin_audio_decoder_factory webrtc_api_audio_codecs_builtin_audio_encoder_factory webrtc_api_environment_environment webrtc_api_environment_environment_factory webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_task_queue_default_task_queue_factory webrtc_api_test_video_function_video_factory webrtc_api_transport_field_trial_based_config webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_resolution webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_api_video_codecs_video_decoder_factory_template webrtc_api_video_codecs_video_decoder_factory_template_dav1d_adapter webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp8_adapter webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp9_adapter webrtc_api_video_codecs_video_decoder_factory_template_open_h264_adapter webrtc_api_video_codecs_video_encoder_factory_template webrtc_api_video_codecs_video_encoder_factory_template_libaom_av1_adapter webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp8_adapter webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp9_adapter webrtc_api_video_codecs_video_encoder_factory_template_open_h264_adapter webrtc_audio_audio webrtc_call_call_interfaces webrtc_common_video_common_video webrtc_media_codec webrtc_media_media_channel webrtc_media_media_constants webrtc_media_rtc_audio_video webrtc_media_rtc_data_dcsctp_transport webrtc_media_rtc_internal_video_codecs webrtc_media_rtc_media webrtc_media_rtc_media_base webrtc_media_rtc_media_tests_utils webrtc_media_rtc_sdp_video_format_utils webrtc_media_rtc_simulcast_encoder_adapter webrtc_media_rtp_utils webrtc_media_stream_params webrtc_media_turn_utils webrtc_modules_audio_device_mock_audio_device webrtc_modules_audio_mixer_audio_mixer_impl webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_api webrtc_modules_audio_processing_mocks webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_video_coding_simulcast_test_fixture_impl webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_webrtc_h264 webrtc_modules_video_coding_webrtc_vp8 webrtc_modules_video_coding_svc_scalability_mode_util webrtc_net_dcsctp_public_factory webrtc_net_dcsctp_public_mocks webrtc_net_dcsctp_public_socket webrtc_p2p_p2p_test_utils webrtc_rtc_base_async_packet_socket webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_gunit_helpers webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_min_video_bitrate_experiment webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_field_trial webrtc_test_audio_codec_mocks webrtc_test_fake_video_codecs webrtc_test_field_trial webrtc_test_rtp_test_utils webrtc_test_scoped_key_value_config webrtc_test_test_main webrtc_test_test_support webrtc_test_video_test_common webrtc_test_time_controller_time_controller webrtc_video_config_streams_config )

# media:rtc_sdp_video_format_utils
add_library(webrtc_media_rtc_sdp_video_format_utils ${WEBRTC_ROOT}/media/base/sdp_video_format_utils.cc)
target_include_directories(webrtc_media_rtc_sdp_video_format_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_sdp_video_format_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtc_sdp_video_format_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_sdp_video_format_utils PUBLIC absl::optional webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_checks webrtc_rtc_base_stringutils )

# media:rtc_simulcast_encoder_adapter
add_library(webrtc_media_rtc_simulcast_encoder_adapter ${WEBRTC_ROOT}/media/engine/simulcast_encoder_adapter.cc)
target_include_directories(webrtc_media_rtc_simulcast_encoder_adapter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtc_simulcast_encoder_adapter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtc_simulcast_encoder_adapter PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtc_simulcast_encoder_adapter PUBLIC absl::algorithm_container absl::optional webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_field_trial_based_config webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_rtc_software_fallback_wrappers webrtc_api_video_codecs_video_codecs_api webrtc_call_video_stream_api webrtc_common_video_common_video webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_experiments_encoder_info_settings webrtc_rtc_base_experiments_rate_control_settings webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_system_wrappers )

# media:rtp_utils
add_library(webrtc_media_rtp_utils ${WEBRTC_ROOT}/media/base/rtp_utils.cc)
target_include_directories(webrtc_media_rtp_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_rtp_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_rtp_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_rtp_utils PUBLIC absl::strings webrtc_api_array_view webrtc_media_turn_utils webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_async_packet_socket webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_ssl webrtc_rtc_base_system_rtc_export )

# media:stream_params
add_library(webrtc_media_stream_params ${WEBRTC_ROOT}/media/base/stream_params.cc)
target_include_directories(webrtc_media_stream_params PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_stream_params PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_stream_params PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_stream_params PUBLIC absl::algorithm_container webrtc_api_array_view webrtc_media_rid_description webrtc_rtc_base_stringutils webrtc_rtc_base_unique_id_generator )

# media:turn_utils
add_library(webrtc_media_turn_utils ${WEBRTC_ROOT}/media/base/turn_utils.cc)
target_include_directories(webrtc_media_turn_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_media_turn_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_media_turn_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_media_turn_utils PUBLIC webrtc_api_transport_stun_types webrtc_rtc_base_byte_order webrtc_rtc_base_system_rtc_export )

# modules/async_audio_processing
add_library(webrtc_modules_async_audio_processing_async_audio_processing ${WEBRTC_ROOT}/modules/async_audio_processing/async_audio_processing.cc ${WEBRTC_ROOT}/modules/async_audio_processing/async_audio_processing.h)
target_include_directories(webrtc_modules_async_audio_processing_async_audio_processing PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_async_audio_processing_async_audio_processing PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_async_audio_processing_async_audio_processing PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_async_audio_processing_async_audio_processing PUBLIC webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_audio_audio_frame_api webrtc_api_audio_audio_frame_processor webrtc_api_task_queue_task_queue webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_rtc_task_queue )

# //third_party/webrtc/files/stable/webrtc/modules/audio_coding:ana_config_proto
add_library(webrtc_modules_audio_coding_ana_config_proto)
protobuf_generate_with_plugin(
  TARGET webrtc_modules_audio_coding_ana_config_proto
  PROTOS  ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/config.proto
  HEADERFILEEXTENSION .pb.h
  APPEND_PATH
  PROTOPATH  -I${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor
  PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/modules/audio_coding/audio_network_adaptor)
target_include_directories(webrtc_modules_audio_coding_ana_config_proto PUBLIC  ${CMAKE_CURRENT_BINARY_DIR}/modules/audio_coding/audio_network_adaptor)
add_library(webrtc_modules_audio_coding_ana_config_proto_lib ALIAS webrtc_modules_audio_coding_ana_config_proto)
target_link_libraries(webrtc_modules_audio_coding_ana_config_proto PUBLIC libprotobuf)

# //third_party/webrtc/files/stable/webrtc/modules/audio_coding:ana_debug_dump_proto
add_library(webrtc_modules_audio_coding_ana_debug_dump_proto)
protobuf_generate_with_plugin(
  TARGET webrtc_modules_audio_coding_ana_debug_dump_proto
  PROTOS  ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/debug_dump.proto
  HEADERFILEEXTENSION .pb.h
  APPEND_PATH
  PROTOPATH  -I${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor
  PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/modules/audio_coding/audio_network_adaptor)
target_include_directories(webrtc_modules_audio_coding_ana_debug_dump_proto PUBLIC  ${CMAKE_CURRENT_BINARY_DIR}/modules/audio_coding/audio_network_adaptor)
add_library(webrtc_modules_audio_coding_ana_debug_dump_proto_lib ALIAS webrtc_modules_audio_coding_ana_debug_dump_proto)
target_link_libraries(webrtc_modules_audio_coding_ana_debug_dump_proto PUBLIC libprotobuf)
target_link_libraries(webrtc_modules_audio_coding_ana_debug_dump_proto PRIVATE webrtc_modules_audio_coding_ana_config_proto_lib)

# modules/audio_coding
add_library(webrtc_modules_audio_coding_audio_coding ${WEBRTC_ROOT}/modules/audio_coding/acm2/acm_receiver.cc ${WEBRTC_ROOT}/modules/audio_coding/acm2/acm_remixing.cc ${WEBRTC_ROOT}/modules/audio_coding/acm2/acm_resampler.cc ${WEBRTC_ROOT}/modules/audio_coding/acm2/audio_coding_module.cc ${WEBRTC_ROOT}/modules/audio_coding/acm2/call_statistics.cc)
target_include_directories(webrtc_modules_audio_coding_audio_coding PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_audio_coding PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_audio_coding PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_audio_coding PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_function_view webrtc_api_audio_audio_frame_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_neteq_neteq_api webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_modules_module_api webrtc_modules_module_api_public webrtc_modules_audio_coding_audio_coding_module_typedefs webrtc_modules_audio_coding_default_neteq_factory webrtc_modules_audio_coding_neteq webrtc_rtc_base_audio_format_to_string webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_safe_conversions webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_metrics )

# modules/audio_coding:audio_coding_module_typedefs
add_library(webrtc_modules_audio_coding_audio_coding_module_typedefs INTERFACE)
target_include_directories(webrtc_modules_audio_coding_audio_coding_module_typedefs INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_coding:audio_coding_opus_common
add_library(webrtc_modules_audio_coding_audio_coding_opus_common ${WEBRTC_ROOT}/modules/audio_coding/codecs/opus/audio_coder_opus_common.cc)
target_include_directories(webrtc_modules_audio_coding_audio_coding_opus_common PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_audio_coding_opus_common PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_audio_coding_opus_common PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_audio_coding_opus_common PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_rtc_base_checks webrtc_rtc_base_stringutils )

# modules/audio_coding:audio_decoder_unittests
  android_add_executable(TARGET webrtc_modules_audio_coding_audio_decoder_unittests NODISTRIBUTE SRC ${WEBRTC_ROOT}/modules/audio_coding/neteq/audio_decoder_unittest.cc)
target_include_directories(webrtc_modules_audio_coding_audio_decoder_unittests PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_audio_decoder_unittests PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_CODEC_OPUS WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_OPUS_SUPPORT_120MS_PTIME=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_modules_audio_coding_audio_decoder_unittests PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_audio_decoder_unittests PUBLIC gmock gtest webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_encoder_opus webrtc_common_audio_common_audio webrtc_logging_rtc_event_log_proto webrtc_modules_audio_coding_audio_encoder_cng webrtc_modules_audio_coding_g711 webrtc_modules_audio_coding_g711_c webrtc_modules_audio_coding_g722 webrtc_modules_audio_coding_g722_c webrtc_modules_audio_coding_ilbc webrtc_modules_audio_coding_ilbc_c webrtc_modules_audio_coding_neteq webrtc_modules_audio_coding_neteq_input_audio_tools webrtc_modules_audio_coding_neteq_tools webrtc_modules_audio_coding_pcm16b webrtc_modules_audio_coding_pcm16b_c webrtc_modules_audio_coding_red webrtc_modules_audio_coding_webrtc_opus webrtc_modules_audio_coding_webrtc_opus_wrapper webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers webrtc_test_fileutils webrtc_test_test_main webrtc_test_test_support )

# modules/audio_coding:audio_encoder_cng
add_library(webrtc_modules_audio_coding_audio_encoder_cng ${WEBRTC_ROOT}/modules/audio_coding/codecs/cng/audio_encoder_cng.cc)
target_include_directories(webrtc_modules_audio_coding_audio_encoder_cng PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_audio_encoder_cng PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_audio_encoder_cng PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_audio_encoder_cng PUBLIC absl::optional webrtc_api_audio_codecs_audio_codecs_api webrtc_api_units_time_delta webrtc_common_audio_common_audio webrtc_modules_audio_coding_webrtc_cng webrtc_rtc_base_checks )

# modules/audio_coding:audio_network_adaptor
add_library(webrtc_modules_audio_coding_audio_network_adaptor ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/audio_network_adaptor_impl.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/bitrate_controller.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/channel_controller.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/controller.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/controller_manager.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/debug_dump_writer.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/dtx_controller.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/event_log_writer.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/fec_controller_plr_based.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/frame_length_controller.cc ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/frame_length_controller_v2.cc)
target_include_directories(webrtc_modules_audio_coding_audio_network_adaptor PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_audio_network_adaptor PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN GOOGLE_PROTOBUF_NO_RTTI GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_audio_network_adaptor PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_audio_network_adaptor PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_audio_codecs_audio_codecs_api webrtc_api_rtc_event_log_rtc_event_log webrtc_common_audio_common_audio webrtc_logging_rtc_event_audio webrtc_modules_audio_coding_ana_config_proto webrtc_modules_audio_coding_ana_debug_dump_proto webrtc_modules_audio_coding_audio_network_adaptor_config webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_protobuf_utils webrtc_rtc_base_safe_conversions webrtc_rtc_base_timeutils webrtc_rtc_base_system_file_wrapper webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial )

# modules/audio_coding:audio_network_adaptor_config
add_library(webrtc_modules_audio_coding_audio_network_adaptor_config ${WEBRTC_ROOT}/modules/audio_coding/audio_network_adaptor/audio_network_adaptor_config.cc)
target_include_directories(webrtc_modules_audio_coding_audio_network_adaptor_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_audio_network_adaptor_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_audio_network_adaptor_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_audio_network_adaptor_config PUBLIC absl::optional )

# modules/audio_coding:default_neteq_factory
add_library(webrtc_modules_audio_coding_default_neteq_factory ${WEBRTC_ROOT}/modules/audio_coding/neteq/default_neteq_factory.cc)
target_include_directories(webrtc_modules_audio_coding_default_neteq_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_default_neteq_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_default_neteq_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_default_neteq_factory PUBLIC webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_neteq_default_neteq_controller_factory webrtc_api_neteq_neteq_api webrtc_modules_audio_coding_neteq webrtc_system_wrappers_system_wrappers )

# modules/audio_coding:g711
add_library(webrtc_modules_audio_coding_g711 ${WEBRTC_ROOT}/modules/audio_coding/codecs/g711/audio_decoder_pcm.cc ${WEBRTC_ROOT}/modules/audio_coding/codecs/g711/audio_encoder_pcm.cc)
target_include_directories(webrtc_modules_audio_coding_g711 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_g711 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_g711 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_g711 PUBLIC absl::optional webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_units_time_delta webrtc_modules_audio_coding_g711_c webrtc_modules_audio_coding_legacy_encoded_audio_frame webrtc_rtc_base_buffer webrtc_rtc_base_checks )

# modules/audio_coding:g711_c
add_library(webrtc_modules_audio_coding_g711_c ${WEBRTC_ROOT}/modules/audio_coding/codecs/g711/g711_interface.c)
target_include_directories(webrtc_modules_audio_coding_g711_c PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_g711_c PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_g711_c PRIVATE -fno-rtti -x c )
target_link_libraries(webrtc_modules_audio_coding_g711_c PUBLIC webrtc_modules_third_party_g711_g711_3p )

# modules/audio_coding:g722
add_library(webrtc_modules_audio_coding_g722 ${WEBRTC_ROOT}/modules/audio_coding/codecs/g722/audio_decoder_g722.cc ${WEBRTC_ROOT}/modules/audio_coding/codecs/g722/audio_encoder_g722.cc)
target_include_directories(webrtc_modules_audio_coding_g722 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_g722 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_g722 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_g722 PUBLIC absl::optional webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_g722_audio_encoder_g722_config webrtc_api_units_time_delta webrtc_modules_audio_coding_g722_c webrtc_modules_audio_coding_legacy_encoded_audio_frame webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# modules/audio_coding:g722_c
add_library(webrtc_modules_audio_coding_g722_c ${WEBRTC_ROOT}/modules/audio_coding/codecs/g722/g722_interface.c)
target_include_directories(webrtc_modules_audio_coding_g722_c PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_g722_c PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_g722_c PRIVATE -fno-rtti -x c )
target_link_libraries(webrtc_modules_audio_coding_g722_c PUBLIC webrtc_modules_third_party_g722_g722_3p )

# modules/audio_coding:ilbc
add_library(webrtc_modules_audio_coding_ilbc ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/audio_decoder_ilbc.cc ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/audio_encoder_ilbc.cc)
target_include_directories(webrtc_modules_audio_coding_ilbc PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_ilbc PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_ilbc PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_ilbc PUBLIC absl::optional webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_ilbc_audio_encoder_ilbc_config webrtc_api_units_time_delta webrtc_common_audio_common_audio webrtc_modules_audio_coding_ilbc_c webrtc_modules_audio_coding_legacy_encoded_audio_frame webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions )

# modules/audio_coding:ilbc_c
add_library(webrtc_modules_audio_coding_ilbc_c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/abs_quant.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/abs_quant_loop.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/augmented_cb_corr.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/bw_expand.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/cb_construct.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/cb_mem_energy.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/cb_mem_energy_augmentation.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/cb_mem_energy_calc.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/cb_search.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/cb_search_core.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/cb_update_best_index.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/chebyshev.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/comp_corr.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/constants.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/create_augmented_vec.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/decode.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/decode_residual.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/decoder_interpolate_lsf.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/do_plc.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/encode.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/energy_inverse.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/enh_upsample.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/enhancer.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/enhancer_interface.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/filtered_cb_vecs.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/frame_classify.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/gain_dequant.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/gain_quant.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/get_cd_vec.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/get_lsp_poly.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/get_sync_seq.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/hp_input.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/hp_output.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/ilbc.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/index_conv_dec.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/index_conv_enc.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/init_decode.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/init_encode.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/interpolate.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/interpolate_samples.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/lpc_encode.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/lsf_check.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/lsf_interpolate_to_poly_dec.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/lsf_interpolate_to_poly_enc.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/lsf_to_lsp.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/lsf_to_poly.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/lsp_to_lsf.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/my_corr.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/nearest_neighbor.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/pack_bits.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/poly_to_lsf.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/poly_to_lsp.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/refiner.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/simple_interpolate_lsf.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/simple_lpc_analysis.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/simple_lsf_dequant.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/simple_lsf_quant.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/smooth.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/smooth_out_data.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/sort_sq.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/split_vq.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/state_construct.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/state_search.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/swap_bytes.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/unpack_bits.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/vq3.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/vq4.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/window32_w32.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/ilbc/xcorr_coef.c)
target_include_directories(webrtc_modules_audio_coding_ilbc_c PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_ilbc_c PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_ilbc_c PRIVATE -fno-rtti -x c )
target_link_libraries(webrtc_modules_audio_coding_ilbc_c PUBLIC absl::core_headers webrtc_api_audio_codecs_audio_codecs_api webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_rtc_base_checks webrtc_rtc_base_sanitizer webrtc_rtc_base_system_arch )

# modules/audio_coding:isac_bwinfo
add_library(webrtc_modules_audio_coding_isac_bwinfo INTERFACE)
target_include_directories(webrtc_modules_audio_coding_isac_bwinfo INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_coding:isac_vad
add_library(webrtc_modules_audio_coding_isac_vad ${WEBRTC_ROOT}/modules/audio_coding/codecs/isac/main/source/filter_functions.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/isac/main/source/isac_vad.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c ${WEBRTC_ROOT}/modules/audio_coding/codecs/isac/main/source/pitch_filter.c)
target_include_directories(webrtc_modules_audio_coding_isac_vad PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_isac_vad PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_isac_vad PRIVATE -fno-rtti -x c )
target_link_libraries(webrtc_modules_audio_coding_isac_vad PUBLIC webrtc_fft webrtc_modules_audio_coding_isac_bwinfo webrtc_rtc_base_compile_assert_c webrtc_rtc_base_system_arch webrtc_rtc_base_system_ignore_warnings )

# modules/audio_coding:legacy_encoded_audio_frame
add_library(webrtc_modules_audio_coding_legacy_encoded_audio_frame ${WEBRTC_ROOT}/modules/audio_coding/codecs/legacy_encoded_audio_frame.cc)
target_include_directories(webrtc_modules_audio_coding_legacy_encoded_audio_frame PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_legacy_encoded_audio_frame PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_legacy_encoded_audio_frame PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_legacy_encoded_audio_frame PUBLIC absl::optional webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_rtc_base_buffer webrtc_rtc_base_checks )

# modules/audio_coding:neteq
add_library(webrtc_modules_audio_coding_neteq ${WEBRTC_ROOT}/modules/audio_coding/neteq/accelerate.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/audio_multi_vector.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/audio_vector.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/background_noise.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/buffer_level_filter.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/comfort_noise.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/cross_correlation.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/decision_logic.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/decoder_database.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/delay_manager.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/dsp_helper.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/dtmf_buffer.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/dtmf_tone_generator.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/expand.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/expand_uma_logger.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/histogram.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/merge.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/nack_tracker.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/neteq_impl.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/normal.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/packet.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/packet_arrival_history.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/packet_buffer.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/post_decode_vad.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/preemptive_expand.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/random_vector.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/red_payload_splitter.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/reorder_optimizer.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/statistics_calculator.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/sync_buffer.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/time_stretch.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/timestamp_scaler.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/underrun_optimizer.cc)
target_include_directories(webrtc_modules_audio_coding_neteq PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_neteq PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_neteq PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_neteq PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_rtp_headers webrtc_api_rtp_packet_info webrtc_api_scoped_refptr webrtc_api_audio_audio_frame_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_neteq_neteq_api webrtc_api_neteq_neteq_controller_api webrtc_api_neteq_tick_timer webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_modules_module_api_public webrtc_modules_audio_coding_audio_coding_module_typedefs webrtc_modules_audio_coding_webrtc_cng webrtc_rtc_base_audio_format_to_string webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_sanitizer webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/audio_coding:neteq_input_audio_tools
add_library(webrtc_modules_audio_coding_neteq_input_audio_tools ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/input_audio_file.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/resample_input_audio_file.cc)
target_include_directories(webrtc_modules_audio_coding_neteq_input_audio_tools PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_neteq_input_audio_tools PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_neteq_input_audio_tools PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_neteq_input_audio_tools PUBLIC absl::strings webrtc_common_audio_common_audio webrtc_rtc_base_checks )

# modules/audio_coding:neteq_tools
add_library(webrtc_modules_audio_coding_neteq_tools ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/fake_decode_from_file.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/neteq_delay_analyzer.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/neteq_event_log_input.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/neteq_replacement_input.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/neteq_stats_getter.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/neteq_stats_plotter.cc)
target_include_directories(webrtc_modules_audio_coding_neteq_tools PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_neteq_tools PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_neteq_tools PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_neteq_tools PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_logging_rtc_event_log_parser webrtc_logging_rtc_event_log_proto webrtc_modules_module_api_public webrtc_modules_audio_coding_neteq_input_audio_tools webrtc_modules_audio_coding_neteq_tools_minimal webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils )

# modules/audio_coding:neteq_tools_minimal
add_library(webrtc_modules_audio_coding_neteq_tools_minimal ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/audio_sink.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/encode_neteq_input.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/neteq_input.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/neteq_test.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/packet.cc ${WEBRTC_ROOT}/modules/audio_coding/neteq/tools/packet_source.cc)
target_include_directories(webrtc_modules_audio_coding_neteq_tools_minimal PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_neteq_tools_minimal PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_CODEC_OPUS WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_OPUS_SUPPORT_120MS_PTIME=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_neteq_tools_minimal PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_neteq_tools_minimal PUBLIC absl::optional webrtc_api_array_view webrtc_api_neteq_simulator_api webrtc_api_rtp_headers webrtc_api_audio_audio_frame_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_neteq_custom_neteq_factory webrtc_api_neteq_default_neteq_controller_factory webrtc_api_neteq_neteq_api webrtc_modules_audio_coding_default_neteq_factory webrtc_modules_audio_coding_neteq webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_system_wrappers_system_wrappers )

# modules/audio_coding:pcm16b
add_library(webrtc_modules_audio_coding_pcm16b ${WEBRTC_ROOT}/modules/audio_coding/codecs/pcm16b/audio_decoder_pcm16b.cc ${WEBRTC_ROOT}/modules/audio_coding/codecs/pcm16b/audio_encoder_pcm16b.cc ${WEBRTC_ROOT}/modules/audio_coding/codecs/pcm16b/pcm16b_common.cc)
target_include_directories(webrtc_modules_audio_coding_pcm16b PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_pcm16b PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_pcm16b PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_pcm16b PUBLIC webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_modules_audio_coding_g711 webrtc_modules_audio_coding_g711_c webrtc_modules_audio_coding_legacy_encoded_audio_frame webrtc_modules_audio_coding_pcm16b_c webrtc_rtc_base_buffer webrtc_rtc_base_checks )

# modules/audio_coding:pcm16b_c
add_library(webrtc_modules_audio_coding_pcm16b_c ${WEBRTC_ROOT}/modules/audio_coding/codecs/pcm16b/pcm16b.c)
target_include_directories(webrtc_modules_audio_coding_pcm16b_c PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_pcm16b_c PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_pcm16b_c PRIVATE -fno-rtti -x c )

# modules/audio_coding:red
add_library(webrtc_modules_audio_coding_red ${WEBRTC_ROOT}/modules/audio_coding/codecs/red/audio_encoder_copy_red.cc)
target_include_directories(webrtc_modules_audio_coding_red PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_red PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_red PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_red PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_field_trials_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_units_time_delta webrtc_common_audio_common_audio webrtc_rtc_base_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_logging )

# modules/audio_coding:webrtc_cng
add_library(webrtc_modules_audio_coding_webrtc_cng ${WEBRTC_ROOT}/modules/audio_coding/codecs/cng/webrtc_cng.cc)
target_include_directories(webrtc_modules_audio_coding_webrtc_cng PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_webrtc_cng PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_webrtc_cng PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_webrtc_cng PUBLIC webrtc_api_array_view webrtc_common_audio_common_audio_c webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# modules/audio_coding:webrtc_multiopus
add_library(webrtc_modules_audio_coding_webrtc_multiopus ${WEBRTC_ROOT}/modules/audio_coding/codecs/opus/audio_decoder_multi_channel_opus_impl.cc ${WEBRTC_ROOT}/modules/audio_coding/codecs/opus/audio_encoder_multi_channel_opus_impl.cc)
target_include_directories(webrtc_modules_audio_coding_webrtc_multiopus PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_webrtc_multiopus PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_CODEC_OPUS WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_OPUS_SUPPORT_120MS_PTIME=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_webrtc_multiopus PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_webrtc_multiopus PUBLIC absl::memory absl::strings absl::optional webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_decoder_opus_config webrtc_api_audio_codecs_opus_audio_encoder_opus_config webrtc_api_units_time_delta webrtc_modules_audio_coding_audio_coding_opus_common webrtc_modules_audio_coding_webrtc_opus_wrapper webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils )

# modules/audio_coding:webrtc_opus
add_library(webrtc_modules_audio_coding_webrtc_opus ${WEBRTC_ROOT}/modules/audio_coding/codecs/opus/audio_decoder_opus.cc ${WEBRTC_ROOT}/modules/audio_coding/codecs/opus/audio_encoder_opus.cc)
target_include_directories(webrtc_modules_audio_coding_webrtc_opus PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_webrtc_opus PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN GOOGLE_PROTOBUF_NO_RTTI GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_CODEC_OPUS WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_OPUS_SUPPORT_120MS_PTIME=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_webrtc_opus PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_webrtc_opus PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_opus_audio_encoder_opus_config webrtc_common_audio_common_audio webrtc_modules_audio_coding_audio_coding_opus_common webrtc_modules_audio_coding_audio_network_adaptor webrtc_modules_audio_coding_audio_network_adaptor_config webrtc_modules_audio_coding_webrtc_opus_wrapper webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_protobuf_utils webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_system_wrappers_field_trial )

# modules/audio_coding:webrtc_opus_wrapper
add_library(webrtc_modules_audio_coding_webrtc_opus_wrapper ${WEBRTC_ROOT}/modules/audio_coding/codecs/opus/opus_interface.cc)
target_include_directories(webrtc_modules_audio_coding_webrtc_opus_wrapper PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_coding_webrtc_opus_wrapper PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_CODEC_OPUS WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_OPUS_SUPPORT_120MS_PTIME=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_coding_webrtc_opus_wrapper PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_coding_webrtc_opus_wrapper PUBLIC opus webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_ignore_wundef webrtc_system_wrappers_field_trial )

# modules/audio_device
add_library(webrtc_modules_audio_device_audio_device INTERFACE)
target_link_libraries(webrtc_modules_audio_device_audio_device INTERFACE webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl )
target_include_directories(webrtc_modules_audio_device_audio_device INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_device:audio_device_api
add_library(webrtc_modules_audio_device_audio_device_api INTERFACE)
target_link_libraries(webrtc_modules_audio_device_audio_device_api INTERFACE absl::optional webrtc_api_ref_count webrtc_api_scoped_refptr webrtc_api_task_queue_task_queue webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_stringutils )
target_include_directories(webrtc_modules_audio_device_audio_device_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_device:audio_device_buffer
add_library(webrtc_modules_audio_device_audio_device_buffer ${WEBRTC_ROOT}/modules/audio_device/audio_device_buffer.cc ${WEBRTC_ROOT}/modules/audio_device/fine_audio_buffer.cc)
target_include_directories(webrtc_modules_audio_device_audio_device_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_device_audio_device_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_device_audio_device_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_device_audio_device_buffer PUBLIC webrtc_api_array_view webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_common_audio_common_audio_c webrtc_modules_audio_device_audio_device_api webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_timestamp_aligner webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_metrics )

# modules/audio_device:audio_device_config
add_library(webrtc_modules_audio_device_audio_device_config INTERFACE)
target_include_directories(webrtc_modules_audio_device_audio_device_config INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_device:audio_device_default
add_library(webrtc_modules_audio_device_audio_device_default INTERFACE)
target_link_libraries(webrtc_modules_audio_device_audio_device_default INTERFACE webrtc_modules_audio_device_audio_device_api )
target_include_directories(webrtc_modules_audio_device_audio_device_default INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_device:audio_device_dummy
add_library(webrtc_modules_audio_device_audio_device_dummy ${WEBRTC_ROOT}/modules/audio_device/dummy/audio_device_dummy.cc)
target_include_directories(webrtc_modules_audio_device_audio_device_dummy PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_device_audio_device_dummy PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_device_audio_device_dummy PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_device_audio_device_dummy PUBLIC webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_buffer webrtc_modules_audio_device_audio_device_generic )

# modules/audio_device:audio_device_generic
add_library(webrtc_modules_audio_device_audio_device_generic ${WEBRTC_ROOT}/modules/audio_device/audio_device_generic.cc)
target_include_directories(webrtc_modules_audio_device_audio_device_generic PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_device_audio_device_generic PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_device_audio_device_generic PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_device_audio_device_generic PUBLIC webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_buffer webrtc_rtc_base_logging )

# modules/audio_device:audio_device_impl
add_library(webrtc_modules_audio_device_audio_device_impl ${WEBRTC_ROOT}/modules/audio_device/win/audio_device_core_win.cc ${WEBRTC_ROOT}/modules/audio_device/audio_device_data_observer.cc ${WEBRTC_ROOT}/modules/audio_device/audio_device_impl.cc)
target_include_directories(webrtc_modules_audio_device_audio_device_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_device_audio_device_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_device_audio_device_impl PRIVATE -Wno-microsoft-goto -fno-rtti )
target_link_libraries(webrtc_modules_audio_device_audio_device_impl PUBLIC webrtc_rtc_base_win32 webrtc_rtc_base_win_scoped_com_initializer absl::core_headers absl::strings absl::optional webrtc_api_array_view webrtc_api_make_ref_counted webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_buffer webrtc_modules_audio_device_audio_device_config webrtc_modules_audio_device_audio_device_default webrtc_modules_audio_device_audio_device_dummy webrtc_modules_audio_device_audio_device_generic webrtc_modules_audio_device_file_audio_device webrtc_modules_utility_utility webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread webrtc_rtc_base_random webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_arch webrtc_rtc_base_system_file_wrapper webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics amstrmid::amstrmid dmoguids::dmoguids msdmo::msdmo oleaut32::oleaut32 wmcodecdspuuid::wmcodecdspuuid)

# modules/audio_device:file_audio_device
add_library(webrtc_modules_audio_device_file_audio_device ${WEBRTC_ROOT}/modules/audio_device/dummy/file_audio_device.cc ${WEBRTC_ROOT}/modules/audio_device/dummy/file_audio_device_factory.cc)
target_include_directories(webrtc_modules_audio_device_file_audio_device PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_device_file_audio_device PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_device_file_audio_device PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_device_file_audio_device PUBLIC absl::strings webrtc_modules_audio_device_audio_device_generic webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_platform_thread webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_file_wrapper webrtc_system_wrappers_system_wrappers )

# modules/audio_device:mock_audio_device
add_library(webrtc_modules_audio_device_mock_audio_device INTERFACE)
target_link_libraries(webrtc_modules_audio_device_mock_audio_device INTERFACE webrtc_api_make_ref_counted webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_buffer webrtc_modules_audio_device_audio_device_impl webrtc_test_test_support )
target_include_directories(webrtc_modules_audio_device_mock_audio_device INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_mixer:audio_frame_manipulator
add_library(webrtc_modules_audio_mixer_audio_frame_manipulator ${WEBRTC_ROOT}/modules/audio_mixer/audio_frame_manipulator.cc)
target_include_directories(webrtc_modules_audio_mixer_audio_frame_manipulator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_mixer_audio_frame_manipulator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_mixer_audio_frame_manipulator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_mixer_audio_frame_manipulator PUBLIC webrtc_api_audio_audio_frame_api webrtc_audio_utility_audio_frame_operations webrtc_rtc_base_checks )

# modules/audio_mixer:audio_mixer_impl
add_library(webrtc_modules_audio_mixer_audio_mixer_impl ${WEBRTC_ROOT}/modules/audio_mixer/audio_mixer_impl.cc ${WEBRTC_ROOT}/modules/audio_mixer/audio_mixer_impl.h ${WEBRTC_ROOT}/modules/audio_mixer/default_output_rate_calculator.cc ${WEBRTC_ROOT}/modules/audio_mixer/default_output_rate_calculator.h ${WEBRTC_ROOT}/modules/audio_mixer/frame_combiner.cc ${WEBRTC_ROOT}/modules/audio_mixer/frame_combiner.h ${WEBRTC_ROOT}/modules/audio_mixer/output_rate_calculator.h)
target_include_directories(webrtc_modules_audio_mixer_audio_mixer_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_mixer_audio_mixer_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_mixer_audio_mixer_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_mixer_audio_mixer_impl PUBLIC webrtc_api_array_view webrtc_api_rtp_packet_info webrtc_api_scoped_refptr webrtc_api_audio_audio_frame_api webrtc_api_audio_audio_mixer_api webrtc_audio_utility_audio_frame_operations webrtc_common_audio_common_audio webrtc_modules_audio_mixer_audio_frame_manipulator webrtc_modules_audio_processing_api webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_fixed_digital webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_refcount webrtc_rtc_base_safe_conversions webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_metrics )

# modules/audio_processing/aec3:adaptive_fir_filter
add_library(webrtc_modules_audio_processing_aec3_adaptive_fir_filter INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec3_adaptive_fir_filter INTERFACE absl::strings webrtc_api_array_view webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_aec3_aec3_common webrtc_modules_audio_processing_aec3_aec3_fft webrtc_modules_audio_processing_aec3_fft_data webrtc_modules_audio_processing_aec3_render_buffer webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_aec3_adaptive_fir_filter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec3:adaptive_fir_filter_erl
add_library(webrtc_modules_audio_processing_aec3_adaptive_fir_filter_erl INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec3_adaptive_fir_filter_erl INTERFACE webrtc_api_array_view webrtc_modules_audio_processing_aec3_aec3_common webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_aec3_adaptive_fir_filter_erl INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec3
add_library(webrtc_modules_audio_processing_aec3_aec3 ${WEBRTC_ROOT}/modules/audio_processing/aec3/adaptive_fir_filter.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/adaptive_fir_filter_erl.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/aec3_common.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/aec3_fft.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/aec_state.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/alignment_mixer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/api_call_jitter_metrics.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/block_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/block_delay_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/block_framer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/block_processor.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/block_processor_metrics.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/clockdrift_detector.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/coarse_filter_update_gain.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/comfort_noise_generator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/config_selector.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/decimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/dominant_nearend_detector.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/downsampled_render_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/echo_audibility.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/echo_canceller3.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/echo_path_delay_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/echo_path_variability.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/echo_remover.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/echo_remover_metrics.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/erl_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/erle_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/fft_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/filter_analyzer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/frame_blocker.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/fullband_erle_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/matched_filter.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/matched_filter_lag_aggregator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/moving_average.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/multi_channel_content_detector.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/refined_filter_update_gain.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/render_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/render_delay_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/render_delay_controller.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/render_delay_controller_metrics.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/render_signal_analyzer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/residual_echo_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/reverb_decay_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/reverb_frequency_response.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/reverb_model.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/reverb_model_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/signal_dependent_erle_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/spectrum_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/stationarity_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/subband_erle_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/subband_nearend_detector.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/subtractor.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/subtractor_output.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/subtractor_output_analyzer.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/suppression_filter.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/suppression_gain.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/transparent_mode.cc)
target_include_directories(webrtc_modules_audio_processing_aec3_aec3 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_aec3_aec3 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_aec3_aec3 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_aec3_aec3 PUBLIC webrtc_modules_audio_processing_aec3_aec3_avx2 absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_aec3_config webrtc_api_audio_echo_control webrtc_common_audio_common_audio_c webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_high_pass_filter webrtc_modules_audio_processing_aec3_adaptive_fir_filter webrtc_modules_audio_processing_aec3_adaptive_fir_filter_erl webrtc_modules_audio_processing_aec3_aec3_common webrtc_modules_audio_processing_aec3_aec3_fft webrtc_modules_audio_processing_aec3_fft_data webrtc_modules_audio_processing_aec3_matched_filter webrtc_modules_audio_processing_aec3_render_buffer webrtc_modules_audio_processing_aec3_vector_math webrtc_modules_audio_processing_utility_cascaded_biquad_filter webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_safe_minmax webrtc_rtc_base_swap_queue webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/audio_processing/aec3:aec3_avx2
add_library(webrtc_modules_audio_processing_aec3_aec3_avx2 ${WEBRTC_ROOT}/modules/audio_processing/aec3/adaptive_fir_filter_avx2.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/adaptive_fir_filter_erl_avx2.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/fft_data_avx2.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/matched_filter_avx2.cc ${WEBRTC_ROOT}/modules/audio_processing/aec3/vector_math_avx2.cc)
target_include_directories(webrtc_modules_audio_processing_aec3_aec3_avx2 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_aec3_aec3_avx2 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_aec3_aec3_avx2 PRIVATE -fno-rtti -march=haswell )
target_link_libraries(webrtc_modules_audio_processing_aec3_aec3_avx2 PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_aec3_adaptive_fir_filter webrtc_modules_audio_processing_aec3_adaptive_fir_filter_erl webrtc_modules_audio_processing_aec3_fft_data webrtc_modules_audio_processing_aec3_matched_filter webrtc_modules_audio_processing_aec3_vector_math webrtc_rtc_base_checks )

# modules/audio_processing/aec3:aec3_common
add_library(webrtc_modules_audio_processing_aec3_aec3_common INTERFACE)
target_include_directories(webrtc_modules_audio_processing_aec3_aec3_common INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec3:aec3_fft
add_library(webrtc_modules_audio_processing_aec3_aec3_fft INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec3_aec3_fft INTERFACE webrtc_fft_size_128 webrtc_api_array_view webrtc_modules_audio_processing_aec3_aec3_common webrtc_modules_audio_processing_aec3_fft_data webrtc_rtc_base_checks webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_aec3_aec3_fft INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec3:fft_data
add_library(webrtc_modules_audio_processing_aec3_fft_data INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec3_fft_data INTERFACE webrtc_api_array_view webrtc_modules_audio_processing_aec3_aec3_common webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_aec3_fft_data INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec3:matched_filter
add_library(webrtc_modules_audio_processing_aec3_matched_filter INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec3_matched_filter INTERFACE absl::optional webrtc_api_array_view webrtc_modules_audio_processing_aec3_aec3_common webrtc_rtc_base_gtest_prod webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_aec3_matched_filter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec3:render_buffer
add_library(webrtc_modules_audio_processing_aec3_render_buffer INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec3_render_buffer INTERFACE webrtc_api_array_view webrtc_modules_audio_processing_aec3_aec3_common webrtc_modules_audio_processing_aec3_fft_data webrtc_rtc_base_checks webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_aec3_render_buffer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec3:vector_math
add_library(webrtc_modules_audio_processing_aec3_vector_math INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec3_vector_math INTERFACE webrtc_api_array_view webrtc_modules_audio_processing_aec3_aec3_common webrtc_rtc_base_checks webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_aec3_vector_math INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec_dump
add_library(webrtc_modules_audio_processing_aec_dump_aec_dump INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_aec_dump_aec_dump INTERFACE absl::strings webrtc_modules_audio_processing_aec_dump_interface webrtc_rtc_base_system_file_wrapper webrtc_rtc_base_system_rtc_export )
target_include_directories(webrtc_modules_audio_processing_aec_dump_aec_dump INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/aec_dump:aec_dump_impl
add_library(webrtc_modules_audio_processing_aec_dump_aec_dump_impl ${WEBRTC_ROOT}/modules/audio_processing/aec_dump/aec_dump_impl.cc ${WEBRTC_ROOT}/modules/audio_processing/aec_dump/capture_stream_info.cc)
target_include_directories(webrtc_modules_audio_processing_aec_dump_aec_dump_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_aec_dump_aec_dump_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN GOOGLE_PROTOBUF_NO_RTTI GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_aec_dump_aec_dump_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_aec_dump_aec_dump_impl PUBLIC absl::strings webrtc_api_audio_audio_frame_api webrtc_api_task_queue_task_queue webrtc_modules_audio_processing_aec_dump_interface webrtc_modules_audio_processing_audioproc_debug_proto webrtc_modules_audio_processing_aec_dump_aec_dump webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_protobuf_utils webrtc_rtc_base_race_checker webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_system_file_wrapper webrtc_system_wrappers_system_wrappers )

# modules/audio_processing:aec_dump_interface
add_library(webrtc_modules_audio_processing_aec_dump_interface ${WEBRTC_ROOT}/modules/audio_processing/include/aec_dump.cc)
target_include_directories(webrtc_modules_audio_processing_aec_dump_interface PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_aec_dump_interface PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_aec_dump_interface PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_aec_dump_interface PUBLIC absl::core_headers absl::optional webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_frame_view )

# modules/audio_processing/aecm:aecm_core
add_library(webrtc_modules_audio_processing_aecm_aecm_core ${WEBRTC_ROOT}/modules/audio_processing/aecm/aecm_core.cc ${WEBRTC_ROOT}/modules/audio_processing/aecm/aecm_core_c.cc ${WEBRTC_ROOT}/modules/audio_processing/aecm/echo_control_mobile.cc)
target_include_directories(webrtc_modules_audio_processing_aecm_aecm_core PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_aecm_aecm_core PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_aecm_aecm_core PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_aecm_aecm_core PUBLIC webrtc_common_audio_common_audio_c webrtc_modules_audio_processing_utility_legacy_delay_estimator webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions webrtc_rtc_base_sanitizer webrtc_system_wrappers_system_wrappers )

# modules/audio_processing/agc2:adaptive_digital_gain_controller
add_library(webrtc_modules_audio_processing_agc2_adaptive_digital_gain_controller ${WEBRTC_ROOT}/modules/audio_processing/agc2/adaptive_digital_gain_controller.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_adaptive_digital_gain_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_adaptive_digital_gain_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_adaptive_digital_gain_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_adaptive_digital_gain_controller PUBLIC webrtc_common_audio_common_audio webrtc_modules_audio_processing_api webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_common webrtc_modules_audio_processing_agc2_gain_applier webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_minmax webrtc_system_wrappers_metrics )

# modules/audio_processing/agc2:biquad_filter
add_library(webrtc_modules_audio_processing_agc2_biquad_filter ${WEBRTC_ROOT}/modules/audio_processing/agc2/biquad_filter.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_biquad_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_biquad_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_biquad_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_biquad_filter PUBLIC webrtc_api_array_view webrtc_rtc_base_macromagic )

# modules/audio_processing/agc2:clipping_predictor
add_library(webrtc_modules_audio_processing_agc2_clipping_predictor ${WEBRTC_ROOT}/modules/audio_processing/agc2/clipping_predictor.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/clipping_predictor_level_buffer.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_clipping_predictor PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_clipping_predictor PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_clipping_predictor PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_clipping_predictor PUBLIC absl::optional webrtc_common_audio_common_audio webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_gain_map webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_minmax )

# modules/audio_processing/agc2:common
add_library(webrtc_modules_audio_processing_agc2_common INTERFACE)
target_include_directories(webrtc_modules_audio_processing_agc2_common INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc2:cpu_features
add_library(webrtc_modules_audio_processing_agc2_cpu_features ${WEBRTC_ROOT}/modules/audio_processing/agc2/cpu_features.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_cpu_features PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_cpu_features PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_cpu_features PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_cpu_features PUBLIC webrtc_rtc_base_stringutils webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers )

# modules/audio_processing/agc2:fixed_digital
add_library(webrtc_modules_audio_processing_agc2_fixed_digital ${WEBRTC_ROOT}/modules/audio_processing/agc2/fixed_digital_level_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/interpolated_gain_curve.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/limiter.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_fixed_digital PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_fixed_digital PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_fixed_digital PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_fixed_digital PUBLIC absl::strings webrtc_api_array_view webrtc_common_audio_common_audio webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_common webrtc_rtc_base_checks webrtc_rtc_base_gtest_prod webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_system_wrappers_metrics )

# modules/audio_processing/agc2:gain_applier
add_library(webrtc_modules_audio_processing_agc2_gain_applier ${WEBRTC_ROOT}/modules/audio_processing/agc2/gain_applier.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_gain_applier PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_gain_applier PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_gain_applier PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_gain_applier PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_common webrtc_rtc_base_safe_minmax )

# modules/audio_processing/agc2:gain_map
add_library(webrtc_modules_audio_processing_agc2_gain_map INTERFACE)
target_include_directories(webrtc_modules_audio_processing_agc2_gain_map INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc2:input_volume_controller
add_library(webrtc_modules_audio_processing_agc2_input_volume_controller ${WEBRTC_ROOT}/modules/audio_processing/agc2/input_volume_controller.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/speech_probability_buffer.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_input_volume_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_input_volume_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_input_volume_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_input_volume_controller PUBLIC absl::optional webrtc_api_array_view webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_clipping_predictor webrtc_modules_audio_processing_agc2_gain_map webrtc_modules_audio_processing_agc2_input_volume_stats_reporter webrtc_rtc_base_checks webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging webrtc_rtc_base_safe_minmax webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/audio_processing/agc2:input_volume_stats_reporter
add_library(webrtc_modules_audio_processing_agc2_input_volume_stats_reporter ${WEBRTC_ROOT}/modules/audio_processing/agc2/input_volume_stats_reporter.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_input_volume_stats_reporter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_input_volume_stats_reporter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_input_volume_stats_reporter PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_input_volume_stats_reporter PUBLIC absl::strings absl::optional webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_system_wrappers_metrics )

# modules/audio_processing/agc2:noise_level_estimator
add_library(webrtc_modules_audio_processing_agc2_noise_level_estimator ${WEBRTC_ROOT}/modules/audio_processing/agc2/noise_level_estimator.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_noise_level_estimator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_noise_level_estimator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_noise_level_estimator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_noise_level_estimator PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_biquad_filter webrtc_rtc_base_checks webrtc_system_wrappers_system_wrappers )

# modules/audio_processing/agc2/rnn_vad
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/features_extraction.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/rnn.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad PUBLIC webrtc_rnnoise webrtc_api_array_view webrtc_modules_audio_processing_agc2_biquad_filter webrtc_modules_audio_processing_agc2_cpu_features webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_layers webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_lp_residual webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_pitch webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_sequence_buffer webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_spectral_features webrtc_rtc_base_checks webrtc_rtc_base_safe_compare webrtc_rtc_base_safe_conversions )

# modules/audio_processing/agc2/rnn_vad:rnn_vad_auto_correlation
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_auto_correlation ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/auto_correlation.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_auto_correlation PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_auto_correlation PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_auto_correlation PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_auto_correlation PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common webrtc_modules_audio_processing_utility_pffft_wrapper webrtc_rtc_base_checks )

# modules/audio_processing/agc2/rnn_vad:rnn_vad_common
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common INTERFACE webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers )
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc2/rnn_vad:rnn_vad_layers
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_layers ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/rnn_fc.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/rnn_gru.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_layers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_layers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_layers PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_layers PUBLIC webrtc_modules_audio_processing_agc2_rnn_vad_vector_math_avx2 absl::strings webrtc_rnnoise webrtc_api_array_view webrtc_api_function_view webrtc_modules_audio_processing_agc2_cpu_features webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common webrtc_modules_audio_processing_agc2_rnn_vad_vector_math webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# modules/audio_processing/agc2/rnn_vad:rnn_vad_lp_residual
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_lp_residual ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/lp_residual.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_lp_residual PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_lp_residual PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_lp_residual PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_lp_residual PUBLIC webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_safe_compare )

# modules/audio_processing/agc2/rnn_vad:rnn_vad_pitch
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_pitch ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/pitch_search.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/pitch_search_internal.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_pitch PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_pitch PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_pitch PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_pitch PUBLIC webrtc_modules_audio_processing_agc2_rnn_vad_vector_math_avx2 webrtc_api_array_view webrtc_modules_audio_processing_agc2_cpu_features webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_auto_correlation webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common webrtc_modules_audio_processing_agc2_rnn_vad_vector_math webrtc_rtc_base_checks webrtc_rtc_base_gtest_prod webrtc_rtc_base_safe_compare webrtc_rtc_base_safe_conversions webrtc_rtc_base_system_arch )

# modules/audio_processing/agc2/rnn_vad:rnn_vad_ring_buffer
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_ring_buffer INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_ring_buffer INTERFACE webrtc_api_array_view webrtc_rtc_base_checks )
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_ring_buffer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc2/rnn_vad:rnn_vad_sequence_buffer
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_sequence_buffer INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_sequence_buffer INTERFACE webrtc_api_array_view webrtc_rtc_base_checks )
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_sequence_buffer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc2/rnn_vad:rnn_vad_spectral_features
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_spectral_features ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/spectral_features.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/spectral_features_internal.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_spectral_features PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_spectral_features PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_spectral_features PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_spectral_features PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_ring_buffer webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_symmetric_matrix_buffer webrtc_modules_audio_processing_utility_pffft_wrapper webrtc_rtc_base_checks webrtc_rtc_base_safe_compare )

# modules/audio_processing/agc2/rnn_vad:rnn_vad_symmetric_matrix_buffer
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_symmetric_matrix_buffer INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_symmetric_matrix_buffer INTERFACE webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_safe_compare )
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_symmetric_matrix_buffer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc2/rnn_vad:vector_math
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math INTERFACE webrtc_api_array_view webrtc_modules_audio_processing_agc2_cpu_features webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions webrtc_rtc_base_system_arch )
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc2/rnn_vad:vector_math_avx2
add_library(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math_avx2 ${WEBRTC_ROOT}/modules/audio_processing/agc2/rnn_vad/vector_math_avx2.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math_avx2 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math_avx2 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math_avx2 PRIVATE -fno-rtti -march=haswell )
target_link_libraries(webrtc_modules_audio_processing_agc2_rnn_vad_vector_math_avx2 PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_agc2_rnn_vad_vector_math webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# modules/audio_processing/agc2:saturation_protector
add_library(webrtc_modules_audio_processing_agc2_saturation_protector ${WEBRTC_ROOT}/modules/audio_processing/agc2/saturation_protector.cc ${WEBRTC_ROOT}/modules/audio_processing/agc2/saturation_protector_buffer.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_saturation_protector PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_saturation_protector PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_saturation_protector PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_saturation_protector PUBLIC absl::optional webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_agc2_common webrtc_rtc_base_checks webrtc_rtc_base_safe_compare webrtc_rtc_base_safe_minmax )

# modules/audio_processing/agc2:speech_level_estimator
add_library(webrtc_modules_audio_processing_agc2_speech_level_estimator ${WEBRTC_ROOT}/modules/audio_processing/agc2/speech_level_estimator.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_speech_level_estimator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_speech_level_estimator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_speech_level_estimator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_speech_level_estimator PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_api webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_agc2_common webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_minmax )

# modules/audio_processing/agc2:vad_wrapper
add_library(webrtc_modules_audio_processing_agc2_vad_wrapper ${WEBRTC_ROOT}/modules/audio_processing/agc2/vad_wrapper.cc)
target_include_directories(webrtc_modules_audio_processing_agc2_vad_wrapper PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc2_vad_wrapper PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc2_vad_wrapper PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc2_vad_wrapper PUBLIC webrtc_api_array_view webrtc_common_audio_common_audio webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_common webrtc_modules_audio_processing_agc2_cpu_features webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad webrtc_modules_audio_processing_agc2_rnn_vad_rnn_vad_common webrtc_rtc_base_checks )

# modules/audio_processing/agc
add_library(webrtc_modules_audio_processing_agc_agc ${WEBRTC_ROOT}/modules/audio_processing/agc/agc_manager_direct.cc)
target_include_directories(webrtc_modules_audio_processing_agc_agc PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc_agc PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc_agc PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc_agc PUBLIC absl::optional webrtc_api_array_view webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_modules_audio_processing_api webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc_gain_control_interface webrtc_modules_audio_processing_agc_level_estimation webrtc_modules_audio_processing_agc2_clipping_predictor webrtc_modules_audio_processing_agc2_gain_map webrtc_modules_audio_processing_agc2_input_volume_stats_reporter webrtc_modules_audio_processing_vad_vad webrtc_rtc_base_checks webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging webrtc_rtc_base_safe_minmax webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/audio_processing/agc:gain_control_interface
add_library(webrtc_modules_audio_processing_agc_gain_control_interface INTERFACE)
target_include_directories(webrtc_modules_audio_processing_agc_gain_control_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/agc:legacy_agc
add_library(webrtc_modules_audio_processing_agc_legacy_agc ${WEBRTC_ROOT}/modules/audio_processing/agc/legacy/analog_agc.cc ${WEBRTC_ROOT}/modules/audio_processing/agc/legacy/digital_agc.cc)
target_include_directories(webrtc_modules_audio_processing_agc_legacy_agc PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc_legacy_agc PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc_legacy_agc PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc_legacy_agc PUBLIC webrtc_fft_size_256 webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_rtc_base_checks webrtc_system_wrappers_system_wrappers )

# modules/audio_processing/agc:level_estimation
add_library(webrtc_modules_audio_processing_agc_level_estimation ${WEBRTC_ROOT}/modules/audio_processing/agc/agc.cc ${WEBRTC_ROOT}/modules/audio_processing/agc/loudness_histogram.cc ${WEBRTC_ROOT}/modules/audio_processing/agc/utility.cc)
target_include_directories(webrtc_modules_audio_processing_agc_level_estimation PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_agc_level_estimation PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_agc_level_estimation PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_agc_level_estimation PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_vad_vad webrtc_rtc_base_checks )

# modules/audio_processing:api
add_library(webrtc_modules_audio_processing_api ${WEBRTC_ROOT}/modules/audio_processing/include/audio_processing.cc)
target_include_directories(webrtc_modules_audio_processing_api PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_api PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_api PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_api PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_ref_count webrtc_api_scoped_refptr webrtc_api_audio_aec3_config webrtc_api_audio_audio_frame_api webrtc_api_audio_echo_control webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_audio_processing_agc_gain_control_interface webrtc_rtc_base_macromagic webrtc_rtc_base_refcount webrtc_rtc_base_stringutils webrtc_rtc_base_system_arch webrtc_rtc_base_system_file_wrapper webrtc_rtc_base_system_rtc_export )

# modules/audio_processing:apm_logging
add_library(webrtc_modules_audio_processing_apm_logging ${WEBRTC_ROOT}/modules/audio_processing/logging/apm_data_dumper.cc)
target_include_directories(webrtc_modules_audio_processing_apm_logging PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_apm_logging PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_apm_logging PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_apm_logging PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_common_audio_common_audio webrtc_rtc_base_checks webrtc_rtc_base_stringutils )

# modules/audio_processing:audio_buffer
add_library(webrtc_modules_audio_processing_audio_buffer ${WEBRTC_ROOT}/modules/audio_processing/audio_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/splitting_filter.cc ${WEBRTC_ROOT}/modules/audio_processing/three_band_filter_bank.cc)
target_include_directories(webrtc_modules_audio_processing_audio_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_audio_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_audio_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_audio_buffer PUBLIC webrtc_api_array_view webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_modules_audio_processing_api webrtc_rtc_base_checks )

# modules/audio_processing:audio_frame_proxies
add_library(webrtc_modules_audio_processing_audio_frame_proxies ${WEBRTC_ROOT}/modules/audio_processing/include/audio_frame_proxies.cc)
target_include_directories(webrtc_modules_audio_processing_audio_frame_proxies PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_audio_frame_proxies PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_audio_frame_proxies PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_audio_frame_proxies PUBLIC webrtc_api_audio_audio_frame_api webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_frame_view )

# modules/audio_processing:audio_frame_view
add_library(webrtc_modules_audio_processing_audio_frame_view INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_audio_frame_view INTERFACE webrtc_api_array_view )
target_include_directories(webrtc_modules_audio_processing_audio_frame_view INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing
add_library(webrtc_modules_audio_processing_audio_processing ${WEBRTC_ROOT}/modules/audio_processing/audio_processing_builder_impl.cc ${WEBRTC_ROOT}/modules/audio_processing/audio_processing_impl.cc ${WEBRTC_ROOT}/modules/audio_processing/echo_control_mobile_impl.cc ${WEBRTC_ROOT}/modules/audio_processing/gain_control_impl.cc)
target_include_directories(webrtc_modules_audio_processing_audio_processing PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_audio_processing PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_audio_processing PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_audio_processing PUBLIC absl::strings absl::optional webrtc_fft_size_256 webrtc_api_array_view webrtc_api_function_view webrtc_api_make_ref_counted webrtc_api_audio_aec3_config webrtc_api_audio_audio_frame_api webrtc_api_audio_echo_control webrtc_audio_utility_audio_frame_operations webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_common_audio_fir_filter webrtc_common_audio_fir_filter_factory webrtc_modules_audio_processing_aec_dump_interface webrtc_modules_audio_processing_api webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_audio_frame_proxies webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_audio_processing_gain_controller2 webrtc_modules_audio_processing_high_pass_filter webrtc_modules_audio_processing_optionally_built_submodule_creators webrtc_modules_audio_processing_rms_level webrtc_modules_audio_processing_aec3_aec3 webrtc_modules_audio_processing_aec_dump_aec_dump webrtc_modules_audio_processing_aec_dump_aec_dump_impl webrtc_modules_audio_processing_aecm_aecm_core webrtc_modules_audio_processing_agc_agc webrtc_modules_audio_processing_agc_gain_control_interface webrtc_modules_audio_processing_agc_legacy_agc webrtc_modules_audio_processing_agc2_input_volume_stats_reporter webrtc_modules_audio_processing_capture_levels_adjuster_capture_levels_adjuster webrtc_modules_audio_processing_ns_ns webrtc_modules_audio_processing_transient_transient_suppressor_api webrtc_modules_audio_processing_vad_vad webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_safe_minmax webrtc_rtc_base_sanitizer webrtc_rtc_base_swap_queue webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_denormal_disabler webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/audio_processing:audio_processing_statistics
add_library(webrtc_modules_audio_processing_audio_processing_statistics ${WEBRTC_ROOT}/modules/audio_processing/include/audio_processing_statistics.cc)
target_include_directories(webrtc_modules_audio_processing_audio_processing_statistics PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_audio_processing_statistics PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_audio_processing_statistics PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_audio_processing_statistics PUBLIC absl::optional webrtc_rtc_base_system_rtc_export )

# //third_party/webrtc/files/stable/webrtc/modules/audio_processing:audioproc_debug_proto
add_library(webrtc_modules_audio_processing_audioproc_debug_proto)
protobuf_generate_with_plugin(
  TARGET webrtc_modules_audio_processing_audioproc_debug_proto
  PROTOS  ${WEBRTC_ROOT}/modules/audio_processing/debug.proto
  HEADERFILEEXTENSION .pb.h
  APPEND_PATH
  PROTOPATH  -I${WEBRTC_ROOT}/modules/audio_processing
  PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/modules/audio_processing)
target_include_directories(webrtc_modules_audio_processing_audioproc_debug_proto PUBLIC  ${CMAKE_CURRENT_BINARY_DIR}/modules/audio_processing)
add_library(webrtc_modules_audio_processing_audioproc_debug_proto_lib ALIAS webrtc_modules_audio_processing_audioproc_debug_proto)
target_link_libraries(webrtc_modules_audio_processing_audioproc_debug_proto PUBLIC libprotobuf)

# modules/audio_processing:audioproc_test_utils
add_library(webrtc_modules_audio_processing_audioproc_test_utils ${WEBRTC_ROOT}/modules/audio_processing/test/audio_buffer_tools.cc ${WEBRTC_ROOT}/modules/audio_processing/test/audio_processing_builder_for_testing.cc ${WEBRTC_ROOT}/modules/audio_processing/test/bitexactness_tools.cc ${WEBRTC_ROOT}/modules/audio_processing/test/performance_timer.cc ${WEBRTC_ROOT}/modules/audio_processing/test/simulator_buffers.cc ${WEBRTC_ROOT}/modules/audio_processing/test/test_utils.cc)
target_include_directories(webrtc_modules_audio_processing_audioproc_test_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_audioproc_test_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_modules_audio_processing_audioproc_test_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_audioproc_test_utils PUBLIC gmock gtest absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_audio_frame_api webrtc_common_audio_common_audio webrtc_modules_audio_coding_neteq_input_audio_tools webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_buffer webrtc_rtc_base_checks webrtc_rtc_base_random webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers webrtc_test_fileutils webrtc_test_test_support )

# modules/audio_processing/capture_levels_adjuster
add_library(webrtc_modules_audio_processing_capture_levels_adjuster_capture_levels_adjuster ${WEBRTC_ROOT}/modules/audio_processing/capture_levels_adjuster/audio_samples_scaler.cc ${WEBRTC_ROOT}/modules/audio_processing/capture_levels_adjuster/capture_levels_adjuster.cc)
target_include_directories(webrtc_modules_audio_processing_capture_levels_adjuster_capture_levels_adjuster PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_capture_levels_adjuster_capture_levels_adjuster PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_capture_levels_adjuster_capture_levels_adjuster PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_capture_levels_adjuster_capture_levels_adjuster PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_audio_buffer webrtc_rtc_base_checks webrtc_rtc_base_safe_minmax )

# modules/audio_processing:gain_controller2
add_library(webrtc_modules_audio_processing_gain_controller2 ${WEBRTC_ROOT}/modules/audio_processing/gain_controller2.cc)
target_include_directories(webrtc_modules_audio_processing_gain_controller2 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_gain_controller2 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_gain_controller2 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_gain_controller2 PUBLIC webrtc_common_audio_common_audio webrtc_modules_audio_processing_aec_dump_interface webrtc_modules_audio_processing_api webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_audio_frame_view webrtc_modules_audio_processing_agc2_adaptive_digital_gain_controller webrtc_modules_audio_processing_agc2_common webrtc_modules_audio_processing_agc2_cpu_features webrtc_modules_audio_processing_agc2_fixed_digital webrtc_modules_audio_processing_agc2_gain_applier webrtc_modules_audio_processing_agc2_input_volume_controller webrtc_modules_audio_processing_agc2_noise_level_estimator webrtc_modules_audio_processing_agc2_saturation_protector webrtc_modules_audio_processing_agc2_speech_level_estimator webrtc_modules_audio_processing_agc2_vad_wrapper webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_system_wrappers_field_trial )

# modules/audio_processing:high_pass_filter
add_library(webrtc_modules_audio_processing_high_pass_filter ${WEBRTC_ROOT}/modules/audio_processing/high_pass_filter.cc)
target_include_directories(webrtc_modules_audio_processing_high_pass_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_high_pass_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_high_pass_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_high_pass_filter PUBLIC webrtc_api_array_view webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_utility_cascaded_biquad_filter webrtc_rtc_base_checks )

# modules/audio_processing:mocks
add_library(webrtc_modules_audio_processing_mocks INTERFACE)
target_link_libraries(webrtc_modules_audio_processing_mocks INTERFACE absl::strings webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_aec_dump_interface webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_audio_processing_statistics webrtc_test_test_support )
target_include_directories(webrtc_modules_audio_processing_mocks INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/ns
add_library(webrtc_modules_audio_processing_ns_ns ${WEBRTC_ROOT}/modules/audio_processing/ns/fast_math.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/histograms.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/noise_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/noise_suppressor.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/ns_fft.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/prior_signal_model.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/prior_signal_model_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/quantile_noise_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/signal_model.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/signal_model_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/speech_probability_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/suppression_params.cc ${WEBRTC_ROOT}/modules/audio_processing/ns/wiener_filter.cc)
target_include_directories(webrtc_modules_audio_processing_ns_ns PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_ns_ns PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_APM_DEBUG_DUMP=0 WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_ns_ns PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_ns_ns PUBLIC absl::optional webrtc_fft_size_128 webrtc_fft_size_256 webrtc_api_array_view webrtc_common_audio_common_audio_c webrtc_modules_audio_processing_apm_logging webrtc_modules_audio_processing_audio_buffer webrtc_modules_audio_processing_high_pass_filter webrtc_modules_audio_processing_utility_cascaded_biquad_filter webrtc_rtc_base_checks webrtc_rtc_base_safe_minmax webrtc_rtc_base_system_arch webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/audio_processing:optionally_built_submodule_creators
add_library(webrtc_modules_audio_processing_optionally_built_submodule_creators ${WEBRTC_ROOT}/modules/audio_processing/optionally_built_submodule_creators.cc)
target_include_directories(webrtc_modules_audio_processing_optionally_built_submodule_creators PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_optionally_built_submodule_creators PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_optionally_built_submodule_creators PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_optionally_built_submodule_creators PUBLIC webrtc_modules_audio_processing_transient_transient_suppressor_api webrtc_modules_audio_processing_transient_transient_suppressor_impl )

# modules/audio_processing:rms_level
add_library(webrtc_modules_audio_processing_rms_level ${WEBRTC_ROOT}/modules/audio_processing/rms_level.cc)
target_include_directories(webrtc_modules_audio_processing_rms_level PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_rms_level PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_rms_level PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_rms_level PUBLIC absl::optional webrtc_api_array_view webrtc_rtc_base_checks )

# modules/audio_processing/transient:transient_suppressor_api
add_library(webrtc_modules_audio_processing_transient_transient_suppressor_api INTERFACE)
target_include_directories(webrtc_modules_audio_processing_transient_transient_suppressor_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/audio_processing/transient:transient_suppressor_impl
add_library(webrtc_modules_audio_processing_transient_transient_suppressor_impl ${WEBRTC_ROOT}/modules/audio_processing/transient/moving_moments.cc ${WEBRTC_ROOT}/modules/audio_processing/transient/transient_detector.cc ${WEBRTC_ROOT}/modules/audio_processing/transient/transient_suppressor_impl.cc ${WEBRTC_ROOT}/modules/audio_processing/transient/wpd_node.cc ${WEBRTC_ROOT}/modules/audio_processing/transient/wpd_tree.cc)
target_include_directories(webrtc_modules_audio_processing_transient_transient_suppressor_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_transient_transient_suppressor_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_transient_transient_suppressor_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_transient_transient_suppressor_impl PUBLIC webrtc_fft_size_256 webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_common_audio_fir_filter webrtc_common_audio_fir_filter_factory webrtc_modules_audio_processing_transient_transient_suppressor_api webrtc_modules_audio_processing_transient_voice_probability_delay_unit webrtc_rtc_base_checks webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging )

# modules/audio_processing/transient:voice_probability_delay_unit
add_library(webrtc_modules_audio_processing_transient_voice_probability_delay_unit ${WEBRTC_ROOT}/modules/audio_processing/transient/voice_probability_delay_unit.cc)
target_include_directories(webrtc_modules_audio_processing_transient_voice_probability_delay_unit PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_transient_voice_probability_delay_unit PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_transient_voice_probability_delay_unit PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_transient_voice_probability_delay_unit PUBLIC webrtc_rtc_base_checks )

# modules/audio_processing/utility:cascaded_biquad_filter
add_library(webrtc_modules_audio_processing_utility_cascaded_biquad_filter ${WEBRTC_ROOT}/modules/audio_processing/utility/cascaded_biquad_filter.cc)
target_include_directories(webrtc_modules_audio_processing_utility_cascaded_biquad_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_utility_cascaded_biquad_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_utility_cascaded_biquad_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_utility_cascaded_biquad_filter PUBLIC webrtc_api_array_view webrtc_rtc_base_checks )

# modules/audio_processing/utility:legacy_delay_estimator
add_library(webrtc_modules_audio_processing_utility_legacy_delay_estimator ${WEBRTC_ROOT}/modules/audio_processing/utility/delay_estimator.cc ${WEBRTC_ROOT}/modules/audio_processing/utility/delay_estimator_wrapper.cc)
target_include_directories(webrtc_modules_audio_processing_utility_legacy_delay_estimator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_utility_legacy_delay_estimator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_utility_legacy_delay_estimator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_utility_legacy_delay_estimator PUBLIC webrtc_rtc_base_checks )

# modules/audio_processing/utility:pffft_wrapper
add_library(webrtc_modules_audio_processing_utility_pffft_wrapper ${WEBRTC_ROOT}/modules/audio_processing/utility/pffft_wrapper.cc)
target_include_directories(webrtc_modules_audio_processing_utility_pffft_wrapper PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_utility_pffft_wrapper PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_utility_pffft_wrapper PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_utility_pffft_wrapper PUBLIC webrtc_pffft webrtc_api_array_view webrtc_rtc_base_checks )

# modules/audio_processing/vad
add_library(webrtc_modules_audio_processing_vad_vad ${WEBRTC_ROOT}/modules/audio_processing/vad/gmm.cc ${WEBRTC_ROOT}/modules/audio_processing/vad/pitch_based_vad.cc ${WEBRTC_ROOT}/modules/audio_processing/vad/pitch_internal.cc ${WEBRTC_ROOT}/modules/audio_processing/vad/pole_zero_filter.cc ${WEBRTC_ROOT}/modules/audio_processing/vad/standalone_vad.cc ${WEBRTC_ROOT}/modules/audio_processing/vad/vad_audio_proc.cc ${WEBRTC_ROOT}/modules/audio_processing/vad/vad_circular_buffer.cc ${WEBRTC_ROOT}/modules/audio_processing/vad/voice_activity_detector.cc)
target_include_directories(webrtc_modules_audio_processing_vad_vad PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_audio_processing_vad_vad PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_audio_processing_vad_vad PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_audio_processing_vad_vad PUBLIC webrtc_fft_size_256 webrtc_audio_utility_audio_frame_operations webrtc_common_audio_common_audio webrtc_common_audio_common_audio_c webrtc_modules_audio_coding_isac_vad webrtc_rtc_base_checks )

# modules/congestion_controller
add_library(webrtc_modules_congestion_controller_congestion_controller ${WEBRTC_ROOT}/modules/congestion_controller/receive_side_congestion_controller.cc ${WEBRTC_ROOT}/modules/congestion_controller/remb_throttler.cc)
target_include_directories(webrtc_modules_congestion_controller_congestion_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_congestion_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_congestion_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_congestion_controller PUBLIC webrtc_api_rtp_parameters webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_modules_pacing_pacing webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_synchronization_mutex )

# modules/congestion_controller/goog_cc:alr_detector
add_library(webrtc_modules_congestion_controller_goog_cc_alr_detector ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/alr_detector.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_alr_detector PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_alr_detector PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_alr_detector PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_alr_detector PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_field_trial_based_config webrtc_logging_rtc_event_pacing webrtc_modules_pacing_interval_budget webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_alr_experiment webrtc_rtc_base_experiments_field_trial_parser )

# modules/congestion_controller/goog_cc:delay_based_bwe
add_library(webrtc_modules_congestion_controller_goog_cc_delay_based_bwe ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/delay_based_bwe.cc ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/inter_arrival_delta.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_delay_based_bwe PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_delay_based_bwe PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_delay_based_bwe PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_delay_based_bwe PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_network_state_predictor_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_logging_rtc_event_bwe webrtc_modules_congestion_controller_goog_cc_estimators webrtc_modules_congestion_controller_goog_cc_link_capacity_estimator webrtc_modules_pacing_pacing webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_race_checker webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_metrics )

# modules/congestion_controller/goog_cc:estimators
add_library(webrtc_modules_congestion_controller_goog_cc_estimators ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/acknowledged_bitrate_estimator.cc ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/acknowledged_bitrate_estimator_interface.cc ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/bitrate_estimator.cc ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/probe_bitrate_estimator.cc ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/robust_throughput_estimator.cc ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/trendline_estimator.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_estimators PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_estimators PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_estimators PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_estimators PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_network_state_predictor_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_logging_rtc_event_bwe webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_experiments_field_trial_parser )

# modules/congestion_controller/goog_cc
add_library(webrtc_modules_congestion_controller_goog_cc_goog_cc ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/goog_cc_network_control.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_goog_cc PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_goog_cc PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_goog_cc PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_goog_cc PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_network_state_predictor_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_field_trial_based_config webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_logging_rtc_event_bwe webrtc_logging_rtc_event_pacing webrtc_modules_congestion_controller_goog_cc_alr_detector webrtc_modules_congestion_controller_goog_cc_delay_based_bwe webrtc_modules_congestion_controller_goog_cc_estimators webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v2 webrtc_modules_congestion_controller_goog_cc_probe_controller webrtc_modules_congestion_controller_goog_cc_pushback_controller webrtc_modules_congestion_controller_goog_cc_send_side_bwe webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_experiments_alr_experiment webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_rate_control_settings webrtc_system_wrappers_system_wrappers )

# modules/congestion_controller/goog_cc:link_capacity_estimator
add_library(webrtc_modules_congestion_controller_goog_cc_link_capacity_estimator ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/link_capacity_estimator.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_link_capacity_estimator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_link_capacity_estimator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_link_capacity_estimator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_link_capacity_estimator PUBLIC absl::optional webrtc_api_units_data_rate webrtc_rtc_base_safe_minmax )

# modules/congestion_controller/goog_cc:loss_based_bwe_v1
add_library(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v1 ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/loss_based_bandwidth_estimation.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v1 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v1 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v1 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v1 PUBLIC absl::strings webrtc_api_field_trials_view webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_experiments_field_trial_parser )

# modules/congestion_controller/goog_cc:loss_based_bwe_v2
add_library(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v2 ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v2 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v2 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v2 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v2 PUBLIC absl::algorithm_container absl::optional webrtc_api_array_view webrtc_api_field_trials_view webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser )

# modules/congestion_controller/goog_cc:probe_controller
add_library(webrtc_modules_congestion_controller_goog_cc_probe_controller ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/probe_controller.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_probe_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_probe_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_probe_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_probe_controller PUBLIC absl::core_headers absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_logging_rtc_event_bwe webrtc_logging_rtc_event_pacing webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_safe_conversions webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_metrics )

# modules/congestion_controller/goog_cc:pushback_controller
add_library(webrtc_modules_congestion_controller_goog_cc_pushback_controller ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/congestion_window_pushback_controller.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_pushback_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_pushback_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_pushback_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_pushback_controller PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_transport_network_control webrtc_api_units_data_size webrtc_rtc_base_checks webrtc_rtc_base_experiments_rate_control_settings )

# modules/congestion_controller/goog_cc:send_side_bwe
add_library(webrtc_modules_congestion_controller_goog_cc_send_side_bwe ${WEBRTC_ROOT}/modules/congestion_controller/goog_cc/send_side_bandwidth_estimation.cc)
target_include_directories(webrtc_modules_congestion_controller_goog_cc_send_side_bwe PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_goog_cc_send_side_bwe PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_goog_cc_send_side_bwe PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_goog_cc_send_side_bwe PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_network_state_predictor_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_logging_rtc_event_bwe webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v1 webrtc_modules_congestion_controller_goog_cc_loss_based_bwe_v2 webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/congestion_controller/rtp:control_handler
add_library(webrtc_modules_congestion_controller_rtp_control_handler ${WEBRTC_ROOT}/modules/congestion_controller/rtp/control_handler.cc)
target_include_directories(webrtc_modules_congestion_controller_rtp_control_handler PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_rtp_control_handler PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_rtp_control_handler PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_rtp_control_handler PUBLIC absl::optional webrtc_api_sequence_checker webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_modules_pacing_pacing webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_system_no_unique_address webrtc_system_wrappers_field_trial )

# modules/congestion_controller/rtp:transport_feedback
add_library(webrtc_modules_congestion_controller_rtp_transport_feedback ${WEBRTC_ROOT}/modules/congestion_controller/rtp/transport_feedback_adapter.cc ${WEBRTC_ROOT}/modules/congestion_controller/rtp/transport_feedback_demuxer.cc)
target_include_directories(webrtc_modules_congestion_controller_rtp_transport_feedback PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_congestion_controller_rtp_transport_feedback PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_congestion_controller_rtp_transport_feedback PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_congestion_controller_rtp_transport_feedback PUBLIC absl::algorithm_container absl::optional webrtc_api_sequence_checker webrtc_api_transport_network_control webrtc_api_units_data_size webrtc_api_units_timestamp webrtc_modules_module_api_public webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_route webrtc_rtc_base_rtc_numerics webrtc_rtc_base_network_sent_packet webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial )

# modules:module_api
add_library(webrtc_modules_module_api INTERFACE)
target_include_directories(webrtc_modules_module_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules:module_api_public
add_library(webrtc_modules_module_api_public INTERFACE)
target_link_libraries(webrtc_modules_module_api_public INTERFACE absl::optional )
target_include_directories(webrtc_modules_module_api_public INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules:module_fec_api
add_library(webrtc_modules_module_fec_api INTERFACE)
target_include_directories(webrtc_modules_module_fec_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/pacing:interval_budget
add_library(webrtc_modules_pacing_interval_budget ${WEBRTC_ROOT}/modules/pacing/interval_budget.cc)
target_include_directories(webrtc_modules_pacing_interval_budget PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_pacing_interval_budget PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_pacing_interval_budget PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_pacing_interval_budget PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# modules/pacing
add_library(webrtc_modules_pacing_pacing ${WEBRTC_ROOT}/modules/pacing/bitrate_prober.cc ${WEBRTC_ROOT}/modules/pacing/pacing_controller.cc ${WEBRTC_ROOT}/modules/pacing/packet_router.cc ${WEBRTC_ROOT}/modules/pacing/prioritized_packet_queue.cc ${WEBRTC_ROOT}/modules/pacing/task_queue_paced_sender.cc)
target_include_directories(webrtc_modules_pacing_pacing PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_pacing_pacing PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_pacing_pacing PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_pacing_pacing PUBLIC absl::cleanup absl::memory absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_function_view webrtc_api_sequence_checker webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_field_trial_based_config webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_logging_rtc_event_bwe webrtc_logging_rtc_event_pacing webrtc_modules_pacing_interval_budget webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_utility_utility webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_numerics webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_unused webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_metrics )

# modules/remote_bitrate_estimator
add_library(webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/aimd_rate_control.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/bwe_defines.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/inter_arrival.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/overuse_detector.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/overuse_estimator.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/packet_arrival_map.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/remote_bitrate_estimator_abs_send_time.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/remote_bitrate_estimator_single_stream.cc ${WEBRTC_ROOT}/modules/remote_bitrate_estimator/remote_estimator_proxy.cc)
target_include_directories(webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_network_state_predictor_api webrtc_api_rtp_headers webrtc_api_transport_field_trial_based_config webrtc_api_transport_network_control webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_modules_module_api webrtc_modules_module_api_public webrtc_modules_congestion_controller_goog_cc_link_capacity_estimator webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_bitrate_tracker webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_minmax webrtc_rtc_base_stringutils webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/rtp_rtcp:leb128
add_library(webrtc_modules_rtp_rtcp_leb128 ${WEBRTC_ROOT}/modules/rtp_rtcp/source/leb128.cc)
target_include_directories(webrtc_modules_rtp_rtcp_leb128 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_rtp_rtcp_leb128 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_rtp_rtcp_leb128 PRIVATE -fno-rtti )

# modules/rtp_rtcp
add_library(webrtc_modules_rtp_rtcp_rtp_rtcp ${WEBRTC_ROOT}/modules/rtp_rtcp/source/absolute_capture_time_interpolator.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/absolute_capture_time_sender.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/active_decode_targets_helper.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/capture_clock_offset_updater.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/create_video_rtp_depacketizer.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/dtmf_queue.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/fec_private_tables_bursty.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/fec_private_tables_random.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/flexfec_03_header_reader_writer.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/flexfec_header_reader_writer.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/flexfec_receiver.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/flexfec_sender.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/forward_error_correction.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/forward_error_correction_internal.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/frame_object.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/packet_loss_stats.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/packet_sequencer.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/receive_statistics_impl.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/remote_ntp_time_estimator.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_nack_stats.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_receiver.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_sender.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_descriptor_authentication.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_format.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_format_h264.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_format_video_generic.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_format_vp8.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_format_vp9.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_header_extension_size.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_packet_history.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_packetizer_av1.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_rtcp_impl2.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_sender.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_sender_audio.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_sender_egress.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_sender_video.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_sender_video_frame_transformer_delegate.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_sequence_number_map.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/source_tracker.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/time_util.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/tmmbr_help.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/ulpfec_generator.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/ulpfec_header_reader_writer.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/ulpfec_receiver.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/video_rtp_depacketizer.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/video_rtp_depacketizer_av1.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/video_rtp_depacketizer_generic.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/video_rtp_depacketizer_raw.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/video_rtp_depacketizer_vp8.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/video_rtp_depacketizer_vp9.cc)
target_include_directories(webrtc_modules_rtp_rtcp_rtp_rtcp PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_rtp_rtcp_rtp_rtcp PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_rtp_rtcp_rtp_rtcp PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_rtp_rtcp_rtp_rtcp PUBLIC absl::algorithm_container absl::algorithm_container absl::memory absl::strings absl::optional absl::variant webrtc_api_array_view webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_function_view webrtc_api_rtp_headers webrtc_api_rtp_packet_info webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_encryptor_interface webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_rtp_dependency_descriptor webrtc_api_transport_rtp_rtp_source webrtc_api_units_data_rate webrtc_api_units_frequency webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_encoded_frame webrtc_api_video_encoded_image webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_frame_metadata webrtc_api_video_video_frame_type webrtc_api_video_video_layers_allocation webrtc_api_video_video_rtp_headers webrtc_call_rtp_interfaces webrtc_call_video_stream_api webrtc_common_video_common_video webrtc_logging_rtc_event_rtp_rtcp webrtc_modules_module_api_public webrtc_modules_module_fec_api webrtc_modules_audio_coding_audio_coding_module_typedefs webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_modules_rtp_rtcp_leb128 webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_rtp_rtcp_rtp_video_header webrtc_modules_video_coding_codec_globals_headers webrtc_rtc_base_bit_buffer webrtc_rtc_base_bitrate_tracker webrtc_rtc_base_bitstream_reader webrtc_rtc_base_buffer webrtc_rtc_base_byte_buffer webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_divide_round webrtc_rtc_base_event_tracer webrtc_rtc_base_frequency_tracker webrtc_rtc_base_gtest_prod webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mod_ops webrtc_rtc_base_one_time_event webrtc_rtc_base_race_checker webrtc_rtc_base_random webrtc_rtc_base_rate_limiter webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_containers_flat_map webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_metrics )

# modules/rtp_rtcp:rtp_rtcp_format
add_library(webrtc_modules_rtp_rtcp_rtp_rtcp_format ${WEBRTC_ROOT}/modules/rtp_rtcp/include/report_block_data.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/include/rtp_rtcp_defines.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/app.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/bye.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/common_header.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/compound_packet.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/dlrr.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/extended_reports.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/fir.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/loss_notification.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/nack.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/pli.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/psfb.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/rapid_resync_request.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/receiver_report.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/remb.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/remote_estimate.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/report_block.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/rrtr.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/rtpfb.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/sdes.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/sender_report.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/target_bitrate.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/tmmb_item.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/tmmbn.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/tmmbr.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtcp_packet/transport_feedback.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_dependency_descriptor_extension.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_dependency_descriptor_reader.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_dependency_descriptor_reader.h ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_dependency_descriptor_writer.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_dependency_descriptor_writer.h ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_generic_frame_descriptor.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_generic_frame_descriptor_extension.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_header_extension_map.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_header_extensions.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_packet.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_packet_received.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_packet_to_send.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_util.cc ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc)
target_include_directories(webrtc_modules_rtp_rtcp_rtp_rtcp_format PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_rtp_rtcp_rtp_rtcp_format PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_rtp_rtcp_rtp_rtcp_format PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_rtp_rtcp_rtp_rtcp_format PUBLIC absl::algorithm_container absl::core_headers absl::strings absl::optional absl::variant webrtc_api_array_view webrtc_api_function_view webrtc_api_refcountedbase webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_transport_network_control webrtc_api_transport_rtp_dependency_descriptor webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_video_layers_allocation webrtc_api_video_video_rtp_headers webrtc_modules_module_api_public webrtc_modules_rtp_rtcp_leb128 webrtc_modules_video_coding_codec_globals_headers webrtc_rtc_base_bit_buffer webrtc_rtc_base_bitstream_reader webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_divide_round webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_system_wrappers_system_wrappers )

# modules/rtp_rtcp:rtp_video_header
add_library(webrtc_modules_rtp_rtcp_rtp_video_header ${WEBRTC_ROOT}/modules/rtp_rtcp/source/rtp_video_header.cc)
target_include_directories(webrtc_modules_rtp_rtcp_rtp_video_header PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_rtp_rtcp_rtp_video_header PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_rtp_rtcp_rtp_video_header PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_rtp_rtcp_rtp_video_header PUBLIC absl::algorithm_container absl::optional absl::variant webrtc_api_rtp_headers webrtc_api_transport_rtp_dependency_descriptor webrtc_api_video_video_frame webrtc_api_video_video_frame_metadata webrtc_api_video_video_frame_type webrtc_api_video_video_rtp_headers webrtc_modules_video_coding_codec_globals_headers )

# modules/third_party/g711:g711_3p
add_library(webrtc_modules_third_party_g711_g711_3p ${WEBRTC_ROOT}/modules/third_party/g711/g711.c)
target_include_directories(webrtc_modules_third_party_g711_g711_3p PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_third_party_g711_g711_3p PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_third_party_g711_g711_3p PRIVATE -fno-rtti -x c )

# modules/third_party/g722:g722_3p
add_library(webrtc_modules_third_party_g722_g722_3p ${WEBRTC_ROOT}/modules/third_party/g722/g722_decode.c ${WEBRTC_ROOT}/modules/third_party/g722/g722_encode.c)
target_include_directories(webrtc_modules_third_party_g722_g722_3p PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_third_party_g722_g722_3p PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_third_party_g722_g722_3p PRIVATE -fno-rtti -x c )

# modules/utility
add_library(webrtc_modules_utility_utility INTERFACE)
target_include_directories(webrtc_modules_utility_utility INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/video_capture:video_capture_internal_impl
add_library(webrtc_modules_video_capture_video_capture_internal_impl ${WEBRTC_ROOT}/modules/video_capture/windows/device_info_ds.cc ${WEBRTC_ROOT}/modules/video_capture/windows/help_functions_ds.cc ${WEBRTC_ROOT}/modules/video_capture/windows/sink_filter_ds.cc ${WEBRTC_ROOT}/modules/video_capture/windows/video_capture_ds.cc ${WEBRTC_ROOT}/modules/video_capture/windows/video_capture_factory_windows.cc ${WEBRTC_ROOT}/modules/video_capture/video_capture_options.cc)
target_include_directories(webrtc_modules_video_capture_video_capture_internal_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_capture_video_capture_internal_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_capture_video_capture_internal_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_capture_video_capture_internal_impl PUBLIC webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_modules_video_capture_video_capture_module webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread webrtc_rtc_base_refcount webrtc_rtc_base_stringutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_system_wrappers ole32::ole32 oleaut32::oleaut32 strmiids::strmiids user32::user32)

# modules/video_capture:video_capture_module
add_library(webrtc_modules_video_capture_video_capture_module ${WEBRTC_ROOT}/modules/video_capture/device_info_impl.cc ${WEBRTC_ROOT}/modules/video_capture/video_capture_factory.cc ${WEBRTC_ROOT}/modules/video_capture/video_capture_impl.cc)
target_include_directories(webrtc_modules_video_capture_video_capture_module PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_capture_video_capture_module PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_capture_video_capture_module PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_capture_video_capture_module PUBLIC absl::strings webrtc-yuv webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_common_video_common_video webrtc_media_rtc_media_base webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_refcount webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_system_wrappers )

# modules/video_coding:chain_diff_calculator
add_library(webrtc_modules_video_coding_chain_diff_calculator ${WEBRTC_ROOT}/modules/video_coding/chain_diff_calculator.cc)
target_include_directories(webrtc_modules_video_coding_chain_diff_calculator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_chain_diff_calculator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_chain_diff_calculator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_chain_diff_calculator PUBLIC absl::algorithm_container absl::optional webrtc_rtc_base_checks webrtc_rtc_base_logging )

# modules/video_coding:codec_globals_headers
add_library(webrtc_modules_video_coding_codec_globals_headers INTERFACE)
target_link_libraries(webrtc_modules_video_coding_codec_globals_headers INTERFACE webrtc_rtc_base_checks )
target_include_directories(webrtc_modules_video_coding_codec_globals_headers INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/video_coding/codecs/av1:av1_svc_config
add_library(webrtc_modules_video_coding_codecs_av1_av1_svc_config ${WEBRTC_ROOT}/modules/video_coding/codecs/av1/av1_svc_config.cc)
target_include_directories(webrtc_modules_video_coding_codecs_av1_av1_svc_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_codecs_av1_av1_svc_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_codecs_av1_av1_svc_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_codecs_av1_av1_svc_config PUBLIC absl::algorithm_container webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_svc_scalability_mode_util webrtc_modules_video_coding_svc_scalability_structures webrtc_modules_video_coding_svc_scalable_video_controller webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# modules/video_coding/codecs/av1:dav1d_decoder
add_library(webrtc_modules_video_coding_codecs_av1_dav1d_decoder ${WEBRTC_ROOT}/modules/video_coding/codecs/av1/dav1d_decoder.cc)
target_include_directories(webrtc_modules_video_coding_codecs_av1_dav1d_decoder PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_codecs_av1_dav1d_decoder PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_codecs_av1_dav1d_decoder PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_codecs_av1_dav1d_decoder PUBLIC absl::optional dav1d webrtc-yuv webrtc_api_scoped_refptr webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_modules_video_coding_video_codec_interface webrtc_rtc_base_logging )

# modules/video_coding/codecs/av1:libaom_av1_encoder
add_library(webrtc_modules_video_coding_codecs_av1_libaom_av1_encoder ${WEBRTC_ROOT}/modules/video_coding/codecs/av1/libaom_av1_encoder.cc)
target_include_directories(webrtc_modules_video_coding_codecs_av1_libaom_av1_encoder PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_codecs_av1_libaom_av1_encoder PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_codecs_av1_libaom_av1_encoder PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_codecs_av1_libaom_av1_encoder PUBLIC webrtc_libaom absl::algorithm_container absl::core_headers absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_scoped_refptr webrtc_api_transport_field_trial_based_config webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_svc_scalability_structures webrtc_modules_video_coding_svc_scalable_video_controller webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_rtc_numerics webrtc_rtc_base_experiments_encoder_info_settings )

# modules/video_coding:conditional_dependency_on_ffmpeg_and_openh264
add_library(webrtc_modules_video_coding_conditional_dependency_on_ffmpeg_and_openh264 INTERFACE)
target_include_directories(webrtc_modules_video_coding_conditional_dependency_on_ffmpeg_and_openh264 INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# modules/video_coding:encoded_frame
add_library(webrtc_modules_video_coding_encoded_frame ${WEBRTC_ROOT}/modules/video_coding/encoded_frame.cc)
target_include_directories(webrtc_modules_video_coding_encoded_frame PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_encoded_frame PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_encoded_frame PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_encoded_frame PUBLIC absl::optional absl::variant webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_modules_module_api_public webrtc_modules_rtp_rtcp_rtp_video_header webrtc_modules_video_coding_codec_globals_headers webrtc_modules_video_coding_video_codec_interface webrtc_rtc_base_checks webrtc_rtc_base_experiments_alr_experiment webrtc_rtc_base_experiments_rtt_mult_experiment webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_system_wrappers )

# modules/video_coding:frame_dependencies_calculator
add_library(webrtc_modules_video_coding_frame_dependencies_calculator ${WEBRTC_ROOT}/modules/video_coding/frame_dependencies_calculator.cc)
target_include_directories(webrtc_modules_video_coding_frame_dependencies_calculator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_frame_dependencies_calculator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_frame_dependencies_calculator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_frame_dependencies_calculator PUBLIC absl::algorithm_container absl::algorithm_container absl::optional webrtc_api_array_view webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor webrtc_rtc_base_checks webrtc_rtc_base_logging )

# modules/video_coding:frame_helpers
add_library(webrtc_modules_video_coding_frame_helpers ${WEBRTC_ROOT}/modules/video_coding/frame_helpers.cc)
target_include_directories(webrtc_modules_video_coding_frame_helpers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_frame_helpers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_frame_helpers PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_frame_helpers PUBLIC absl::algorithm_container webrtc_api_video_encoded_frame webrtc_rtc_base_logging )

# modules/video_coding:nack_requester
add_library(webrtc_modules_video_coding_nack_requester ${WEBRTC_ROOT}/modules/video_coding/histogram.cc ${WEBRTC_ROOT}/modules/video_coding/nack_requester.cc)
target_include_directories(webrtc_modules_video_coding_nack_requester PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_nack_requester PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_nack_requester PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_nack_requester PUBLIC webrtc_api_field_trials_view webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_modules_module_api webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_numerics webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers )

# modules/video_coding:packet_buffer
add_library(webrtc_modules_video_coding_packet_buffer ${WEBRTC_ROOT}/modules/video_coding/packet_buffer.cc)
target_include_directories(webrtc_modules_video_coding_packet_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_packet_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_packet_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_packet_buffer PUBLIC absl::core_headers absl::variant webrtc_api_array_view webrtc_api_rtp_packet_info webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_video_frame_type webrtc_common_video_common_video webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_rtp_rtcp_rtp_video_header webrtc_modules_video_coding_codec_globals_headers webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mod_ops webrtc_rtc_base_rtc_numerics )

# modules/video_coding:simulcast_test_fixture_impl
add_library(webrtc_modules_video_coding_simulcast_test_fixture_impl ${WEBRTC_ROOT}/modules/video_coding/utility/simulcast_test_fixture_impl.cc)
target_include_directories(webrtc_modules_video_coding_simulcast_test_fixture_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_simulcast_test_fixture_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_modules_video_coding_simulcast_test_fixture_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_simulcast_test_fixture_impl PUBLIC webrtc_api_mock_video_decoder webrtc_api_mock_video_encoder webrtc_api_simulcast_test_fixture_api webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_modules_video_coding_video_coding webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_checks webrtc_test_test_support )

# modules/video_coding/svc:scalability_mode_util
add_library(webrtc_modules_video_coding_svc_scalability_mode_util ${WEBRTC_ROOT}/modules/video_coding/svc/scalability_mode_util.cc)
target_include_directories(webrtc_modules_video_coding_svc_scalability_mode_util PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_svc_scalability_mode_util PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_svc_scalability_mode_util PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_svc_scalability_mode_util PUBLIC absl::strings absl::optional webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_checks )

# modules/video_coding/svc:scalability_structures
add_library(webrtc_modules_video_coding_svc_scalability_structures ${WEBRTC_ROOT}/modules/video_coding/svc/create_scalability_structure.cc ${WEBRTC_ROOT}/modules/video_coding/svc/scalability_structure_full_svc.cc ${WEBRTC_ROOT}/modules/video_coding/svc/scalability_structure_key_svc.cc ${WEBRTC_ROOT}/modules/video_coding/svc/scalability_structure_l2t2_key_shift.cc ${WEBRTC_ROOT}/modules/video_coding/svc/scalability_structure_simulcast.cc)
target_include_directories(webrtc_modules_video_coding_svc_scalability_structures PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_svc_scalability_structures PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_svc_scalability_structures PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_svc_scalability_structures PUBLIC absl::core_headers absl::strings absl::optional webrtc_api_transport_rtp_dependency_descriptor webrtc_api_video_video_bitrate_allocation webrtc_api_video_codecs_scalability_mode webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor webrtc_modules_video_coding_svc_scalable_video_controller webrtc_rtc_base_checks webrtc_rtc_base_logging )

# modules/video_coding/svc:scalable_video_controller
add_library(webrtc_modules_video_coding_svc_scalable_video_controller ${WEBRTC_ROOT}/modules/video_coding/svc/scalable_video_controller_no_layering.cc)
target_include_directories(webrtc_modules_video_coding_svc_scalable_video_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_svc_scalable_video_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_svc_scalable_video_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_svc_scalable_video_controller PUBLIC absl::algorithm_container absl::optional webrtc_api_transport_rtp_dependency_descriptor webrtc_api_video_video_bitrate_allocation webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor webrtc_rtc_base_checks )

# modules/video_coding/svc:svc_rate_allocator
add_library(webrtc_modules_video_coding_svc_svc_rate_allocator ${WEBRTC_ROOT}/modules/video_coding/svc/svc_rate_allocator.cc)
target_include_directories(webrtc_modules_video_coding_svc_svc_rate_allocator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_svc_svc_rate_allocator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_svc_svc_rate_allocator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_svc_svc_rate_allocator PUBLIC absl::algorithm_container webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_codec_constants webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_svc_scalability_structures webrtc_rtc_base_checks webrtc_rtc_base_experiments_stable_target_rate_experiment )

# modules/video_coding/timing:decode_time_percentile_filter
add_library(webrtc_modules_video_coding_timing_decode_time_percentile_filter ${WEBRTC_ROOT}/modules/video_coding/timing/decode_time_percentile_filter.cc)
target_include_directories(webrtc_modules_video_coding_timing_decode_time_percentile_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_timing_decode_time_percentile_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_timing_decode_time_percentile_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_timing_decode_time_percentile_filter PUBLIC webrtc_rtc_base_rtc_numerics )

# modules/video_coding/timing:frame_delay_variation_kalman_filter
add_library(webrtc_modules_video_coding_timing_frame_delay_variation_kalman_filter ${WEBRTC_ROOT}/modules/video_coding/timing/frame_delay_variation_kalman_filter.cc)
target_include_directories(webrtc_modules_video_coding_timing_frame_delay_variation_kalman_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_timing_frame_delay_variation_kalman_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_timing_frame_delay_variation_kalman_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_timing_frame_delay_variation_kalman_filter PUBLIC webrtc_api_units_data_size webrtc_api_units_time_delta )

# modules/video_coding/timing:inter_frame_delay_variation_calculator
add_library(webrtc_modules_video_coding_timing_inter_frame_delay_variation_calculator ${WEBRTC_ROOT}/modules/video_coding/timing/inter_frame_delay_variation_calculator.cc)
target_include_directories(webrtc_modules_video_coding_timing_inter_frame_delay_variation_calculator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_timing_inter_frame_delay_variation_calculator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_timing_inter_frame_delay_variation_calculator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_timing_inter_frame_delay_variation_calculator PUBLIC absl::optional webrtc_api_units_frequency webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_modules_module_api_public webrtc_rtc_base_rtc_numerics )

# modules/video_coding/timing:jitter_estimator
add_library(webrtc_modules_video_coding_timing_jitter_estimator ${WEBRTC_ROOT}/modules/video_coding/timing/jitter_estimator.cc)
target_include_directories(webrtc_modules_video_coding_timing_jitter_estimator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_timing_jitter_estimator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_timing_jitter_estimator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_timing_jitter_estimator PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_units_data_size webrtc_api_units_frequency webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_modules_video_coding_timing_frame_delay_variation_kalman_filter webrtc_modules_video_coding_timing_rtt_filter webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_rolling_accumulator webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_system_wrappers )

# modules/video_coding/timing:rtt_filter
add_library(webrtc_modules_video_coding_timing_rtt_filter ${WEBRTC_ROOT}/modules/video_coding/timing/rtt_filter.cc)
target_include_directories(webrtc_modules_video_coding_timing_rtt_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_timing_rtt_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_timing_rtt_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_timing_rtt_filter PUBLIC absl::algorithm_container absl::algorithm_container webrtc_api_units_time_delta )

# modules/video_coding/timing:timestamp_extrapolator
add_library(webrtc_modules_video_coding_timing_timestamp_extrapolator ${WEBRTC_ROOT}/modules/video_coding/timing/timestamp_extrapolator.cc)
target_include_directories(webrtc_modules_video_coding_timing_timestamp_extrapolator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_timing_timestamp_extrapolator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_timing_timestamp_extrapolator PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_timing_timestamp_extrapolator PUBLIC absl::optional webrtc_api_units_timestamp webrtc_modules_module_api_public webrtc_rtc_base_rtc_numerics )

# modules/video_coding/timing:timing_module
add_library(webrtc_modules_video_coding_timing_timing_module ${WEBRTC_ROOT}/modules/video_coding/timing/timing.cc)
target_include_directories(webrtc_modules_video_coding_timing_timing_module PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_timing_timing_module PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_timing_timing_module PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_timing_timing_module PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_units_time_delta webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_modules_video_coding_timing_decode_time_percentile_filter webrtc_modules_video_coding_timing_timestamp_extrapolator webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_numerics webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers )

# modules/video_coding:video_codec_interface
add_library(webrtc_modules_video_coding_video_codec_interface ${WEBRTC_ROOT}/modules/video_coding/include/video_codec_interface.cc ${WEBRTC_ROOT}/modules/video_coding/video_coding_defines.cc)
target_include_directories(webrtc_modules_video_coding_video_codec_interface PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_video_codec_interface PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_video_codec_interface PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_video_codec_interface PUBLIC absl::optional webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_common_video_generic_frame_descriptor_generic_frame_descriptor webrtc_modules_video_coding_codec_globals_headers webrtc_rtc_base_system_rtc_export )

# modules/video_coding
add_library(webrtc_modules_video_coding_video_coding ${WEBRTC_ROOT}/modules/video_coding/decoder_database.cc ${WEBRTC_ROOT}/modules/video_coding/fec_controller_default.cc ${WEBRTC_ROOT}/modules/video_coding/generic_decoder.cc ${WEBRTC_ROOT}/modules/video_coding/h264_sprop_parameter_sets.cc ${WEBRTC_ROOT}/modules/video_coding/h264_sps_pps_tracker.cc ${WEBRTC_ROOT}/modules/video_coding/loss_notification_controller.cc ${WEBRTC_ROOT}/modules/video_coding/media_opt_util.cc ${WEBRTC_ROOT}/modules/video_coding/rtp_frame_id_only_ref_finder.cc ${WEBRTC_ROOT}/modules/video_coding/rtp_frame_reference_finder.cc ${WEBRTC_ROOT}/modules/video_coding/rtp_generic_ref_finder.cc ${WEBRTC_ROOT}/modules/video_coding/rtp_seq_num_only_ref_finder.cc ${WEBRTC_ROOT}/modules/video_coding/rtp_vp8_ref_finder.cc ${WEBRTC_ROOT}/modules/video_coding/rtp_vp9_ref_finder.cc ${WEBRTC_ROOT}/modules/video_coding/video_codec_initializer.cc ${WEBRTC_ROOT}/modules/video_coding/video_receiver2.cc)
target_include_directories(webrtc_modules_video_coding_video_coding PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_video_coding PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_video_coding PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_video_coding PUBLIC absl::algorithm_container absl::core_headers absl::algorithm_container absl::optional absl::variant webrtc_api_array_view webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_rtp_headers webrtc_api_rtp_packet_info webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_frequency webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_encoded_frame webrtc_api_video_encoded_image webrtc_api_video_video_adaptation webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_frame webrtc_api_video_video_frame_type webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_modules_module_api webrtc_modules_module_api_public webrtc_modules_module_fec_api webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_rtp_rtcp_rtp_video_header webrtc_modules_video_coding_codec_globals_headers webrtc_modules_video_coding_encoded_frame webrtc_modules_video_coding_frame_helpers webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_vp8_scalability webrtc_modules_video_coding_webrtc_vp9_helpers webrtc_modules_video_coding_codecs_av1_av1_svc_config webrtc_modules_video_coding_svc_scalability_mode_util webrtc_modules_video_coding_timing_inter_frame_delay_variation_calculator webrtc_modules_video_coding_timing_jitter_estimator webrtc_modules_video_coding_timing_rtt_filter webrtc_modules_video_coding_timing_timing_module webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_alr_experiment webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_min_video_bitrate_experiment webrtc_rtc_base_experiments_rate_control_settings webrtc_rtc_base_experiments_rtt_mult_experiment webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_rtc_base_third_party_base64_base64 webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics webrtc_video_config_encoder_config )

# modules/video_coding:video_coding_utility
add_library(webrtc_modules_video_coding_video_coding_utility ${WEBRTC_ROOT}/modules/video_coding/utility/bandwidth_quality_scaler.cc ${WEBRTC_ROOT}/modules/video_coding/utility/decoded_frames_history.cc ${WEBRTC_ROOT}/modules/video_coding/utility/frame_dropper.cc ${WEBRTC_ROOT}/modules/video_coding/utility/framerate_controller_deprecated.cc ${WEBRTC_ROOT}/modules/video_coding/utility/ivf_file_reader.cc ${WEBRTC_ROOT}/modules/video_coding/utility/ivf_file_writer.cc ${WEBRTC_ROOT}/modules/video_coding/utility/qp_parser.cc ${WEBRTC_ROOT}/modules/video_coding/utility/quality_scaler.cc ${WEBRTC_ROOT}/modules/video_coding/utility/simulcast_rate_allocator.cc ${WEBRTC_ROOT}/modules/video_coding/utility/simulcast_utility.cc ${WEBRTC_ROOT}/modules/video_coding/utility/vp8_header_parser.cc ${WEBRTC_ROOT}/modules/video_coding/utility/vp9_uncompressed_header_parser.cc)
target_include_directories(webrtc_modules_video_coding_video_coding_utility PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_video_coding_utility PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_video_coding_utility PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_video_coding_utility PUBLIC absl::bits absl::strings absl::optional webrtc_api_array_view webrtc_api_field_trials_view webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_units_time_delta webrtc_api_video_encoded_frame webrtc_api_video_encoded_image webrtc_api_video_video_adaptation webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_svc_scalability_mode_util webrtc_rtc_base_bitstream_reader webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_rate_statistics webrtc_rtc_base_refcount webrtc_rtc_base_rtc_numerics webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_weak_ptr webrtc_rtc_base_experiments_bandwidth_quality_scaler_settings webrtc_rtc_base_experiments_encoder_info_settings webrtc_rtc_base_experiments_quality_scaler_settings webrtc_rtc_base_experiments_quality_scaling_experiment webrtc_rtc_base_experiments_rate_control_settings webrtc_rtc_base_experiments_stable_target_rate_experiment webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_arch webrtc_rtc_base_system_file_wrapper webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_field_trial )

# modules/video_coding:webrtc_h264
add_library(webrtc_modules_video_coding_webrtc_h264 ${WEBRTC_ROOT}/modules/video_coding/codecs/h264/h264.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/h264/h264_color_space.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/h264/h264_decoder_impl.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/h264/h264_encoder_impl.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_h264 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_h264 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_h264 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_h264 PUBLIC absl::algorithm_container absl::strings absl::optional webrtc-yuv webrtc_api_transport_rtp_dependency_descriptor webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_frame_i010 webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_media_codec webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_modules_video_coding_conditional_dependency_on_ffmpeg_and_openh264 webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_svc_scalability_structures webrtc_modules_video_coding_svc_scalable_video_controller webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_timeutils webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/video_coding:webrtc_libvpx_interface
add_library(webrtc_modules_video_coding_webrtc_libvpx_interface ${WEBRTC_ROOT}/modules/video_coding/codecs/interface/libvpx_interface.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_libvpx_interface PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_libvpx_interface PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_libvpx_interface PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_libvpx_interface PUBLIC libvpx webrtc_rtc_base_checks )

# modules/video_coding:webrtc_multiplex
add_library(webrtc_modules_video_coding_webrtc_multiplex ${WEBRTC_ROOT}/modules/video_coding/codecs/multiplex/augmented_video_frame_buffer.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/multiplex/multiplex_decoder_adapter.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/multiplex/multiplex_encoded_image_packer.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/multiplex/multiplex_encoder_adapter.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_multiplex PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_multiplex PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_multiplex PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_multiplex PUBLIC webrtc_api_fec_controller_api webrtc_api_scoped_refptr webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_media_rtc_media_base webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_synchronization_mutex )

# modules/video_coding:webrtc_vp8
add_library(webrtc_modules_video_coding_webrtc_vp8 ${WEBRTC_ROOT}/modules/video_coding/codecs/vp8/libvpx_vp8_decoder.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_vp8 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_vp8 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_vp8 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_vp8 PUBLIC libvpx absl::algorithm_container absl::strings absl::optional webrtc-yuv webrtc_api_fec_controller_api webrtc_api_scoped_refptr webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_api_video_codecs_vp8_temporal_layers_factory webrtc_common_video_common_video webrtc_modules_video_coding_codec_globals_headers webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_libvpx_interface webrtc_modules_video_coding_webrtc_vp8_scalability webrtc_modules_video_coding_webrtc_vp8_temporal_layers webrtc_modules_video_coding_svc_scalability_mode_util webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_rtc_numerics webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_cpu_speed_experiment webrtc_rtc_base_experiments_encoder_info_settings webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_rate_control_settings webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/video_coding:webrtc_vp8_scalability
add_library(webrtc_modules_video_coding_webrtc_vp8_scalability ${WEBRTC_ROOT}/modules/video_coding/codecs/vp8/vp8_scalability.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_vp8_scalability PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_vp8_scalability PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_vp8_scalability PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_vp8_scalability PUBLIC webrtc_api_video_codecs_scalability_mode )

# modules/video_coding:webrtc_vp8_temporal_layers
add_library(webrtc_modules_video_coding_webrtc_vp8_temporal_layers ${WEBRTC_ROOT}/modules/video_coding/codecs/vp8/default_temporal_layers.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/vp8/screenshare_layers.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/vp8/temporal_layers_checker.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_vp8_temporal_layers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_vp8_temporal_layers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_vp8_temporal_layers PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_vp8_temporal_layers PUBLIC absl::optional webrtc_api_fec_controller_api webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_codec_globals_headers webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rate_statistics webrtc_rtc_base_rtc_numerics webrtc_rtc_base_timeutils webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# modules/video_coding:webrtc_vp9
add_library(webrtc_modules_video_coding_webrtc_vp9 ${WEBRTC_ROOT}/modules/video_coding/codecs/vp9/libvpx_vp9_decoder.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/vp9/libvpx_vp9_encoder.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/vp9/vp9.cc ${WEBRTC_ROOT}/modules/video_coding/codecs/vp9/vp9_frame_buffer_pool.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_vp9 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_vp9 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_vp9 PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_vp9 PUBLIC libvpx absl::algorithm_container absl::algorithm_container absl::memory absl::strings absl::optional webrtc-yuv webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_transport_field_trial_based_config webrtc_api_video_video_frame webrtc_api_video_video_frame_i010 webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_media_codec webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_libvpx_interface webrtc_modules_video_coding_webrtc_vp9_helpers webrtc_modules_video_coding_svc_scalability_mode_util webrtc_modules_video_coding_svc_scalability_structures webrtc_modules_video_coding_svc_scalable_video_controller webrtc_modules_video_coding_svc_svc_rate_allocator webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_containers_flat_map webrtc_rtc_base_experiments_encoder_info_settings webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_rate_control_settings webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_field_trial )

# modules/video_coding:webrtc_vp9_helpers
add_library(webrtc_modules_video_coding_webrtc_vp9_helpers ${WEBRTC_ROOT}/modules/video_coding/codecs/vp9/svc_config.cc)
target_include_directories(webrtc_modules_video_coding_webrtc_vp9_helpers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_modules_video_coding_webrtc_vp9_helpers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_modules_video_coding_webrtc_vp9_helpers PRIVATE -fno-rtti )
target_link_libraries(webrtc_modules_video_coding_webrtc_vp9_helpers PUBLIC absl::algorithm_container webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_codec_constants webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_media_rtc_media_base webrtc_modules_video_coding_codec_globals_headers webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_svc_scalability_mode_util webrtc_modules_video_coding_svc_scalability_structures webrtc_modules_video_coding_svc_scalable_video_controller webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_experiments_stable_target_rate_experiment )

# net/dcsctp/common:internal_types
add_library(webrtc_net_dcsctp_common_internal_types INTERFACE)
target_link_libraries(webrtc_net_dcsctp_common_internal_types INTERFACE webrtc_net_dcsctp_public_types webrtc_rtc_base_strong_alias )
target_include_directories(webrtc_net_dcsctp_common_internal_types INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/common:math
add_library(webrtc_net_dcsctp_common_math INTERFACE)
target_include_directories(webrtc_net_dcsctp_common_math INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/common:sequence_numbers
add_library(webrtc_net_dcsctp_common_sequence_numbers INTERFACE)
target_link_libraries(webrtc_net_dcsctp_common_sequence_numbers INTERFACE webrtc_net_dcsctp_common_internal_types webrtc_rtc_base_rtc_numerics )
target_include_directories(webrtc_net_dcsctp_common_sequence_numbers INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/packet:bounded_io
add_library(webrtc_net_dcsctp_packet_bounded_io INTERFACE)
target_link_libraries(webrtc_net_dcsctp_packet_bounded_io INTERFACE webrtc_api_array_view webrtc_rtc_base_checks )
target_include_directories(webrtc_net_dcsctp_packet_bounded_io INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/packet:chunk
add_library(webrtc_net_dcsctp_packet_chunk ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/abort_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/cookie_ack_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/cookie_echo_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/data_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/error_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/forward_tsn_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/heartbeat_ack_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/heartbeat_request_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/idata_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/iforward_tsn_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/init_ack_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/init_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/reconfig_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/sack_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/shutdown_ack_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/shutdown_chunk.cc ${WEBRTC_ROOT}/net/dcsctp/packet/chunk/shutdown_complete_chunk.cc)
target_include_directories(webrtc_net_dcsctp_packet_chunk PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_packet_chunk PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_packet_chunk PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_packet_chunk PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_math webrtc_net_dcsctp_packet_bounded_io webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_packet_error_cause webrtc_net_dcsctp_packet_parameter webrtc_net_dcsctp_packet_tlv_trait webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/packet:chunk_validators
add_library(webrtc_net_dcsctp_packet_chunk_validators ${WEBRTC_ROOT}/net/dcsctp/packet/chunk_validators.cc)
target_include_directories(webrtc_net_dcsctp_packet_chunk_validators PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_packet_chunk_validators PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_packet_chunk_validators PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_packet_chunk_validators PUBLIC webrtc_net_dcsctp_packet_chunk webrtc_rtc_base_checks webrtc_rtc_base_logging )

# net/dcsctp/packet:crc32c
add_library(webrtc_net_dcsctp_packet_crc32c ${WEBRTC_ROOT}/net/dcsctp/packet/crc32c.cc)
target_include_directories(webrtc_net_dcsctp_packet_crc32c PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_packet_crc32c PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_packet_crc32c PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_packet_crc32c PUBLIC crc32c webrtc_api_array_view webrtc_rtc_base_checks )

# net/dcsctp/packet:data
add_library(webrtc_net_dcsctp_packet_data INTERFACE)
target_link_libraries(webrtc_net_dcsctp_packet_data INTERFACE webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_public_types webrtc_rtc_base_checks )
target_include_directories(webrtc_net_dcsctp_packet_data INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/packet:error_cause
add_library(webrtc_net_dcsctp_packet_error_cause ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/cookie_received_while_shutting_down_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/error_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/invalid_mandatory_parameter_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/invalid_stream_identifier_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/missing_mandatory_parameter_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/no_user_data_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/out_of_resource_error_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/protocol_violation_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/restart_of_an_association_with_new_address_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/stale_cookie_error_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/unrecognized_chunk_type_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/unrecognized_parameter_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/unresolvable_address_cause.cc ${WEBRTC_ROOT}/net/dcsctp/packet/error_cause/user_initiated_abort_cause.cc)
target_include_directories(webrtc_net_dcsctp_packet_error_cause PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_packet_error_cause PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_packet_error_cause PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_packet_error_cause PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_common_math webrtc_net_dcsctp_packet_bounded_io webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_packet_parameter webrtc_net_dcsctp_packet_tlv_trait webrtc_net_dcsctp_public_types webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/packet:parameter
add_library(webrtc_net_dcsctp_packet_parameter ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/add_incoming_streams_request_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/add_outgoing_streams_request_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/forward_tsn_supported_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/heartbeat_info_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/incoming_ssn_reset_request_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/outgoing_ssn_reset_request_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/reconfiguration_response_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/ssn_tsn_reset_request_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/state_cookie_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/supported_extensions_parameter.cc ${WEBRTC_ROOT}/net/dcsctp/packet/parameter/zero_checksum_acceptable_chunk_parameter.cc)
target_include_directories(webrtc_net_dcsctp_packet_parameter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_packet_parameter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_packet_parameter PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_packet_parameter PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_common_math webrtc_net_dcsctp_packet_bounded_io webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_packet_tlv_trait webrtc_net_dcsctp_public_types webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/packet:sctp_packet
add_library(webrtc_net_dcsctp_packet_sctp_packet ${WEBRTC_ROOT}/net/dcsctp/packet/sctp_packet.cc)
target_include_directories(webrtc_net_dcsctp_packet_sctp_packet PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_packet_sctp_packet PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_packet_sctp_packet PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_packet_sctp_packet PUBLIC absl::memory absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_common_math webrtc_net_dcsctp_packet_bounded_io webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_crc32c webrtc_net_dcsctp_public_types webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/packet:tlv_trait
add_library(webrtc_net_dcsctp_packet_tlv_trait ${WEBRTC_ROOT}/net/dcsctp/packet/tlv_trait.cc)
target_include_directories(webrtc_net_dcsctp_packet_tlv_trait PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_packet_tlv_trait PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_packet_tlv_trait PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_packet_tlv_trait PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_packet_bounded_io webrtc_rtc_base_checks webrtc_rtc_base_logging )

# net/dcsctp/public:factory
add_library(webrtc_net_dcsctp_public_factory ${WEBRTC_ROOT}/net/dcsctp/public/dcsctp_socket_factory.cc)
target_include_directories(webrtc_net_dcsctp_public_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_public_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_public_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_public_factory PUBLIC absl::strings webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_socket_dcsctp_socket )

# net/dcsctp/public:mocks
add_library(webrtc_net_dcsctp_public_mocks INTERFACE)
target_link_libraries(webrtc_net_dcsctp_public_mocks INTERFACE webrtc_net_dcsctp_public_factory webrtc_net_dcsctp_public_socket webrtc_test_test_support )
target_include_directories(webrtc_net_dcsctp_public_mocks INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/public:socket
add_library(webrtc_net_dcsctp_public_socket ${WEBRTC_ROOT}/net/dcsctp/public/dcsctp_handover_state.cc)
target_include_directories(webrtc_net_dcsctp_public_socket PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_public_socket PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_public_socket PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_public_socket PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_task_queue_task_queue webrtc_api_units_timestamp webrtc_net_dcsctp_public_types webrtc_rtc_base_checks webrtc_rtc_base_strong_alias )

# net/dcsctp/public:types
add_library(webrtc_net_dcsctp_public_types INTERFACE)
target_link_libraries(webrtc_net_dcsctp_public_types INTERFACE absl::optional webrtc_api_array_view webrtc_api_units_time_delta webrtc_rtc_base_strong_alias )
target_include_directories(webrtc_net_dcsctp_public_types INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/public:utils
add_library(webrtc_net_dcsctp_public_utils ${WEBRTC_ROOT}/net/dcsctp/public/text_pcap_packet_observer.cc)
target_include_directories(webrtc_net_dcsctp_public_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_public_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_public_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_public_utils PUBLIC absl::strings webrtc_api_array_view webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_socket_dcsctp_socket webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/rx:data_tracker
add_library(webrtc_net_dcsctp_rx_data_tracker ${WEBRTC_ROOT}/net/dcsctp/rx/data_tracker.cc)
target_include_directories(webrtc_net_dcsctp_rx_data_tracker PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_rx_data_tracker PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_rx_data_tracker PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_rx_data_tracker PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_timer_timer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/rx:interleaved_reassembly_streams
add_library(webrtc_net_dcsctp_rx_interleaved_reassembly_streams ${WEBRTC_ROOT}/net/dcsctp/rx/interleaved_reassembly_streams.cc)
target_include_directories(webrtc_net_dcsctp_rx_interleaved_reassembly_streams PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_rx_interleaved_reassembly_streams PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_rx_interleaved_reassembly_streams PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_rx_interleaved_reassembly_streams PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_types webrtc_net_dcsctp_rx_reassembly_streams webrtc_rtc_base_checks webrtc_rtc_base_logging )

# net/dcsctp/rx:reassembly_queue
add_library(webrtc_net_dcsctp_rx_reassembly_queue ${WEBRTC_ROOT}/net/dcsctp/rx/reassembly_queue.cc)
target_include_directories(webrtc_net_dcsctp_rx_reassembly_queue PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_rx_reassembly_queue PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_rx_reassembly_queue PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_rx_reassembly_queue PUBLIC absl::any_invocable absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_packet_parameter webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_rx_interleaved_reassembly_streams webrtc_net_dcsctp_rx_reassembly_streams webrtc_net_dcsctp_rx_traditional_reassembly_streams webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_containers_flat_set )

# net/dcsctp/rx:reassembly_streams
add_library(webrtc_net_dcsctp_rx_reassembly_streams INTERFACE)
target_link_libraries(webrtc_net_dcsctp_rx_reassembly_streams INTERFACE absl::strings webrtc_api_array_view webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types )
target_include_directories(webrtc_net_dcsctp_rx_reassembly_streams INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/rx:traditional_reassembly_streams
add_library(webrtc_net_dcsctp_rx_traditional_reassembly_streams ${WEBRTC_ROOT}/net/dcsctp/rx/traditional_reassembly_streams.cc)
target_include_directories(webrtc_net_dcsctp_rx_traditional_reassembly_streams PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_rx_traditional_reassembly_streams PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_rx_traditional_reassembly_streams PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_rx_traditional_reassembly_streams PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_types webrtc_net_dcsctp_rx_reassembly_streams webrtc_rtc_base_checks webrtc_rtc_base_logging )

# net/dcsctp/socket:context
add_library(webrtc_net_dcsctp_socket_context INTERFACE)
target_link_libraries(webrtc_net_dcsctp_socket_context INTERFACE absl::strings webrtc_api_units_time_delta webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_packet_sctp_packet webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types )
target_include_directories(webrtc_net_dcsctp_socket_context INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/socket:dcsctp_socket
add_library(webrtc_net_dcsctp_socket_dcsctp_socket ${WEBRTC_ROOT}/net/dcsctp/socket/callback_deferrer.cc ${WEBRTC_ROOT}/net/dcsctp/socket/dcsctp_socket.cc ${WEBRTC_ROOT}/net/dcsctp/socket/state_cookie.cc)
target_include_directories(webrtc_net_dcsctp_socket_dcsctp_socket PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_socket_dcsctp_socket PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_socket_dcsctp_socket PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_socket_dcsctp_socket PUBLIC absl::bind_front absl::memory absl::strings absl::optional absl::variant webrtc_api_array_view webrtc_api_make_ref_counted webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_packet_bounded_io webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_chunk_validators webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_packet_error_cause webrtc_net_dcsctp_packet_parameter webrtc_net_dcsctp_packet_sctp_packet webrtc_net_dcsctp_packet_tlv_trait webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_rx_data_tracker webrtc_net_dcsctp_rx_reassembly_queue webrtc_net_dcsctp_socket_context webrtc_net_dcsctp_socket_heartbeat_handler webrtc_net_dcsctp_socket_packet_sender webrtc_net_dcsctp_socket_stream_reset_handler webrtc_net_dcsctp_socket_transmission_control_block webrtc_net_dcsctp_timer_timer webrtc_net_dcsctp_tx_retransmission_error_counter webrtc_net_dcsctp_tx_retransmission_queue webrtc_net_dcsctp_tx_retransmission_timeout webrtc_net_dcsctp_tx_rr_send_queue webrtc_net_dcsctp_tx_send_queue webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/socket:heartbeat_handler
add_library(webrtc_net_dcsctp_socket_heartbeat_handler ${WEBRTC_ROOT}/net/dcsctp/socket/heartbeat_handler.cc)
target_include_directories(webrtc_net_dcsctp_socket_heartbeat_handler PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_socket_heartbeat_handler PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_socket_heartbeat_handler PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_socket_heartbeat_handler PUBLIC absl::bind_front absl::strings absl::optional webrtc_api_array_view webrtc_api_units_time_delta webrtc_net_dcsctp_packet_bounded_io webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_parameter webrtc_net_dcsctp_packet_sctp_packet webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_socket_context webrtc_net_dcsctp_timer_timer webrtc_rtc_base_checks webrtc_rtc_base_logging )

# net/dcsctp/socket:packet_sender
add_library(webrtc_net_dcsctp_socket_packet_sender ${WEBRTC_ROOT}/net/dcsctp/socket/packet_sender.cc)
target_include_directories(webrtc_net_dcsctp_socket_packet_sender PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_socket_packet_sender PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_socket_packet_sender PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_socket_packet_sender PUBLIC webrtc_net_dcsctp_packet_sctp_packet webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_timer_timer )

# net/dcsctp/socket:stream_reset_handler
add_library(webrtc_net_dcsctp_socket_stream_reset_handler ${WEBRTC_ROOT}/net/dcsctp/socket/stream_reset_handler.cc)
target_include_directories(webrtc_net_dcsctp_socket_stream_reset_handler PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_socket_stream_reset_handler PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_socket_stream_reset_handler PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_socket_stream_reset_handler PUBLIC absl::bind_front absl::strings absl::optional webrtc_api_array_view webrtc_api_units_time_delta webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_parameter webrtc_net_dcsctp_packet_sctp_packet webrtc_net_dcsctp_packet_tlv_trait webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_rx_data_tracker webrtc_net_dcsctp_rx_reassembly_queue webrtc_net_dcsctp_socket_context webrtc_net_dcsctp_timer_timer webrtc_net_dcsctp_tx_retransmission_queue webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_containers_flat_set )

# net/dcsctp/socket:transmission_control_block
add_library(webrtc_net_dcsctp_socket_transmission_control_block ${WEBRTC_ROOT}/net/dcsctp/socket/transmission_control_block.cc)
target_include_directories(webrtc_net_dcsctp_socket_transmission_control_block PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_socket_transmission_control_block PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_socket_transmission_control_block PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_socket_transmission_control_block PUBLIC absl::bind_front absl::strings absl::optional webrtc_api_array_view webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_sctp_packet webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_rx_data_tracker webrtc_net_dcsctp_rx_reassembly_queue webrtc_net_dcsctp_socket_context webrtc_net_dcsctp_socket_heartbeat_handler webrtc_net_dcsctp_socket_packet_sender webrtc_net_dcsctp_socket_stream_reset_handler webrtc_net_dcsctp_timer_timer webrtc_net_dcsctp_tx_retransmission_error_counter webrtc_net_dcsctp_tx_retransmission_queue webrtc_net_dcsctp_tx_retransmission_timeout webrtc_net_dcsctp_tx_send_queue webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/timer:task_queue_timeout
add_library(webrtc_net_dcsctp_timer_task_queue_timeout ${WEBRTC_ROOT}/net/dcsctp/timer/task_queue_timeout.cc)
target_include_directories(webrtc_net_dcsctp_timer_task_queue_timeout PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_timer_task_queue_timeout PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_timer_task_queue_timeout PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_timer_task_queue_timeout PUBLIC webrtc_api_array_view webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_rtc_base_checks webrtc_rtc_base_logging )

# net/dcsctp/timer
add_library(webrtc_net_dcsctp_timer_timer ${WEBRTC_ROOT}/net/dcsctp/timer/timer.cc)
target_include_directories(webrtc_net_dcsctp_timer_timer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_timer_timer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_timer_timer PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_timer_timer PUBLIC absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_rtc_base_checks webrtc_rtc_base_strong_alias webrtc_rtc_base_containers_flat_map webrtc_rtc_base_containers_flat_set )

# net/dcsctp/tx:outstanding_data
add_library(webrtc_net_dcsctp_tx_outstanding_data ${WEBRTC_ROOT}/net/dcsctp/tx/outstanding_data.cc)
target_include_directories(webrtc_net_dcsctp_tx_outstanding_data PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_tx_outstanding_data PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_tx_outstanding_data PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_tx_outstanding_data PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_common_math webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_timer_timer webrtc_net_dcsctp_tx_retransmission_timeout webrtc_net_dcsctp_tx_send_queue webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_containers_flat_set )

# net/dcsctp/tx:retransmission_error_counter
add_library(webrtc_net_dcsctp_tx_retransmission_error_counter ${WEBRTC_ROOT}/net/dcsctp/tx/retransmission_error_counter.cc)
target_include_directories(webrtc_net_dcsctp_tx_retransmission_error_counter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_tx_retransmission_error_counter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_tx_retransmission_error_counter PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_tx_retransmission_error_counter PUBLIC absl::strings webrtc_net_dcsctp_public_types webrtc_rtc_base_checks webrtc_rtc_base_logging )

# net/dcsctp/tx:retransmission_queue
add_library(webrtc_net_dcsctp_tx_retransmission_queue ${WEBRTC_ROOT}/net/dcsctp/tx/retransmission_queue.cc)
target_include_directories(webrtc_net_dcsctp_tx_retransmission_queue PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_tx_retransmission_queue PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_tx_retransmission_queue PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_tx_retransmission_queue PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_math webrtc_net_dcsctp_common_sequence_numbers webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_timer_timer webrtc_net_dcsctp_tx_outstanding_data webrtc_net_dcsctp_tx_retransmission_timeout webrtc_net_dcsctp_tx_send_queue webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# net/dcsctp/tx:retransmission_timeout
add_library(webrtc_net_dcsctp_tx_retransmission_timeout ${WEBRTC_ROOT}/net/dcsctp/tx/retransmission_timeout.cc)
target_include_directories(webrtc_net_dcsctp_tx_retransmission_timeout PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_tx_retransmission_timeout PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_tx_retransmission_timeout PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_tx_retransmission_timeout PUBLIC webrtc_api_units_time_delta webrtc_net_dcsctp_public_types webrtc_rtc_base_checks )

# net/dcsctp/tx:rr_send_queue
add_library(webrtc_net_dcsctp_tx_rr_send_queue ${WEBRTC_ROOT}/net/dcsctp/tx/rr_send_queue.cc)
target_include_directories(webrtc_net_dcsctp_tx_rr_send_queue PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_tx_rr_send_queue PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_tx_rr_send_queue PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_tx_rr_send_queue PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_tx_send_queue webrtc_net_dcsctp_tx_stream_scheduler webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_containers_flat_map )

# net/dcsctp/tx:send_queue
add_library(webrtc_net_dcsctp_tx_send_queue INTERFACE)
target_link_libraries(webrtc_net_dcsctp_tx_send_queue INTERFACE absl::optional webrtc_api_array_view webrtc_api_units_timestamp webrtc_net_dcsctp_common_internal_types webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types )
target_include_directories(webrtc_net_dcsctp_tx_send_queue INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# net/dcsctp/tx:stream_scheduler
add_library(webrtc_net_dcsctp_tx_stream_scheduler ${WEBRTC_ROOT}/net/dcsctp/tx/stream_scheduler.cc)
target_include_directories(webrtc_net_dcsctp_tx_stream_scheduler PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_net_dcsctp_tx_stream_scheduler PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_net_dcsctp_tx_stream_scheduler PRIVATE -fno-rtti )
target_link_libraries(webrtc_net_dcsctp_tx_stream_scheduler PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_net_dcsctp_packet_chunk webrtc_net_dcsctp_packet_data webrtc_net_dcsctp_packet_sctp_packet webrtc_net_dcsctp_public_socket webrtc_net_dcsctp_public_types webrtc_net_dcsctp_tx_send_queue webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_strong_alias webrtc_rtc_base_containers_flat_set )

# p2p:fake_ice_transport
add_library(webrtc_p2p_fake_ice_transport INTERFACE)
target_link_libraries(webrtc_p2p_fake_ice_transport INTERFACE absl::algorithm_container absl::strings absl::optional webrtc_api_dtmf_sender_interface webrtc_api_ice_transport_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_p2p_rtc_p2p webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_task_queue_for_test )
target_include_directories(webrtc_p2p_fake_ice_transport INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# p2p:fake_port_allocator
add_library(webrtc_p2p_fake_port_allocator INTERFACE)
target_link_libraries(webrtc_p2p_fake_port_allocator INTERFACE absl::strings  webrtc_p2p_rtc_p2p webrtc_rtc_base_net_helpers webrtc_rtc_base_task_queue_for_test webrtc_rtc_base_threading webrtc_rtc_base_memory_always_valid_pointer )
target_include_directories(webrtc_p2p_fake_port_allocator INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# p2p:p2p_server_utils
add_library(webrtc_p2p_p2p_server_utils ${WEBRTC_ROOT}/p2p/base/stun_server.cc ${WEBRTC_ROOT}/p2p/base/turn_server.cc)
target_include_directories(webrtc_p2p_p2p_server_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_p2p_p2p_server_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_p2p_p2p_server_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_p2p_p2p_server_utils PUBLIC absl::algorithm_container absl::memory absl::strings webrtc_api_array_view webrtc_api_packet_socket_factory webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_stun_types webrtc_api_units_time_delta webrtc_p2p_rtc_p2p webrtc_rtc_base_async_packet_socket webrtc_rtc_base_async_udp_socket webrtc_rtc_base_byte_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_socket_adapters webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_network_received_packet webrtc_rtc_base_third_party_sigslot_sigslot )

# p2p:p2p_test_utils
add_library(webrtc_p2p_p2p_test_utils ${WEBRTC_ROOT}/p2p/base/test_stun_server.cc)
target_include_directories(webrtc_p2p_p2p_test_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_p2p_p2p_test_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_p2p_p2p_test_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_p2p_p2p_test_utils PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_mock_async_dns_resolver webrtc_api_packet_socket_factory webrtc_api_rtp_sender_interface webrtc_api_sequence_checker webrtc_api_turn_customizer webrtc_api_crypto_options webrtc_api_transport_stun_types webrtc_p2p_fake_ice_transport webrtc_p2p_fake_port_allocator webrtc_p2p_p2p_server_utils webrtc_p2p_rtc_p2p webrtc_rtc_base_async_udp_socket webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_gunit_helpers webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_socket webrtc_rtc_base_socket_address webrtc_rtc_base_socket_server webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_third_party_sigslot_sigslot webrtc_test_test_support )

# p2p:rtc_p2p
add_library(webrtc_p2p_rtc_p2p ${WEBRTC_ROOT}/p2p/base/async_stun_tcp_socket.cc ${WEBRTC_ROOT}/p2p/base/basic_async_resolver_factory.cc ${WEBRTC_ROOT}/p2p/base/basic_ice_controller.cc ${WEBRTC_ROOT}/p2p/base/basic_packet_socket_factory.cc ${WEBRTC_ROOT}/p2p/base/connection.cc ${WEBRTC_ROOT}/p2p/base/connection_info.cc ${WEBRTC_ROOT}/p2p/base/default_ice_transport_factory.cc ${WEBRTC_ROOT}/p2p/base/dtls_transport.cc ${WEBRTC_ROOT}/p2p/base/dtls_transport_internal.cc ${WEBRTC_ROOT}/p2p/base/ice_controller_interface.cc ${WEBRTC_ROOT}/p2p/base/ice_credentials_iterator.cc ${WEBRTC_ROOT}/p2p/base/ice_switch_reason.cc ${WEBRTC_ROOT}/p2p/base/ice_transport_internal.cc ${WEBRTC_ROOT}/p2p/base/p2p_constants.cc ${WEBRTC_ROOT}/p2p/base/p2p_transport_channel.cc ${WEBRTC_ROOT}/p2p/base/packet_transport_internal.cc ${WEBRTC_ROOT}/p2p/base/port.cc ${WEBRTC_ROOT}/p2p/base/port_allocator.cc ${WEBRTC_ROOT}/p2p/base/port_interface.cc ${WEBRTC_ROOT}/p2p/base/pseudo_tcp.cc ${WEBRTC_ROOT}/p2p/base/regathering_controller.cc ${WEBRTC_ROOT}/p2p/base/stun_dictionary.cc ${WEBRTC_ROOT}/p2p/base/stun_port.cc ${WEBRTC_ROOT}/p2p/base/stun_request.cc ${WEBRTC_ROOT}/p2p/base/tcp_port.cc ${WEBRTC_ROOT}/p2p/base/transport_description.cc ${WEBRTC_ROOT}/p2p/base/transport_description_factory.cc ${WEBRTC_ROOT}/p2p/base/turn_port.cc ${WEBRTC_ROOT}/p2p/base/wrapping_active_ice_controller.cc ${WEBRTC_ROOT}/p2p/client/basic_port_allocator.cc ${WEBRTC_ROOT}/p2p/client/turn_port_factory.cc)
target_include_directories(webrtc_p2p_rtc_p2p PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_p2p_rtc_p2p PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_p2p_rtc_p2p PRIVATE -fno-rtti )
target_link_libraries(webrtc_p2p_rtc_p2p PUBLIC absl::algorithm_container absl::core_headers absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_async_dns_resolver webrtc_api_candidate webrtc_api_dtls_transport_interface webrtc_api_field_trials_view webrtc_api_ice_transport_interface webrtc_api_make_ref_counted webrtc_api_packet_socket_factory webrtc_api_rtc_error webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_turn_customizer webrtc_api_crypto_options webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_enums webrtc_api_transport_field_trial_based_config webrtc_api_transport_stun_types webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_logging_ice_log webrtc_rtc_base_async_dns_resolver webrtc_rtc_base_async_packet_socket webrtc_rtc_base_async_tcp_socket webrtc_rtc_base_async_udp_socket webrtc_rtc_base_buffer webrtc_rtc_base_buffer_queue webrtc_rtc_base_byte_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_callback_list webrtc_rtc_base_checks webrtc_rtc_base_crc32 webrtc_rtc_base_dscp webrtc_rtc_base_event_tracer webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mdns_responder_interface webrtc_rtc_base_net_helper webrtc_rtc_base_net_helpers webrtc_rtc_base_network webrtc_rtc_base_network_constants webrtc_rtc_base_network_route webrtc_rtc_base_proxy_info webrtc_rtc_base_rate_tracker webrtc_rtc_base_refcount webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_minmax webrtc_rtc_base_socket webrtc_rtc_base_socket_adapters webrtc_rtc_base_socket_address webrtc_rtc_base_socket_factory webrtc_rtc_base_socket_server webrtc_rtc_base_ssl webrtc_rtc_base_stream webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_weak_ptr webrtc_rtc_base_containers_flat_map webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_memory_always_valid_pointer webrtc_rtc_base_network_received_packet webrtc_rtc_base_network_sent_packet webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export webrtc_rtc_base_third_party_base64_base64 webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_metrics )

# pc:audio_rtp_receiver
add_library(webrtc_pc_audio_rtp_receiver ${WEBRTC_ROOT}/pc/audio_rtp_receiver.cc)
target_include_directories(webrtc_pc_audio_rtp_receiver PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_audio_rtp_receiver PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_audio_rtp_receiver PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_audio_rtp_receiver PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_frame_transformer_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_crypto_frame_decryptor_interface webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_rtp_rtp_source webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_audio_track webrtc_pc_jitter_buffer_delay webrtc_pc_media_stream webrtc_pc_media_stream_track_proxy webrtc_pc_remote_audio_source webrtc_pc_rtp_receiver webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_threading webrtc_rtc_base_system_no_unique_address )

# pc:audio_track
add_library(webrtc_pc_audio_track ${WEBRTC_ROOT}/pc/audio_track.cc)
target_include_directories(webrtc_pc_audio_track PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_audio_track PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_audio_track PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_audio_track PUBLIC webrtc_api_media_stream_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_rtc_base_checks webrtc_rtc_base_system_no_unique_address )

# pc:channel
add_library(webrtc_pc_channel ${WEBRTC_ROOT}/pc/channel.cc)
target_include_directories(webrtc_pc_channel PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_channel PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_channel PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_channel PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_crypto_options webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_timestamp webrtc_call_rtp_interfaces webrtc_call_rtp_receiver webrtc_media_codec webrtc_media_media_channel webrtc_media_media_channel_impl webrtc_media_rid_description webrtc_media_rtc_media_base webrtc_media_rtp_utils webrtc_media_stream_params webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_rtc_p2p webrtc_pc_channel_interface webrtc_pc_rtp_media_utils webrtc_pc_rtp_transport_internal webrtc_pc_session_description webrtc_rtc_base_async_packet_socket webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_route webrtc_rtc_base_socket webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_unique_id_generator webrtc_rtc_base_containers_flat_set webrtc_rtc_base_network_sent_packet webrtc_rtc_base_third_party_sigslot_sigslot )

# pc:channel_interface
add_library(webrtc_pc_channel_interface INTERFACE)
target_link_libraries(webrtc_pc_channel_interface INTERFACE absl::strings webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_rtp_transport_internal )
target_include_directories(webrtc_pc_channel_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:connection_context
add_library(webrtc_pc_connection_context ${WEBRTC_ROOT}/pc/connection_context.cc)
target_include_directories(webrtc_pc_connection_context PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_connection_context PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_connection_context PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_connection_context PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_refcountedbase webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_environment_environment webrtc_api_neteq_neteq_api webrtc_api_transport_sctp_transport_factory_interface webrtc_media_rtc_data_sctp_transport_factory webrtc_media_rtc_media_base webrtc_p2p_rtc_p2p webrtc_pc_media_factory webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_network webrtc_rtc_base_rtc_certificate_generator webrtc_rtc_base_socket_factory webrtc_rtc_base_socket_server webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_memory_always_valid_pointer )

# pc:data_channel_controller
add_library(webrtc_pc_data_channel_controller ${WEBRTC_ROOT}/pc/data_channel_controller.cc)
target_include_directories(webrtc_pc_data_channel_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_data_channel_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_data_channel_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_data_channel_controller PUBLIC absl::algorithm_container absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_datagram_transport_interface webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_data_channel_utils webrtc_pc_peer_connection_internal webrtc_pc_sctp_data_channel webrtc_pc_sctp_utils webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_weak_ptr )

# pc:data_channel_controller_unittest
add_library(webrtc_pc_data_channel_controller_unittest ${WEBRTC_ROOT}/pc/data_channel_controller_unittest.cc)
target_include_directories(webrtc_pc_data_channel_controller_unittest PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_data_channel_controller_unittest PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_pc_data_channel_controller_unittest PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_data_channel_controller_unittest PUBLIC webrtc_pc_data_channel_controller webrtc_pc_pc_test_utils webrtc_pc_peer_connection_internal webrtc_pc_sctp_data_channel webrtc_rtc_base_null_socket_server webrtc_test_run_loop webrtc_test_test_support )

# pc:data_channel_utils
add_library(webrtc_pc_data_channel_utils ${WEBRTC_ROOT}/pc/data_channel_utils.cc)
target_include_directories(webrtc_pc_data_channel_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_data_channel_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_data_channel_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_data_channel_utils PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_media_rtc_media_base webrtc_rtc_base_checks )

# pc:dtls_srtp_transport
add_library(webrtc_pc_dtls_srtp_transport ${WEBRTC_ROOT}/pc/dtls_srtp_transport.cc)
target_include_directories(webrtc_pc_dtls_srtp_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_dtls_srtp_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_dtls_srtp_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_dtls_srtp_transport PUBLIC absl::optional webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_p2p_rtc_p2p webrtc_pc_srtp_transport webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_ssl )

# pc:dtls_transport
add_library(webrtc_pc_dtls_transport ${WEBRTC_ROOT}/pc/dtls_transport.cc)
target_include_directories(webrtc_pc_dtls_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_dtls_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_dtls_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_dtls_transport PUBLIC absl::optional webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_ice_transport_interface webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_p2p_rtc_p2p webrtc_pc_ice_transport webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_synchronization_mutex )

# pc:dtmf_sender
add_library(webrtc_pc_dtmf_sender ${WEBRTC_ROOT}/pc/dtmf_sender.cc)
target_include_directories(webrtc_pc_dtmf_sender PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_dtmf_sender PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_dtmf_sender PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_dtmf_sender PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_pc_proxy webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_refcount webrtc_rtc_base_third_party_sigslot_sigslot )

# pc:enable_fake_media
add_library(webrtc_pc_enable_fake_media ${WEBRTC_ROOT}/pc/test/enable_fake_media.cc)
target_include_directories(webrtc_pc_enable_fake_media PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_enable_fake_media PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_enable_fake_media PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_enable_fake_media PUBLIC absl::nullability webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_environment_environment webrtc_call_call_interfaces webrtc_media_rtc_media_tests_utils webrtc_pc_media_factory webrtc_rtc_base_checks )

# pc:external_hmac
add_library(webrtc_pc_external_hmac ${WEBRTC_ROOT}/pc/external_hmac.cc)
target_include_directories(webrtc_pc_external_hmac PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_external_hmac PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_external_hmac PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_external_hmac PUBLIC libsrtp webrtc_rtc_base_logging webrtc_rtc_base_zero_memory )

# pc:ice_server_parsing
add_library(webrtc_pc_ice_server_parsing ${WEBRTC_ROOT}/pc/ice_server_parsing.cc)
target_include_directories(webrtc_pc_ice_server_parsing PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_ice_server_parsing PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_ice_server_parsing PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_ice_server_parsing PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_p2p_rtc_p2p webrtc_rtc_base_checks webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_socket_address webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# pc:ice_transport
add_library(webrtc_pc_ice_transport ${WEBRTC_ROOT}/pc/ice_transport.cc)
target_include_directories(webrtc_pc_ice_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_ice_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_ice_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_ice_transport PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_ice_transport_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_sequence_checker webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_threading )

# pc:integration_test_helpers
add_library(webrtc_pc_integration_test_helpers ${WEBRTC_ROOT}/pc/test/integration_test_helpers.cc)
target_include_directories(webrtc_pc_integration_test_helpers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_integration_test_helpers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_pc_integration_test_helpers PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_integration_test_helpers PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_options_api webrtc_api_candidate webrtc_api_create_peerconnection_factory webrtc_api_dtmf_sender_interface webrtc_api_enable_media_with_defaults webrtc_api_fake_frame_decryptor webrtc_api_fake_frame_encryptor webrtc_api_field_trials_view webrtc_api_function_view webrtc_api_ice_transport_interface webrtc_api_libjingle_logging_api webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_mock_async_dns_resolver webrtc_api_mock_rtp webrtc_api_packet_socket_factory webrtc_api_rtc_error webrtc_api_rtc_stats_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_audio_audio_mixer_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_rtc_event_log_rtc_event_log webrtc_api_rtc_event_log_rtc_event_log_factory webrtc_api_task_queue_task_queue webrtc_api_task_queue_default_task_queue_factory webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_field_trial_based_config webrtc_api_transport_rtp_rtp_source webrtc_api_units_time_delta webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_call_call_interfaces webrtc_call_adaptation_resource_adaptation_test_utilities webrtc_logging_fake_rtc_event_log webrtc_media_rtc_media_base webrtc_media_rtc_media_config webrtc_media_rtc_media_tests_utils webrtc_media_stream_params webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_audio_processing_audioproc_test_utils webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_fake_ice_transport webrtc_p2p_fake_port_allocator webrtc_p2p_p2p_server_utils webrtc_p2p_p2p_test_utils webrtc_p2p_rtc_p2p webrtc_pc_audio_rtp_receiver webrtc_pc_audio_track webrtc_pc_dtmf_sender webrtc_pc_jitter_buffer_delay webrtc_pc_local_audio_source webrtc_pc_media_session webrtc_pc_media_stream webrtc_pc_pc_test_utils webrtc_pc_peer_connection webrtc_pc_peer_connection_factory webrtc_pc_peer_connection_proxy webrtc_pc_peerconnection webrtc_pc_remote_audio_source webrtc_pc_rtp_media_utils webrtc_pc_rtp_parameters_conversion webrtc_pc_rtp_receiver webrtc_pc_rtp_sender webrtc_pc_rtp_transceiver webrtc_pc_session_description webrtc_pc_usage_pattern webrtc_pc_video_rtp_receiver webrtc_pc_video_rtp_track_source webrtc_pc_video_track webrtc_pc_video_track_source webrtc_rtc_base_checks webrtc_rtc_base_gunit_helpers webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mdns_responder_interface webrtc_rtc_base_null_socket_server webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_rtc_certificate_generator webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_json webrtc_rtc_base_safe_conversions webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_task_queue_for_test webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_task_utils_repeating_task webrtc_rtc_base_third_party_base64_base64 webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_metrics webrtc_test_explicit_key_value_config webrtc_test_fileutils webrtc_test_rtp_test_utils webrtc_test_scoped_key_value_config webrtc_test_test_support webrtc_test_pc_sctp_fake_sctp_transport webrtc_test_time_controller_time_controller )

# pc:jitter_buffer_delay
add_library(webrtc_pc_jitter_buffer_delay ${WEBRTC_ROOT}/pc/jitter_buffer_delay.cc)
target_include_directories(webrtc_pc_jitter_buffer_delay PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_jitter_buffer_delay PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_jitter_buffer_delay PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_jitter_buffer_delay PUBLIC absl::optional webrtc_api_sequence_checker webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_safe_conversions webrtc_rtc_base_safe_minmax webrtc_rtc_base_system_no_unique_address )

# pc:jsep_ice_candidate
add_library(webrtc_pc_jsep_ice_candidate INTERFACE)
target_include_directories(webrtc_pc_jsep_ice_candidate INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:jsep_session_description
add_library(webrtc_pc_jsep_session_description INTERFACE)
target_include_directories(webrtc_pc_jsep_session_description INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:jsep_transport
add_library(webrtc_pc_jsep_transport ${WEBRTC_ROOT}/pc/jsep_transport.cc)
target_include_directories(webrtc_pc_jsep_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_jsep_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_jsep_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_jsep_transport PUBLIC absl::optional webrtc_api_array_view webrtc_api_candidate webrtc_api_dtmf_sender_interface webrtc_api_ice_transport_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_datagram_transport_interface webrtc_media_rtc_data_sctp_transport_internal webrtc_p2p_rtc_p2p webrtc_pc_dtls_srtp_transport webrtc_pc_dtls_transport webrtc_pc_rtcp_mux_filter webrtc_pc_rtp_transport webrtc_pc_rtp_transport_internal webrtc_pc_sctp_transport webrtc_pc_session_description webrtc_pc_srtp_filter webrtc_pc_srtp_transport webrtc_pc_transport_stats webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_threading )

# pc:jsep_transport_collection
add_library(webrtc_pc_jsep_transport_collection ${WEBRTC_ROOT}/pc/jsep_transport_collection.cc)
target_include_directories(webrtc_pc_jsep_transport_collection PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_jsep_transport_collection PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_jsep_transport_collection PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_jsep_transport_collection PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_sequence_checker webrtc_p2p_rtc_p2p webrtc_pc_jsep_transport webrtc_pc_session_description webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_system_no_unique_address )

# pc:jsep_transport_controller
add_library(webrtc_pc_jsep_transport_controller ${WEBRTC_ROOT}/pc/jsep_transport_controller.cc)
target_include_directories(webrtc_pc_jsep_transport_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_jsep_transport_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_jsep_transport_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_jsep_transport_controller PUBLIC absl::algorithm_container absl::any_invocable absl::optional webrtc_api_async_dns_resolver webrtc_api_candidate webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_ice_transport_factory webrtc_api_ice_transport_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_crypto_options webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_datagram_transport_interface webrtc_api_transport_enums webrtc_api_transport_sctp_transport_factory_interface webrtc_media_rtc_data_sctp_transport_internal webrtc_p2p_rtc_p2p webrtc_pc_channel webrtc_pc_dtls_srtp_transport webrtc_pc_dtls_transport webrtc_pc_jsep_transport webrtc_pc_jsep_transport_collection webrtc_pc_rtp_transport webrtc_pc_rtp_transport_internal webrtc_pc_sctp_transport webrtc_pc_session_description webrtc_pc_srtp_transport webrtc_pc_transport_stats webrtc_rtc_base_callback_list webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_third_party_sigslot_sigslot )

# pc:legacy_stats_collector
add_library(webrtc_pc_legacy_stats_collector ${WEBRTC_ROOT}/pc/legacy_stats_collector.cc)
target_include_directories(webrtc_pc_legacy_stats_collector PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_legacy_stats_collector PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_legacy_stats_collector PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_legacy_stats_collector PUBLIC absl::strings absl::optional webrtc_api_candidate webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_audio_codecs_audio_codecs_api webrtc_api_video_video_rtp_headers webrtc_call_call_interfaces webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_modules_audio_processing_audio_processing_statistics webrtc_p2p_rtc_p2p webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_data_channel_utils webrtc_pc_legacy_stats_collector_interface webrtc_pc_peer_connection_internal webrtc_pc_rtp_receiver webrtc_pc_rtp_receiver_proxy webrtc_pc_rtp_sender_proxy webrtc_pc_rtp_transceiver webrtc_pc_transport_stats webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_constants webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils )

# pc:legacy_stats_collector_interface
add_library(webrtc_pc_legacy_stats_collector_interface INTERFACE)
target_link_libraries(webrtc_pc_legacy_stats_collector_interface INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtp_sender_interface )
target_include_directories(webrtc_pc_legacy_stats_collector_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:libjingle_peerconnection
add_library(webrtc_pc_libjingle_peerconnection INTERFACE)
target_link_libraries(webrtc_pc_libjingle_peerconnection INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_pc_peerconnection )
target_include_directories(webrtc_pc_libjingle_peerconnection INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:local_audio_source
add_library(webrtc_pc_local_audio_source ${WEBRTC_ROOT}/pc/local_audio_source.cc)
target_include_directories(webrtc_pc_local_audio_source PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_local_audio_source PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_local_audio_source PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_local_audio_source PUBLIC webrtc_api_audio_options_api webrtc_api_media_stream_interface webrtc_api_scoped_refptr )

# pc:media_factory
add_library(webrtc_pc_media_factory INTERFACE)
target_link_libraries(webrtc_pc_media_factory INTERFACE webrtc_api_environment_environment webrtc_call_call_interfaces webrtc_media_rtc_media_base )
target_include_directories(webrtc_pc_media_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:media_protocol_names
add_library(webrtc_pc_media_protocol_names ${WEBRTC_ROOT}/pc/media_protocol_names.cc)
target_include_directories(webrtc_pc_media_protocol_names PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_media_protocol_names PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_media_protocol_names PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_media_protocol_names PUBLIC absl::strings )

# pc:media_session
add_library(webrtc_pc_media_session ${WEBRTC_ROOT}/pc/media_session.cc)
target_include_directories(webrtc_pc_media_session PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_media_session PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_media_session PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_media_session PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_crypto_options webrtc_media_codec webrtc_media_media_constants webrtc_media_rid_description webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_media_rtc_sdp_video_format_utils webrtc_media_stream_params webrtc_p2p_rtc_p2p webrtc_pc_jsep_transport webrtc_pc_media_protocol_names webrtc_pc_rtp_media_utils webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_pc_used_ids webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_unique_id_generator webrtc_rtc_base_memory_always_valid_pointer webrtc_rtc_base_third_party_base64_base64 )

# pc:media_stream
add_library(webrtc_pc_media_stream ${WEBRTC_ROOT}/pc/media_stream.cc)
target_include_directories(webrtc_pc_media_stream PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_media_stream PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_media_stream PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_media_stream PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_rtc_base_checks )

# pc:media_stream_observer
add_library(webrtc_pc_media_stream_observer ${WEBRTC_ROOT}/pc/media_stream_observer.cc)
target_include_directories(webrtc_pc_media_stream_observer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_media_stream_observer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_media_stream_observer PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_media_stream_observer PUBLIC absl::algorithm_container webrtc_api_media_stream_interface webrtc_api_scoped_refptr )

# pc:media_stream_proxy
add_library(webrtc_pc_media_stream_proxy INTERFACE)
target_link_libraries(webrtc_pc_media_stream_proxy INTERFACE webrtc_api_media_stream_interface webrtc_pc_proxy )
target_include_directories(webrtc_pc_media_stream_proxy INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:media_stream_track_proxy
add_library(webrtc_pc_media_stream_track_proxy INTERFACE)
target_link_libraries(webrtc_pc_media_stream_track_proxy INTERFACE webrtc_api_media_stream_interface webrtc_pc_proxy )
target_include_directories(webrtc_pc_media_stream_track_proxy INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:pc_test_utils
add_library(webrtc_pc_pc_test_utils ${WEBRTC_ROOT}/pc/test/fake_audio_capture_module.cc ${WEBRTC_ROOT}/pc/test/peer_connection_test_wrapper.cc ${WEBRTC_ROOT}/pc/test/simulcast_layer_util.cc)
target_include_directories(webrtc_pc_pc_test_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_pc_test_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_pc_pc_test_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_pc_test_utils PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_audio_options_api webrtc_api_call_api webrtc_api_create_frame_generator webrtc_api_create_peerconnection_factory webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtc_stats_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_audio_audio_mixer_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_environment_environment_factory webrtc_api_task_queue_task_queue webrtc_api_task_queue_default_task_queue_factory webrtc_api_units_time_delta webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_resolution webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_api_video_codecs_video_decoder_factory_template webrtc_api_video_codecs_video_decoder_factory_template_dav1d_adapter webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp8_adapter webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp9_adapter webrtc_api_video_codecs_video_decoder_factory_template_open_h264_adapter webrtc_api_video_codecs_video_encoder_factory_template webrtc_api_video_codecs_video_encoder_factory_template_libaom_av1_adapter webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp8_adapter webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp9_adapter webrtc_api_video_codecs_video_encoder_factory_template_open_h264_adapter webrtc_call_call_interfaces webrtc_media_media_channel webrtc_media_media_channel_impl webrtc_media_rtc_media webrtc_media_rtc_media_base webrtc_media_rtc_media_tests_utils webrtc_media_rtc_simulcast_encoder_adapter webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_api webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_fake_port_allocator webrtc_p2p_p2p_test_utils webrtc_p2p_rtc_p2p webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_enable_fake_media webrtc_pc_jitter_buffer_delay webrtc_pc_libjingle_peerconnection webrtc_pc_peer_connection_internal webrtc_pc_peerconnection webrtc_pc_rtp_receiver webrtc_pc_rtp_sender webrtc_pc_sctp_data_channel webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_pc_stream_collection webrtc_pc_video_track_source webrtc_rtc_base_checks webrtc_rtc_base_gunit_helpers webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_certificate_generator webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_task_queue_for_test webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_weak_ptr webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_task_utils_repeating_task webrtc_rtc_base_third_party_sigslot_sigslot webrtc_test_frame_generator_capturer webrtc_test_scoped_key_value_config webrtc_test_test_support )

# pc:peer_connection
add_library(webrtc_pc_peer_connection ${WEBRTC_ROOT}/pc/peer_connection.cc)
target_include_directories(webrtc_pc_peer_connection PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_peer_connection PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_peer_connection PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_peer_connection PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_async_dns_resolver webrtc_api_candidate webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_ice_transport_interface webrtc_api_libjingle_logging_api webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtc_stats_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_turn_customizer webrtc_api_adaptation_resource_adaptation_api webrtc_api_crypto_options webrtc_api_environment_environment webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_bitrate_settings webrtc_api_transport_datagram_transport_interface webrtc_api_transport_enums webrtc_api_video_video_codec_constants webrtc_call_call_interfaces webrtc_media_media_channel webrtc_media_rid_description webrtc_media_rtc_media_base webrtc_media_rtc_media_config webrtc_media_stream_params webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_rtc_p2p webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_connection_context webrtc_pc_data_channel_controller webrtc_pc_data_channel_utils webrtc_pc_dtls_transport webrtc_pc_ice_server_parsing webrtc_pc_jsep_transport_controller webrtc_pc_legacy_stats_collector webrtc_pc_peer_connection_internal webrtc_pc_peer_connection_message_handler webrtc_pc_rtc_stats_collector webrtc_pc_rtp_receiver webrtc_pc_rtp_receiver_proxy webrtc_pc_rtp_sender webrtc_pc_rtp_sender_proxy webrtc_pc_rtp_transceiver webrtc_pc_rtp_transmission_manager webrtc_pc_rtp_transport_internal webrtc_pc_sctp_data_channel webrtc_pc_sctp_transport webrtc_pc_sdp_offer_answer webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_pc_transceiver_list webrtc_pc_transport_stats webrtc_pc_usage_pattern webrtc_pc_webrtc_session_description_factory webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_net_helper webrtc_rtc_base_network webrtc_rtc_base_network_constants webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_unique_id_generator webrtc_rtc_base_weak_ptr webrtc_system_wrappers_metrics )

# pc:peer_connection_factory
add_library(webrtc_pc_peer_connection_factory ${WEBRTC_ROOT}/pc/peer_connection_factory.cc)
target_include_directories(webrtc_pc_peer_connection_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_peer_connection_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_peer_connection_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_peer_connection_factory PUBLIC absl::strings webrtc_api_audio_options_api webrtc_api_dtmf_sender_interface webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_ice_transport_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_network_state_predictor_api webrtc_api_packet_socket_factory webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_environment_environment webrtc_api_environment_environment_factory webrtc_api_metronome_metronome webrtc_api_neteq_neteq_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_transport_bitrate_settings webrtc_api_transport_network_control webrtc_api_transport_sctp_transport_factory_interface webrtc_api_units_data_rate webrtc_call_call_interfaces webrtc_call_rtp_interfaces webrtc_call_rtp_sender webrtc_media_rtc_media_base webrtc_p2p_rtc_p2p webrtc_pc_audio_track webrtc_pc_connection_context webrtc_pc_local_audio_source webrtc_pc_media_factory webrtc_pc_media_stream webrtc_pc_media_stream_proxy webrtc_pc_media_stream_track_proxy webrtc_pc_peer_connection webrtc_pc_peer_connection_factory_proxy webrtc_pc_peer_connection_proxy webrtc_pc_rtp_parameters_conversion webrtc_pc_session_description webrtc_pc_video_track webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_certificate_generator webrtc_rtc_base_safe_conversions webrtc_rtc_base_threading webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_system_file_wrapper )

# pc:peer_connection_factory_proxy
add_library(webrtc_pc_peer_connection_factory_proxy INTERFACE)
target_link_libraries(webrtc_pc_peer_connection_factory_proxy INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_pc_proxy )
target_include_directories(webrtc_pc_peer_connection_factory_proxy INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:peer_connection_internal
add_library(webrtc_pc_peer_connection_internal INTERFACE)
target_link_libraries(webrtc_pc_peer_connection_internal INTERFACE absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_call_call_interfaces webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl webrtc_pc_jsep_transport_controller webrtc_pc_peer_connection_message_handler webrtc_pc_rtp_transceiver webrtc_pc_rtp_transmission_manager webrtc_pc_sctp_data_channel )
target_include_directories(webrtc_pc_peer_connection_internal INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:peer_connection_message_handler
add_library(webrtc_pc_peer_connection_message_handler ${WEBRTC_ROOT}/pc/peer_connection_message_handler.cc)
target_include_directories(webrtc_pc_peer_connection_message_handler PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_peer_connection_message_handler PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_peer_connection_message_handler PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_peer_connection_message_handler PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_pc_legacy_stats_collector_interface webrtc_rtc_base_checks )

# pc:peer_connection_proxy
add_library(webrtc_pc_peer_connection_proxy INTERFACE)
target_link_libraries(webrtc_pc_peer_connection_proxy INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_pc_proxy )
target_include_directories(webrtc_pc_peer_connection_proxy INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:peerconnection
add_library(webrtc_pc_peerconnection INTERFACE)
target_link_libraries(webrtc_pc_peerconnection INTERFACE absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_api_async_dns_resolver webrtc_api_audio_options_api webrtc_api_call_api webrtc_api_dtmf_sender_interface webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_ice_transport_factory webrtc_api_libjingle_logging_api webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_network_state_predictor_api webrtc_api_packet_socket_factory webrtc_api_priority webrtc_api_rtc_error webrtc_api_rtc_event_log_output_file webrtc_api_rtc_stats_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_adaptation_resource_adaptation_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_options webrtc_api_neteq_neteq_api webrtc_api_rtc_event_log_rtc_event_log webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_bitrate_settings webrtc_api_transport_datagram_transport_interface webrtc_api_transport_enums webrtc_api_transport_field_trial_based_config webrtc_api_transport_network_control webrtc_api_transport_sctp_transport_factory_interface webrtc_api_units_data_rate webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_call_call_interfaces webrtc_call_rtp_interfaces webrtc_call_rtp_sender webrtc_common_video_common_video webrtc_logging_ice_log webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_media_rtc_media_config webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_rtc_p2p webrtc_pc_audio_rtp_receiver webrtc_pc_audio_track webrtc_pc_connection_context webrtc_pc_data_channel_controller webrtc_pc_data_channel_utils webrtc_pc_dtmf_sender webrtc_pc_ice_server_parsing webrtc_pc_jitter_buffer_delay webrtc_pc_jsep_ice_candidate webrtc_pc_jsep_session_description webrtc_pc_legacy_stats_collector webrtc_pc_legacy_stats_collector_interface webrtc_pc_local_audio_source webrtc_pc_media_protocol_names webrtc_pc_media_stream webrtc_pc_media_stream_observer webrtc_pc_peer_connection webrtc_pc_peer_connection_factory webrtc_pc_peer_connection_internal webrtc_pc_peer_connection_message_handler webrtc_pc_proxy webrtc_pc_remote_audio_source webrtc_pc_rtc_stats_collector webrtc_pc_rtc_stats_traversal webrtc_pc_rtp_parameters_conversion webrtc_pc_rtp_receiver webrtc_pc_rtp_sender webrtc_pc_rtp_transceiver webrtc_pc_rtp_transmission_manager webrtc_pc_sctp_data_channel webrtc_pc_sdp_offer_answer webrtc_pc_sdp_state_provider webrtc_pc_sdp_utils webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_pc_simulcast_sdp_serializer webrtc_pc_stream_collection webrtc_pc_track_media_info_map webrtc_pc_transceiver_list webrtc_pc_usage_pattern webrtc_pc_video_rtp_receiver webrtc_pc_video_track webrtc_pc_video_track_source webrtc_pc_webrtc_sdp webrtc_pc_webrtc_session_description_factory webrtc_rtc_base_callback_list webrtc_rtc_base_checks webrtc_rtc_base_ip_address webrtc_rtc_base_network_constants webrtc_rtc_base_rtc_operations_chain webrtc_rtc_base_safe_minmax webrtc_rtc_base_socket_address webrtc_rtc_base_threading webrtc_rtc_base_weak_ptr webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_network_sent_packet webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_file_wrapper webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export webrtc_rtc_base_system_unused webrtc_rtc_base_third_party_base64_base64 webrtc_rtc_base_third_party_sigslot_sigslot webrtc_stats_stats webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )
target_include_directories(webrtc_pc_peerconnection INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:peerconnection_unittests
  android_add_executable(TARGET webrtc_pc_peerconnection_unittests NODISTRIBUTE SRC ${WEBRTC_ROOT}/pc/data_channel_integrationtest.cc ${WEBRTC_ROOT}/pc/data_channel_unittest.cc ${WEBRTC_ROOT}/pc/dtmf_sender_unittest.cc ${WEBRTC_ROOT}/pc/ice_server_parsing_unittest.cc ${WEBRTC_ROOT}/pc/jitter_buffer_delay_unittest.cc ${WEBRTC_ROOT}/pc/jsep_session_description_unittest.cc ${WEBRTC_ROOT}/pc/legacy_stats_collector_unittest.cc ${WEBRTC_ROOT}/pc/local_audio_source_unittest.cc ${WEBRTC_ROOT}/pc/media_stream_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_adaptation_integrationtest.cc ${WEBRTC_ROOT}/pc/peer_connection_bundle_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_crypto_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_data_channel_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_encodings_integrationtest.cc ${WEBRTC_ROOT}/pc/peer_connection_end_to_end_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_factory_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_field_trial_tests.cc ${WEBRTC_ROOT}/pc/peer_connection_header_extension_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_histogram_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_ice_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_integrationtest.cc ${WEBRTC_ROOT}/pc/peer_connection_interface_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_jsep_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_media_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_rtp_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_signaling_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_simulcast_unittest.cc ${WEBRTC_ROOT}/pc/peer_connection_svc_integrationtest.cc ${WEBRTC_ROOT}/pc/peer_connection_wrapper.cc ${WEBRTC_ROOT}/pc/peer_connection_wrapper.h ${WEBRTC_ROOT}/pc/proxy_unittest.cc ${WEBRTC_ROOT}/pc/rtc_stats_collector_unittest.cc ${WEBRTC_ROOT}/pc/rtc_stats_integrationtest.cc ${WEBRTC_ROOT}/pc/rtc_stats_traversal_unittest.cc ${WEBRTC_ROOT}/pc/rtp_media_utils_unittest.cc ${WEBRTC_ROOT}/pc/rtp_parameters_conversion_unittest.cc ${WEBRTC_ROOT}/pc/rtp_sender_receiver_unittest.cc ${WEBRTC_ROOT}/pc/rtp_transceiver_unittest.cc ${WEBRTC_ROOT}/pc/sctp_utils_unittest.cc ${WEBRTC_ROOT}/pc/sdp_offer_answer_unittest.cc ${WEBRTC_ROOT}/pc/simulcast_sdp_serializer_unittest.cc ${WEBRTC_ROOT}/pc/test/fake_audio_capture_module_unittest.cc ${WEBRTC_ROOT}/pc/test/test_sdp_strings.h ${WEBRTC_ROOT}/pc/track_media_info_map_unittest.cc ${WEBRTC_ROOT}/pc/video_rtp_track_source_unittest.cc ${WEBRTC_ROOT}/pc/video_track_unittest.cc ${WEBRTC_ROOT}/pc/webrtc_sdp_unittest.cc)
target_include_directories(webrtc_pc_peerconnection_unittests PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_peerconnection_unittests PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN HAVE_WEBRTC_VIDEO RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_pc_peerconnection_unittests PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_peerconnection_unittests PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_options_api webrtc_api_candidate webrtc_api_create_peerconnection_factory webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_enable_media webrtc_api_enable_media_with_defaults webrtc_api_fake_frame_decryptor webrtc_api_fake_frame_encryptor webrtc_api_field_trials_view webrtc_api_function_view webrtc_api_ice_transport_interface webrtc_api_libjingle_logging_api webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_media_stream_interface webrtc_api_mock_async_dns_resolver webrtc_api_mock_encoder_selector webrtc_api_mock_packet_socket_factory webrtc_api_mock_video_track webrtc_api_packet_socket_factory webrtc_api_priority webrtc_api_rtc_error webrtc_api_rtc_event_log_output_file webrtc_api_rtc_stats_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_adaptation_resource_adaptation_api webrtc_api_audio_audio_mixer_api webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_builtin_audio_decoder_factory webrtc_api_audio_codecs_builtin_audio_encoder_factory webrtc_api_audio_codecs_opus_audio_decoder_factory webrtc_api_audio_codecs_opus_audio_encoder_factory webrtc_api_audio_codecs_L16_audio_decoder_L16 webrtc_api_audio_codecs_L16_audio_encoder_L16 webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_frame_encryptor_interface webrtc_api_crypto_options webrtc_api_environment_environment_factory webrtc_api_rtc_event_log_rtc_event_log webrtc_api_rtc_event_log_rtc_event_log_factory webrtc_api_task_queue_task_queue webrtc_api_task_queue_default_task_queue_factory webrtc_api_transport_datagram_transport_interface webrtc_api_transport_field_trial_based_config webrtc_api_transport_sctp_transport_factory_interface webrtc_api_transport_rtp_rtp_source webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_encoded_image webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_builtin_video_decoder_factory webrtc_api_video_codecs_builtin_video_encoder_factory webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_api_video_codecs_video_decoder_factory_template webrtc_api_video_codecs_video_decoder_factory_template_dav1d_adapter webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp8_adapter webrtc_api_video_codecs_video_decoder_factory_template_libvpx_vp9_adapter webrtc_api_video_codecs_video_decoder_factory_template_open_h264_adapter webrtc_api_video_codecs_video_encoder_factory_template webrtc_api_video_codecs_video_encoder_factory_template_libaom_av1_adapter webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp8_adapter webrtc_api_video_codecs_video_encoder_factory_template_libvpx_vp9_adapter webrtc_api_video_codecs_video_encoder_factory_template_open_h264_adapter webrtc_call_call_interfaces webrtc_call_adaptation_resource_adaptation_test_utilities webrtc_common_video_common_video webrtc_logging_fake_rtc_event_log webrtc_media_codec webrtc_media_media_channel webrtc_media_media_constants webrtc_media_rid_description webrtc_media_rtc_audio_video webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_media_rtc_media_config webrtc_media_rtc_media_tests_utils webrtc_media_stream_params webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_processing_audio_processing webrtc_modules_audio_processing_api webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_fake_port_allocator webrtc_p2p_p2p_server_utils webrtc_p2p_p2p_test_utils webrtc_p2p_rtc_p2p webrtc_pc_audio_rtp_receiver webrtc_pc_audio_track webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_data_channel_controller_unittest webrtc_pc_dtls_srtp_transport webrtc_pc_dtls_transport webrtc_pc_dtmf_sender webrtc_pc_enable_fake_media webrtc_pc_ice_server_parsing webrtc_pc_integration_test_helpers webrtc_pc_jitter_buffer_delay webrtc_pc_legacy_stats_collector webrtc_pc_libjingle_peerconnection webrtc_pc_local_audio_source webrtc_pc_media_protocol_names webrtc_pc_media_session webrtc_pc_media_stream webrtc_pc_pc_test_utils webrtc_pc_peer_connection webrtc_pc_peer_connection_factory webrtc_pc_peer_connection_proxy webrtc_pc_proxy webrtc_pc_rtc_pc webrtc_pc_rtc_stats_collector webrtc_pc_rtc_stats_traversal webrtc_pc_rtp_media_utils webrtc_pc_rtp_parameters_conversion webrtc_pc_rtp_receiver webrtc_pc_rtp_sender webrtc_pc_rtp_sender_proxy webrtc_pc_rtp_transceiver webrtc_pc_rtp_transport_internal webrtc_pc_sctp_data_channel webrtc_pc_sctp_transport webrtc_pc_sctp_utils webrtc_pc_sdp_utils webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_pc_simulcast_sdp_serializer webrtc_pc_stream_collection webrtc_pc_track_media_info_map webrtc_pc_transport_stats webrtc_pc_usage_pattern webrtc_pc_video_rtp_receiver webrtc_pc_video_rtp_track_source webrtc_pc_video_track webrtc_pc_video_track_source webrtc_pc_webrtc_sdp webrtc_rtc_base_byte_buffer webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_gunit_helpers webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mdns_responder_interface webrtc_rtc_base_net_helper webrtc_rtc_base_network webrtc_rtc_base_network_constants webrtc_rtc_base_null_socket_server webrtc_rtc_base_refcount webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_rtc_certificate_generator webrtc_rtc_base_rtc_json webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_task_queue_for_test webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_unique_id_generator webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_third_party_base64_base64 webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_metrics webrtc_test_audio_codec_mocks webrtc_test_field_trial webrtc_test_rtc_expect_death webrtc_test_run_loop webrtc_test_scoped_key_value_config webrtc_test_test_main webrtc_test_test_support webrtc_test_pc_sctp_fake_sctp_transport )

# pc:proxy
add_library(webrtc_pc_proxy ${WEBRTC_ROOT}/pc/proxy.cc)
target_include_directories(webrtc_pc_proxy PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_proxy PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_proxy PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_proxy PUBLIC webrtc_api_scoped_refptr webrtc_api_task_queue_task_queue webrtc_rtc_base_event_tracer webrtc_rtc_base_rtc_event webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_system_rtc_export )

# pc:remote_audio_source
add_library(webrtc_pc_remote_audio_source ${WEBRTC_ROOT}/pc/remote_audio_source.cc)
target_include_directories(webrtc_pc_remote_audio_source PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_remote_audio_source PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_remote_audio_source PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_remote_audio_source PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_call_api webrtc_api_media_stream_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_channel webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_synchronization_mutex )

# pc:rtc_pc
add_library(webrtc_pc_rtc_pc INTERFACE)
target_link_libraries(webrtc_pc_rtc_pc INTERFACE webrtc_media_rtc_audio_video )
target_include_directories(webrtc_pc_rtc_pc INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:rtc_pc_unittests
  android_add_executable(TARGET webrtc_pc_rtc_pc_unittests NODISTRIBUTE SRC ${WEBRTC_ROOT}/pc/audio_rtp_receiver_unittest.cc ${WEBRTC_ROOT}/pc/channel_unittest.cc ${WEBRTC_ROOT}/pc/dtls_srtp_transport_unittest.cc ${WEBRTC_ROOT}/pc/dtls_transport_unittest.cc ${WEBRTC_ROOT}/pc/ice_transport_unittest.cc ${WEBRTC_ROOT}/pc/jsep_transport_controller_unittest.cc ${WEBRTC_ROOT}/pc/jsep_transport_unittest.cc ${WEBRTC_ROOT}/pc/media_session_unittest.cc ${WEBRTC_ROOT}/pc/rtcp_mux_filter_unittest.cc ${WEBRTC_ROOT}/pc/rtp_transport_unittest.cc ${WEBRTC_ROOT}/pc/sctp_transport_unittest.cc ${WEBRTC_ROOT}/pc/session_description_unittest.cc ${WEBRTC_ROOT}/pc/srtp_filter_unittest.cc ${WEBRTC_ROOT}/pc/srtp_session_unittest.cc ${WEBRTC_ROOT}/pc/srtp_transport_unittest.cc ${WEBRTC_ROOT}/pc/test/rtp_transport_test_util.h ${WEBRTC_ROOT}/pc/test/srtp_test_util.h ${WEBRTC_ROOT}/pc/used_ids_unittest.cc ${WEBRTC_ROOT}/pc/video_rtp_receiver_unittest.cc)
target_include_directories(webrtc_pc_rtc_pc_unittests PRIVATE ${WEBRTC_ROOT}/pc/../third_party/libsrtp/srtp ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtc_pc_unittests PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_pc_rtc_pc_unittests PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtc_pc_unittests PUBLIC absl::algorithm_container absl::any_invocable absl::memory absl::strings absl::optional libsrtp webrtc_api_array_view webrtc_api_audio_options_api webrtc_api_candidate webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_ice_transport_factory webrtc_api_libjingle_peerconnection_api webrtc_api_make_ref_counted webrtc_api_rtc_error webrtc_api_rtp_headers webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_datagram_transport_interface webrtc_api_transport_enums webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_recordable_encoded_frame webrtc_api_video_test_mock_recordable_encoded_frame webrtc_call_rtp_interfaces webrtc_call_rtp_receiver webrtc_media_codec webrtc_media_media_channel webrtc_media_media_constants webrtc_media_rid_description webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_media_rtc_media_tests_utils webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_fake_ice_transport webrtc_p2p_fake_port_allocator webrtc_p2p_p2p_test_utils webrtc_p2p_rtc_p2p webrtc_pc_audio_rtp_receiver webrtc_pc_channel webrtc_pc_dtls_srtp_transport webrtc_pc_dtls_transport webrtc_pc_ice_transport webrtc_pc_jsep_transport webrtc_pc_jsep_transport_controller webrtc_pc_libjingle_peerconnection webrtc_pc_media_protocol_names webrtc_pc_media_session webrtc_pc_pc_test_utils webrtc_pc_peerconnection webrtc_pc_rtc_pc webrtc_pc_rtcp_mux_filter webrtc_pc_rtp_media_utils webrtc_pc_rtp_parameters_conversion webrtc_pc_rtp_transport webrtc_pc_rtp_transport_internal webrtc_pc_sctp_transport webrtc_pc_session_description webrtc_pc_srtp_filter webrtc_pc_srtp_session webrtc_pc_srtp_transport webrtc_pc_used_ids webrtc_pc_video_rtp_receiver webrtc_rtc_base_async_packet_socket webrtc_rtc_base_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_gunit_helpers webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_net_helper webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_task_queue_for_test webrtc_rtc_base_threading webrtc_rtc_base_unique_id_generator webrtc_rtc_base_containers_flat_set webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_metrics webrtc_test_explicit_key_value_config webrtc_test_run_loop webrtc_test_scoped_key_value_config webrtc_test_test_main webrtc_test_test_support strmiids::strmiids)

# pc:rtc_stats_collector
add_library(webrtc_pc_rtc_stats_collector ${WEBRTC_ROOT}/pc/rtc_stats_collector.cc)
target_include_directories(webrtc_pc_rtc_stats_collector PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtc_stats_collector PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtc_stats_collector PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtc_stats_collector PUBLIC absl::bind_front absl::strings absl::optional webrtc_api_array_view webrtc_api_candidate webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtc_stats_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_scalability_mode webrtc_call_call_interfaces webrtc_common_video_common_video webrtc_media_media_channel webrtc_media_media_channel_impl webrtc_media_rtc_media_base webrtc_modules_audio_device_audio_device webrtc_modules_audio_device_audio_device_api webrtc_modules_audio_device_audio_device_impl webrtc_modules_audio_processing_audio_processing_statistics webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_rtc_p2p webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_data_channel_utils webrtc_pc_peer_connection_internal webrtc_pc_rtc_stats_traversal webrtc_pc_rtp_receiver webrtc_pc_rtp_receiver_proxy webrtc_pc_rtp_sender webrtc_pc_rtp_sender_proxy webrtc_pc_rtp_transceiver webrtc_pc_sctp_data_channel webrtc_pc_track_media_info_map webrtc_pc_transport_stats webrtc_pc_webrtc_sdp webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_network_constants webrtc_rtc_base_refcount webrtc_rtc_base_rtc_event webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_containers_flat_set webrtc_rtc_base_synchronization_mutex )

# pc:rtc_stats_traversal
add_library(webrtc_pc_rtc_stats_traversal ${WEBRTC_ROOT}/pc/rtc_stats_traversal.cc)
target_include_directories(webrtc_pc_rtc_stats_traversal PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtc_stats_traversal PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtc_stats_traversal PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtc_stats_traversal PUBLIC webrtc_api_rtc_stats_api webrtc_api_scoped_refptr webrtc_rtc_base_checks )

# pc:rtcp_mux_filter
add_library(webrtc_pc_rtcp_mux_filter ${WEBRTC_ROOT}/pc/rtcp_mux_filter.cc)
target_include_directories(webrtc_pc_rtcp_mux_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtcp_mux_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtcp_mux_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtcp_mux_filter PUBLIC webrtc_pc_session_description webrtc_rtc_base_logging )

# pc:rtp_media_utils
add_library(webrtc_pc_rtp_media_utils ${WEBRTC_ROOT}/pc/rtp_media_utils.cc)
target_include_directories(webrtc_pc_rtp_media_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtp_media_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtp_media_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtp_media_utils PUBLIC webrtc_api_rtp_transceiver_direction webrtc_rtc_base_checks )

# pc:rtp_parameters_conversion
add_library(webrtc_pc_rtp_parameters_conversion ${WEBRTC_ROOT}/pc/rtp_parameters_conversion.cc)
target_include_directories(webrtc_pc_rtp_parameters_conversion PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtp_parameters_conversion PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtp_parameters_conversion PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtp_parameters_conversion PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_array_view webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_media_codec webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_media_rtp_utils webrtc_media_stream_params webrtc_pc_session_description webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils )

# pc:rtp_receiver
add_library(webrtc_pc_rtp_receiver ${WEBRTC_ROOT}/pc/rtp_receiver.cc)
target_include_directories(webrtc_pc_rtp_receiver PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtp_receiver PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtp_receiver PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtp_receiver PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_crypto_frame_decryptor_interface webrtc_api_video_video_frame webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_media_stream webrtc_pc_media_stream_proxy webrtc_pc_video_track_source webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_threading )

# pc:rtp_receiver_proxy
add_library(webrtc_pc_rtp_receiver_proxy INTERFACE)
target_link_libraries(webrtc_pc_rtp_receiver_proxy INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_pc_proxy )
target_include_directories(webrtc_pc_rtp_receiver_proxy INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:rtp_sender
add_library(webrtc_pc_rtp_sender ${WEBRTC_ROOT}/pc/rtp_sender.cc)
target_include_directories(webrtc_pc_rtp_sender PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtp_sender PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtp_sender PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtp_sender PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_audio_options_api webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_frame_transformer_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_priority webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_crypto_frame_encryptor_interface webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_dtmf_sender webrtc_pc_legacy_stats_collector_interface webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_third_party_sigslot_sigslot )

# pc:rtp_sender_proxy
add_library(webrtc_pc_rtp_sender_proxy INTERFACE)
target_link_libraries(webrtc_pc_rtp_sender_proxy INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_pc_proxy )
target_include_directories(webrtc_pc_rtp_sender_proxy INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:rtp_transceiver
add_library(webrtc_pc_rtp_transceiver ${WEBRTC_ROOT}/pc/rtp_transceiver.cc)
target_include_directories(webrtc_pc_rtp_transceiver PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtp_transceiver PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtp_transceiver PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtp_transceiver PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_options_api webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_audio_codecs_audio_codecs_api webrtc_api_crypto_options webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_video_video_bitrate_allocator_factory webrtc_media_codec webrtc_media_media_channel webrtc_media_media_channel_impl webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_media_rtc_media_config webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_connection_context webrtc_pc_proxy webrtc_pc_rtp_media_utils webrtc_pc_rtp_parameters_conversion webrtc_pc_rtp_receiver webrtc_pc_rtp_receiver_proxy webrtc_pc_rtp_sender webrtc_pc_rtp_sender_proxy webrtc_pc_rtp_transport_internal webrtc_pc_session_description webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_threading webrtc_rtc_base_third_party_sigslot_sigslot )

# pc:rtp_transmission_manager
add_library(webrtc_pc_rtp_transmission_manager ${WEBRTC_ROOT}/pc/rtp_transmission_manager.cc)
target_include_directories(webrtc_pc_rtp_transmission_manager PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtp_transmission_manager PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtp_transmission_manager PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtp_transmission_manager PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_audio_rtp_receiver webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_legacy_stats_collector_interface webrtc_pc_rtp_receiver webrtc_pc_rtp_receiver_proxy webrtc_pc_rtp_sender webrtc_pc_rtp_sender_proxy webrtc_pc_rtp_transceiver webrtc_pc_transceiver_list webrtc_pc_usage_pattern webrtc_pc_video_rtp_receiver webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_weak_ptr )

# pc:rtp_transport
add_library(webrtc_pc_rtp_transport ${WEBRTC_ROOT}/pc/rtp_transport.cc)
target_include_directories(webrtc_pc_rtp_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_rtp_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_rtp_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_rtp_transport PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_timestamp webrtc_call_rtp_receiver webrtc_call_video_stream_api webrtc_media_rtc_media_base webrtc_media_rtp_utils webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_rtc_p2p webrtc_pc_rtp_transport_internal webrtc_pc_session_description webrtc_rtc_base_async_packet_socket webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_network_route webrtc_rtc_base_socket webrtc_rtc_base_network_sent_packet )

# pc:rtp_transport_internal
add_library(webrtc_pc_rtp_transport_internal INTERFACE)
target_link_libraries(webrtc_pc_rtp_transport_internal INTERFACE webrtc_call_rtp_receiver webrtc_p2p_rtc_p2p webrtc_pc_session_description webrtc_rtc_base_callback_list webrtc_rtc_base_network_route webrtc_rtc_base_ssl )
target_include_directories(webrtc_pc_rtp_transport_internal INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:sctp_data_channel
add_library(webrtc_pc_sctp_data_channel ${WEBRTC_ROOT}/pc/sctp_data_channel.cc)
target_include_directories(webrtc_pc_sctp_data_channel PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_sctp_data_channel PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_sctp_data_channel PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_sctp_data_channel PUBLIC absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_priority webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_datagram_transport_interface webrtc_media_media_channel webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_pc_data_channel_utils webrtc_pc_proxy webrtc_pc_sctp_utils webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_weak_ptr webrtc_rtc_base_containers_flat_set webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_unused )

# pc:sctp_transport
add_library(webrtc_pc_sctp_transport ${WEBRTC_ROOT}/pc/sctp_transport.cc)
target_include_directories(webrtc_pc_sctp_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_sctp_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_sctp_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_sctp_transport PUBLIC absl::optional webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_datagram_transport_interface webrtc_media_rtc_data_sctp_transport_internal webrtc_p2p_rtc_p2p webrtc_pc_dtls_transport webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_threading webrtc_rtc_base_third_party_sigslot_sigslot )

# pc:sctp_utils
add_library(webrtc_pc_sctp_utils ${WEBRTC_ROOT}/pc/sctp_utils.cc)
target_include_directories(webrtc_pc_sctp_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_sctp_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_sctp_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_sctp_utils PUBLIC absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_priority webrtc_api_rtp_sender_interface webrtc_api_transport_datagram_transport_interface webrtc_media_media_channel webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_net_dcsctp_public_types webrtc_rtc_base_byte_buffer webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_logging webrtc_rtc_base_ssl )

# pc:sdp_offer_answer
add_library(webrtc_pc_sdp_offer_answer ${WEBRTC_ROOT}/pc/sdp_offer_answer.cc)
target_include_directories(webrtc_pc_sdp_offer_answer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_sdp_offer_answer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_sdp_offer_answer PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_sdp_offer_answer PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_audio_options_api webrtc_api_candidate webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_crypto_options webrtc_api_video_builtin_video_bitrate_allocator_factory webrtc_api_video_video_bitrate_allocator_factory webrtc_media_codec webrtc_media_media_channel webrtc_media_rid_description webrtc_media_rtc_media_base webrtc_media_stream_params webrtc_p2p_rtc_p2p webrtc_pc_channel webrtc_pc_channel_interface webrtc_pc_connection_context webrtc_pc_data_channel_controller webrtc_pc_dtls_transport webrtc_pc_jsep_transport_controller webrtc_pc_legacy_stats_collector webrtc_pc_media_session webrtc_pc_media_stream webrtc_pc_media_stream_observer webrtc_pc_media_stream_proxy webrtc_pc_peer_connection_internal webrtc_pc_peer_connection_message_handler webrtc_pc_rtp_media_utils webrtc_pc_rtp_receiver webrtc_pc_rtp_receiver_proxy webrtc_pc_rtp_sender webrtc_pc_rtp_sender_proxy webrtc_pc_rtp_transceiver webrtc_pc_rtp_transmission_manager webrtc_pc_sdp_state_provider webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_pc_stream_collection webrtc_pc_transceiver_list webrtc_pc_usage_pattern webrtc_pc_used_ids webrtc_pc_webrtc_session_description_factory webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_operations_chain webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_unique_id_generator webrtc_rtc_base_weak_ptr webrtc_system_wrappers_metrics )

# pc:sdp_state_provider
add_library(webrtc_pc_sdp_state_provider INTERFACE)
target_link_libraries(webrtc_pc_sdp_state_provider INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface )
target_include_directories(webrtc_pc_sdp_state_provider INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:sdp_utils
add_library(webrtc_pc_sdp_utils ${WEBRTC_ROOT}/pc/sdp_utils.cc)
target_include_directories(webrtc_pc_sdp_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_sdp_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_sdp_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_sdp_utils PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_p2p_rtc_p2p webrtc_pc_session_description webrtc_rtc_base_checks webrtc_rtc_base_system_rtc_export )

# pc:session_description
add_library(webrtc_pc_session_description ${WEBRTC_ROOT}/pc/session_description.cc)
target_include_directories(webrtc_pc_session_description PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_session_description PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_session_description PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_session_description PUBLIC absl::algorithm_container absl::memory absl::strings webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_media_codec webrtc_media_media_channel webrtc_media_media_constants webrtc_media_rid_description webrtc_media_rtc_media_base webrtc_media_stream_params webrtc_p2p_rtc_p2p webrtc_pc_media_protocol_names webrtc_pc_simulcast_description webrtc_rtc_base_checks webrtc_rtc_base_socket_address webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# pc:simulcast_description
add_library(webrtc_pc_simulcast_description ${WEBRTC_ROOT}/pc/simulcast_description.cc)
target_include_directories(webrtc_pc_simulcast_description PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_simulcast_description PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_simulcast_description PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_simulcast_description PUBLIC absl::strings webrtc_rtc_base_checks webrtc_rtc_base_socket_address webrtc_rtc_base_system_rtc_export )

# pc:simulcast_sdp_serializer
add_library(webrtc_pc_simulcast_sdp_serializer ${WEBRTC_ROOT}/pc/simulcast_sdp_serializer.cc)
target_include_directories(webrtc_pc_simulcast_sdp_serializer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_simulcast_sdp_serializer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_simulcast_sdp_serializer PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_simulcast_sdp_serializer PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_rtc_error webrtc_media_rid_description webrtc_media_rtc_media_base webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_rtc_base_checks webrtc_rtc_base_stringutils )

# pc:srtp_filter
add_library(webrtc_pc_srtp_filter ${WEBRTC_ROOT}/pc/srtp_filter.cc)
target_include_directories(webrtc_pc_srtp_filter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_srtp_filter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_srtp_filter PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_srtp_filter PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_api_sequence_checker webrtc_pc_session_description webrtc_rtc_base_buffer webrtc_rtc_base_logging webrtc_rtc_base_ssl webrtc_rtc_base_zero_memory webrtc_rtc_base_third_party_base64_base64 )

# pc:srtp_session
add_library(webrtc_pc_srtp_session ${WEBRTC_ROOT}/pc/srtp_session.cc)
target_include_directories(webrtc_pc_srtp_session PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_srtp_session PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_srtp_session PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_srtp_session PUBLIC absl::core_headers absl::strings libsrtp webrtc_api_array_view webrtc_api_field_trials_view webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_pc_external_hmac webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_metrics )

# pc:srtp_transport
add_library(webrtc_pc_srtp_transport ${WEBRTC_ROOT}/pc/srtp_transport.cc)
target_include_directories(webrtc_pc_srtp_transport PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_srtp_transport PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_srtp_transport PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_srtp_transport PUBLIC absl::strings absl::optional webrtc_api_dtmf_sender_interface webrtc_api_field_trials_view webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_media_rtc_media_base webrtc_media_rtp_utils webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_p2p_rtc_p2p webrtc_pc_rtp_transport webrtc_pc_srtp_session webrtc_rtc_base_async_packet_socket webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_network_route webrtc_rtc_base_safe_conversions webrtc_rtc_base_ssl webrtc_rtc_base_zero_memory webrtc_rtc_base_third_party_base64_base64 )

# pc:stream_collection
add_library(webrtc_pc_stream_collection INTERFACE)
target_link_libraries(webrtc_pc_stream_collection INTERFACE webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface )
target_include_directories(webrtc_pc_stream_collection INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:track_media_info_map
add_library(webrtc_pc_track_media_info_map ${WEBRTC_ROOT}/pc/track_media_info_map.cc)
target_include_directories(webrtc_pc_track_media_info_map PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_track_media_info_map PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_track_media_info_map PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_track_media_info_map PUBLIC absl::optional webrtc_api_array_view webrtc_api_media_stream_interface webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_media_stream_params webrtc_pc_rtp_receiver webrtc_pc_rtp_sender webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_threading )

# pc:transceiver_list
add_library(webrtc_pc_transceiver_list ${WEBRTC_ROOT}/pc/transceiver_list.cc)
target_include_directories(webrtc_pc_transceiver_list PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_transceiver_list PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_transceiver_list PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_transceiver_list PUBLIC absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_pc_rtp_transceiver webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_system_no_unique_address )

# pc:transport_stats
add_library(webrtc_pc_transport_stats ${WEBRTC_ROOT}/pc/transport_stats.cc)
target_include_directories(webrtc_pc_transport_stats PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_transport_stats PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_transport_stats PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_transport_stats PUBLIC webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_p2p_rtc_p2p webrtc_rtc_base_ssl )

# pc:usage_pattern
add_library(webrtc_pc_usage_pattern ${WEBRTC_ROOT}/pc/usage_pattern.cc)
target_include_directories(webrtc_pc_usage_pattern PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_usage_pattern PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_usage_pattern PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_usage_pattern PUBLIC webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtp_sender_interface webrtc_rtc_base_logging webrtc_system_wrappers_metrics )

# pc:used_ids
add_library(webrtc_pc_used_ids INTERFACE)
target_link_libraries(webrtc_pc_used_ids INTERFACE webrtc_api_rtp_parameters webrtc_media_codec webrtc_media_rtc_media_base webrtc_rtc_base_checks webrtc_rtc_base_logging )
target_include_directories(webrtc_pc_used_ids INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# pc:video_rtp_receiver
add_library(webrtc_pc_video_rtp_receiver ${WEBRTC_ROOT}/pc/video_rtp_receiver.cc)
target_include_directories(webrtc_pc_video_rtp_receiver PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_video_rtp_receiver PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_video_rtp_receiver PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_video_rtp_receiver PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_dtls_transport_interface webrtc_api_dtmf_sender_interface webrtc_api_frame_transformer_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_crypto_frame_decryptor_interface webrtc_api_transport_rtp_rtp_source webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_pc_jitter_buffer_delay webrtc_pc_media_stream webrtc_pc_media_stream_track_proxy webrtc_pc_rtp_receiver webrtc_pc_video_rtp_track_source webrtc_pc_video_track webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_threading webrtc_rtc_base_system_no_unique_address )

# pc:video_rtp_track_source
add_library(webrtc_pc_video_rtp_track_source ${WEBRTC_ROOT}/pc/video_rtp_track_source.cc)
target_include_directories(webrtc_pc_video_rtp_track_source PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_video_rtp_track_source PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_video_rtp_track_source PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_video_rtp_track_source PUBLIC webrtc_api_sequence_checker webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_media_rtc_media_base webrtc_pc_video_track_source webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address )

# pc:video_track
add_library(webrtc_pc_video_track ${WEBRTC_ROOT}/pc/video_track.cc)
target_include_directories(webrtc_pc_video_track PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_video_track PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_video_track PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_video_track PUBLIC absl::optional webrtc_api_media_stream_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_video_video_frame webrtc_media_rtc_media_base webrtc_pc_video_track_source_proxy webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_threading webrtc_rtc_base_system_no_unique_address )

# pc:video_track_source
add_library(webrtc_pc_video_track_source ${WEBRTC_ROOT}/pc/video_track_source.cc)
target_include_directories(webrtc_pc_video_track_source PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_video_track_source PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_video_track_source PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_video_track_source PUBLIC absl::optional webrtc_api_media_stream_interface webrtc_api_sequence_checker webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export )

# pc:video_track_source_proxy
add_library(webrtc_pc_video_track_source_proxy ${WEBRTC_ROOT}/pc/video_track_source_proxy.cc)
target_include_directories(webrtc_pc_video_track_source_proxy PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_video_track_source_proxy PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_video_track_source_proxy PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_video_track_source_proxy PUBLIC absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_media_stream_interface webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_video_track_source_constraints webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_frame webrtc_pc_proxy webrtc_rtc_base_threading )

# pc:webrtc_sdp
add_library(webrtc_pc_webrtc_sdp ${WEBRTC_ROOT}/pc/jsep_ice_candidate.cc ${WEBRTC_ROOT}/pc/jsep_session_description.cc ${WEBRTC_ROOT}/pc/webrtc_sdp.cc)
target_include_directories(webrtc_pc_webrtc_sdp PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_webrtc_sdp PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_webrtc_sdp PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_webrtc_sdp PUBLIC absl::algorithm_container absl::strings absl::optional webrtc_api_candidate webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_rtp_transceiver_direction webrtc_media_codec webrtc_media_media_constants webrtc_media_rid_description webrtc_media_rtc_data_sctp_transport_internal webrtc_media_rtc_media_base webrtc_media_rtp_utils webrtc_media_stream_params webrtc_p2p_rtc_p2p webrtc_pc_media_protocol_names webrtc_pc_media_session webrtc_pc_session_description webrtc_pc_simulcast_description webrtc_pc_simulcast_sdp_serializer webrtc_rtc_base_checks webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_net_helper webrtc_rtc_base_network_constants webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# pc:webrtc_session_description_factory
add_library(webrtc_pc_webrtc_session_description_factory ${WEBRTC_ROOT}/pc/webrtc_session_description_factory.cc)
target_include_directories(webrtc_pc_webrtc_session_description_factory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_pc_webrtc_session_description_factory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_pc_webrtc_session_description_factory PRIVATE -fno-rtti )
target_link_libraries(webrtc_pc_webrtc_session_description_factory PUBLIC absl::algorithm_container absl::any_invocable absl::optional webrtc_api_dtmf_sender_interface webrtc_api_libjingle_peerconnection_api webrtc_api_rtc_error webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_p2p_rtc_p2p webrtc_pc_connection_context webrtc_pc_media_session webrtc_pc_sdp_state_provider webrtc_pc_session_description webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_rtc_certificate_generator webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_unique_id_generator webrtc_rtc_base_weak_ptr )

# rtc_base:async_dns_resolver
add_library(webrtc_rtc_base_async_dns_resolver ${WEBRTC_ROOT}/rtc_base/async_dns_resolver.cc)
target_include_directories(webrtc_rtc_base_async_dns_resolver PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_async_dns_resolver PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_async_dns_resolver PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_async_dns_resolver PUBLIC webrtc_api_async_dns_resolver webrtc_api_make_ref_counted webrtc_api_sequence_checker webrtc_api_task_queue_pending_task_safety_flag webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread webrtc_rtc_base_refcount webrtc_rtc_base_system_rtc_export )

# rtc_base:async_packet_socket
add_library(webrtc_rtc_base_async_packet_socket ${WEBRTC_ROOT}/rtc_base/async_packet_socket.cc)
target_include_directories(webrtc_rtc_base_async_packet_socket PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_async_packet_socket PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_async_packet_socket PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_async_packet_socket PUBLIC webrtc_api_sequence_checker webrtc_rtc_base_callback_list webrtc_rtc_base_checks webrtc_rtc_base_dscp webrtc_rtc_base_socket webrtc_rtc_base_timeutils webrtc_rtc_base_network_received_packet webrtc_rtc_base_network_sent_packet webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export webrtc_rtc_base_third_party_sigslot_sigslot )

# rtc_base:async_socket
add_library(webrtc_rtc_base_async_socket ${WEBRTC_ROOT}/rtc_base/async_socket.cc)
target_include_directories(webrtc_rtc_base_async_socket PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_async_socket PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_async_socket PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_async_socket PUBLIC absl::memory webrtc_rtc_base_checks webrtc_rtc_base_socket webrtc_rtc_base_socket_address webrtc_rtc_base_third_party_sigslot_sigslot )

# rtc_base:async_tcp_socket
add_library(webrtc_rtc_base_async_tcp_socket ${WEBRTC_ROOT}/rtc_base/async_tcp_socket.cc)
target_include_directories(webrtc_rtc_base_async_tcp_socket PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_async_tcp_socket PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_async_tcp_socket PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_async_tcp_socket PUBLIC webrtc_api_array_view webrtc_rtc_base_async_packet_socket webrtc_rtc_base_buffer webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_socket webrtc_rtc_base_socket_address webrtc_rtc_base_timeutils webrtc_rtc_base_network_sent_packet )

# rtc_base:async_udp_socket
add_library(webrtc_rtc_base_async_udp_socket ${WEBRTC_ROOT}/rtc_base/async_udp_socket.cc)
target_include_directories(webrtc_rtc_base_async_udp_socket PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_async_udp_socket PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_async_udp_socket PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_async_udp_socket PUBLIC absl::optional webrtc_api_sequence_checker webrtc_rtc_base_async_packet_socket webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_socket webrtc_rtc_base_socket_address webrtc_rtc_base_socket_factory webrtc_rtc_base_timeutils webrtc_rtc_base_network_sent_packet webrtc_rtc_base_system_no_unique_address webrtc_system_wrappers_field_trial )

# rtc_base:audio_format_to_string
add_library(webrtc_rtc_base_audio_format_to_string ${WEBRTC_ROOT}/rtc_base/strings/audio_format_to_string.cc)
target_include_directories(webrtc_rtc_base_audio_format_to_string PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_audio_format_to_string PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_audio_format_to_string PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_audio_format_to_string PUBLIC webrtc_api_audio_codecs_audio_codecs_api webrtc_rtc_base_stringutils )

# rtc_base:bit_buffer
add_library(webrtc_rtc_base_bit_buffer ${WEBRTC_ROOT}/rtc_base/bit_buffer.cc)
target_include_directories(webrtc_rtc_base_bit_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_bit_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_bit_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_bit_buffer PUBLIC absl::bits absl::strings webrtc_api_units_data_size webrtc_rtc_base_checks )

# rtc_base:bitrate_tracker
add_library(webrtc_rtc_base_bitrate_tracker ${WEBRTC_ROOT}/rtc_base/bitrate_tracker.cc)
target_include_directories(webrtc_rtc_base_bitrate_tracker PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_bitrate_tracker PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_bitrate_tracker PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_bitrate_tracker PUBLIC absl::optional webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_rate_statistics webrtc_rtc_base_system_rtc_export )

# rtc_base:bitstream_reader
add_library(webrtc_rtc_base_bitstream_reader ${WEBRTC_ROOT}/rtc_base/bitstream_reader.cc)
target_include_directories(webrtc_rtc_base_bitstream_reader PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_bitstream_reader PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_bitstream_reader PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_bitstream_reader PUBLIC absl::core_headers absl::bits absl::strings webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# rtc_base:buffer
add_library(webrtc_rtc_base_buffer INTERFACE)
target_link_libraries(webrtc_rtc_base_buffer INTERFACE absl::strings webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_type_traits webrtc_rtc_base_zero_memory )
target_include_directories(webrtc_rtc_base_buffer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:buffer_queue
add_library(webrtc_rtc_base_buffer_queue ${WEBRTC_ROOT}/rtc_base/buffer_queue.cc)
target_include_directories(webrtc_rtc_base_buffer_queue PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_buffer_queue PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_buffer_queue PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_buffer_queue PUBLIC webrtc_api_sequence_checker webrtc_rtc_base_buffer webrtc_rtc_base_macromagic webrtc_rtc_base_system_no_unique_address )

# rtc_base:byte_buffer
add_library(webrtc_rtc_base_byte_buffer ${WEBRTC_ROOT}/rtc_base/byte_buffer.cc)
target_include_directories(webrtc_rtc_base_byte_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_byte_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_byte_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_byte_buffer PUBLIC absl::core_headers absl::strings webrtc_api_array_view webrtc_rtc_base_buffer webrtc_rtc_base_byte_order )

# rtc_base:byte_order
add_library(webrtc_rtc_base_byte_order INTERFACE)
target_link_libraries(webrtc_rtc_base_byte_order INTERFACE webrtc_rtc_base_system_arch )
target_include_directories(webrtc_rtc_base_byte_order INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:callback_list
add_library(webrtc_rtc_base_callback_list ${WEBRTC_ROOT}/rtc_base/callback_list.cc)
target_include_directories(webrtc_rtc_base_callback_list PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_callback_list PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_callback_list PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_callback_list PUBLIC webrtc_api_function_view webrtc_rtc_base_checks webrtc_rtc_base_untyped_function webrtc_rtc_base_system_assume webrtc_rtc_base_system_inline webrtc_rtc_base_system_rtc_export )

# rtc_base:checks
add_library(webrtc_rtc_base_checks ${WEBRTC_ROOT}/rtc_base/checks.cc)
target_include_directories(webrtc_rtc_base_checks PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_checks PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_checks PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_checks PUBLIC absl::type_traits absl::strings webrtc_api_scoped_refptr webrtc_rtc_base_safe_compare webrtc_rtc_base_system_inline webrtc_rtc_base_system_rtc_export )

# rtc_base:compile_assert_c
add_library(webrtc_rtc_base_compile_assert_c INTERFACE)
target_include_directories(webrtc_rtc_base_compile_assert_c INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/containers:flat_containers_internal
add_library(webrtc_rtc_base_containers_flat_containers_internal ${WEBRTC_ROOT}/rtc_base/containers/flat_tree.cc)
target_include_directories(webrtc_rtc_base_containers_flat_containers_internal PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_containers_flat_containers_internal PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_containers_flat_containers_internal PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_containers_flat_containers_internal PUBLIC absl::algorithm_container webrtc_rtc_base_checks webrtc_rtc_base_system_no_unique_address )

# rtc_base/containers:flat_map
add_library(webrtc_rtc_base_containers_flat_map INTERFACE)
target_link_libraries(webrtc_rtc_base_containers_flat_map INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_containers_flat_containers_internal )
target_include_directories(webrtc_rtc_base_containers_flat_map INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/containers:flat_set
add_library(webrtc_rtc_base_containers_flat_set INTERFACE)
target_link_libraries(webrtc_rtc_base_containers_flat_set INTERFACE webrtc_rtc_base_containers_flat_containers_internal )
target_include_directories(webrtc_rtc_base_containers_flat_set INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:copy_on_write_buffer
add_library(webrtc_rtc_base_copy_on_write_buffer ${WEBRTC_ROOT}/rtc_base/copy_on_write_buffer.cc)
target_include_directories(webrtc_rtc_base_copy_on_write_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_copy_on_write_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_copy_on_write_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_copy_on_write_buffer PUBLIC absl::strings webrtc_api_scoped_refptr webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_type_traits webrtc_rtc_base_system_rtc_export )

# rtc_base:crc32
add_library(webrtc_rtc_base_crc32 ${WEBRTC_ROOT}/rtc_base/crc32.cc)
target_include_directories(webrtc_rtc_base_crc32 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_crc32 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_crc32 PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_crc32 PUBLIC absl::strings webrtc_rtc_base_macromagic )

# rtc_base:criticalsection
add_library(webrtc_rtc_base_criticalsection ${WEBRTC_ROOT}/rtc_base/deprecated/recursive_critical_section.cc)
target_include_directories(webrtc_rtc_base_criticalsection PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_criticalsection PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_criticalsection PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_criticalsection PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread_types webrtc_rtc_base_synchronization_yield webrtc_rtc_base_system_unused )

# rtc_base:crypt_string
add_library(webrtc_rtc_base_crypt_string ${WEBRTC_ROOT}/rtc_base/crypt_string.cc)
target_include_directories(webrtc_rtc_base_crypt_string PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_crypt_string PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_crypt_string PRIVATE -fno-rtti )

# rtc_base:divide_round
add_library(webrtc_rtc_base_divide_round INTERFACE)
target_link_libraries(webrtc_rtc_base_divide_round INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_safe_compare )
target_include_directories(webrtc_rtc_base_divide_round INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:dscp
add_library(webrtc_rtc_base_dscp INTERFACE)
target_include_directories(webrtc_rtc_base_dscp INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:event_tracer
add_library(webrtc_rtc_base_event_tracer ${WEBRTC_ROOT}/rtc_base/event_tracer.cc)
target_include_directories(webrtc_rtc_base_event_tracer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_event_tracer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_event_tracer PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_event_tracer PUBLIC absl::strings webrtc_api_sequence_checker webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread webrtc_rtc_base_platform_thread_types webrtc_rtc_base_rtc_event webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_rtc_export )

# rtc_base/experiments:alr_experiment
add_library(webrtc_rtc_base_experiments_alr_experiment ${WEBRTC_ROOT}/rtc_base/experiments/alr_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_alr_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_alr_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_alr_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_alr_experiment PUBLIC absl::string_view absl::optional webrtc_api_field_trials_view webrtc_rtc_base_logging )

# rtc_base/experiments:balanced_degradation_settings
add_library(webrtc_rtc_base_experiments_balanced_degradation_settings ${WEBRTC_ROOT}/rtc_base/experiments/balanced_degradation_settings.cc)
target_include_directories(webrtc_rtc_base_experiments_balanced_degradation_settings PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_balanced_degradation_settings PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_balanced_degradation_settings PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_balanced_degradation_settings PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial )

# rtc_base/experiments:bandwidth_quality_scaler_settings
add_library(webrtc_rtc_base_experiments_bandwidth_quality_scaler_settings ${WEBRTC_ROOT}/rtc_base/experiments/bandwidth_quality_scaler_settings.cc)
target_include_directories(webrtc_rtc_base_experiments_bandwidth_quality_scaler_settings PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_bandwidth_quality_scaler_settings PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_bandwidth_quality_scaler_settings PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_bandwidth_quality_scaler_settings PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_transport_field_trial_based_config webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial )

# rtc_base/experiments:cpu_speed_experiment
add_library(webrtc_rtc_base_experiments_cpu_speed_experiment ${WEBRTC_ROOT}/rtc_base/experiments/cpu_speed_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_cpu_speed_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_cpu_speed_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_cpu_speed_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_cpu_speed_experiment PUBLIC absl::optional webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial )

# rtc_base/experiments:encoder_info_settings
add_library(webrtc_rtc_base_experiments_encoder_info_settings ${WEBRTC_ROOT}/rtc_base/experiments/encoder_info_settings.cc)
target_include_directories(webrtc_rtc_base_experiments_encoder_info_settings PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_encoder_info_settings PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_encoder_info_settings PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_encoder_info_settings PUBLIC absl::strings absl::optional webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial )

# rtc_base/experiments:field_trial_parser
add_library(webrtc_rtc_base_experiments_field_trial_parser ${WEBRTC_ROOT}/rtc_base/experiments/field_trial_list.cc ${WEBRTC_ROOT}/rtc_base/experiments/field_trial_parser.cc ${WEBRTC_ROOT}/rtc_base/experiments/field_trial_units.cc ${WEBRTC_ROOT}/rtc_base/experiments/struct_parameters_parser.cc)
target_include_directories(webrtc_rtc_base_experiments_field_trial_parser PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_field_trial_parser PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_field_trial_parser PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_field_trial_parser PUBLIC absl::memory absl::strings absl::optional webrtc_api_units_data_rate webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils )

# rtc_base/experiments:keyframe_interval_settings_experiment
add_library(webrtc_rtc_base_experiments_keyframe_interval_settings_experiment ${WEBRTC_ROOT}/rtc_base/experiments/keyframe_interval_settings.cc)
target_include_directories(webrtc_rtc_base_experiments_keyframe_interval_settings_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_keyframe_interval_settings_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_keyframe_interval_settings_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_keyframe_interval_settings_experiment PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_transport_field_trial_based_config webrtc_rtc_base_experiments_field_trial_parser )

# rtc_base/experiments:min_video_bitrate_experiment
add_library(webrtc_rtc_base_experiments_min_video_bitrate_experiment ${WEBRTC_ROOT}/rtc_base/experiments/min_video_bitrate_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_min_video_bitrate_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_min_video_bitrate_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_min_video_bitrate_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_min_video_bitrate_experiment PUBLIC absl::optional webrtc_api_units_data_rate webrtc_api_video_video_frame webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial )

# rtc_base/experiments:normalize_simulcast_size_experiment
add_library(webrtc_rtc_base_experiments_normalize_simulcast_size_experiment ${WEBRTC_ROOT}/rtc_base/experiments/normalize_simulcast_size_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_normalize_simulcast_size_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_normalize_simulcast_size_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_normalize_simulcast_size_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_normalize_simulcast_size_experiment PUBLIC absl::optional webrtc_rtc_base_logging webrtc_system_wrappers_field_trial )

# rtc_base/experiments:quality_rampup_experiment
add_library(webrtc_rtc_base_experiments_quality_rampup_experiment ${WEBRTC_ROOT}/rtc_base/experiments/quality_rampup_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_quality_rampup_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_quality_rampup_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_quality_rampup_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_quality_rampup_experiment PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_transport_field_trial_based_config webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial )

# rtc_base/experiments:quality_scaler_settings
add_library(webrtc_rtc_base_experiments_quality_scaler_settings ${WEBRTC_ROOT}/rtc_base/experiments/quality_scaler_settings.cc)
target_include_directories(webrtc_rtc_base_experiments_quality_scaler_settings PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_quality_scaler_settings PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_quality_scaler_settings PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_quality_scaler_settings PUBLIC absl::optional webrtc_api_field_trials_view webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser )

# rtc_base/experiments:quality_scaling_experiment
add_library(webrtc_rtc_base_experiments_quality_scaling_experiment ${WEBRTC_ROOT}/rtc_base/experiments/quality_scaling_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_quality_scaling_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_quality_scaling_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_quality_scaling_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_quality_scaling_experiment PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_transport_field_trial_based_config webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_logging )

# rtc_base/experiments:rate_control_settings
add_library(webrtc_rtc_base_experiments_rate_control_settings ${WEBRTC_ROOT}/rtc_base/experiments/rate_control_settings.cc)
target_include_directories(webrtc_rtc_base_experiments_rate_control_settings PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_rate_control_settings PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_rate_control_settings PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_rate_control_settings PUBLIC absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_transport_field_trial_based_config webrtc_api_units_data_size webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_rtc_base_experiments_field_trial_parser webrtc_system_wrappers_field_trial webrtc_video_config_encoder_config )

# rtc_base/experiments:rtt_mult_experiment
add_library(webrtc_rtc_base_experiments_rtt_mult_experiment ${WEBRTC_ROOT}/rtc_base/experiments/rtt_mult_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_rtt_mult_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_rtt_mult_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_rtt_mult_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_rtt_mult_experiment PUBLIC absl::optional webrtc_rtc_base_logging webrtc_system_wrappers_field_trial )

# rtc_base/experiments:stable_target_rate_experiment
add_library(webrtc_rtc_base_experiments_stable_target_rate_experiment ${WEBRTC_ROOT}/rtc_base/experiments/stable_target_rate_experiment.cc)
target_include_directories(webrtc_rtc_base_experiments_stable_target_rate_experiment PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_experiments_stable_target_rate_experiment PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_experiments_stable_target_rate_experiment PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_experiments_stable_target_rate_experiment PUBLIC absl::optional webrtc_api_field_trials_view webrtc_api_transport_field_trial_based_config webrtc_rtc_base_experiments_field_trial_parser )

# rtc_base:frequency_tracker
add_library(webrtc_rtc_base_frequency_tracker ${WEBRTC_ROOT}/rtc_base/frequency_tracker.cc)
target_include_directories(webrtc_rtc_base_frequency_tracker PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_frequency_tracker PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_frequency_tracker PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_frequency_tracker PUBLIC absl::optional webrtc_api_units_frequency webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_rate_statistics webrtc_rtc_base_system_rtc_export )

# rtc_base:gtest_prod
add_library(webrtc_rtc_base_gtest_prod INTERFACE)
target_include_directories(webrtc_rtc_base_gtest_prod INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:gunit_helpers
add_library(webrtc_rtc_base_gunit_helpers ${WEBRTC_ROOT}/rtc_base/gunit.cc)
target_include_directories(webrtc_rtc_base_gunit_helpers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_gunit_helpers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_rtc_base_gunit_helpers PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_gunit_helpers PUBLIC absl::strings webrtc_rtc_base_logging webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_test_test_support )

# rtc_base:histogram_percentile_counter
add_library(webrtc_rtc_base_histogram_percentile_counter ${WEBRTC_ROOT}/rtc_base/numerics/histogram_percentile_counter.cc)
target_include_directories(webrtc_rtc_base_histogram_percentile_counter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_histogram_percentile_counter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_histogram_percentile_counter PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_histogram_percentile_counter PUBLIC absl::optional webrtc_rtc_base_checks )

# rtc_base:http_common
add_library(webrtc_rtc_base_http_common ${WEBRTC_ROOT}/rtc_base/http_common.cc)
target_include_directories(webrtc_rtc_base_http_common PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_http_common PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_http_common PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_http_common PUBLIC absl::strings webrtc_rtc_base_crypt_string webrtc_rtc_base_logging webrtc_rtc_base_socket_address webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_zero_memory webrtc_rtc_base_third_party_base64_base64 )

# rtc_base:ifaddrs_converter
add_library(webrtc_rtc_base_ifaddrs_converter INTERFACE)
target_link_libraries(webrtc_rtc_base_ifaddrs_converter INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_ip_address webrtc_rtc_base_logging )
target_include_directories(webrtc_rtc_base_ifaddrs_converter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:ignore_wundef
add_library(webrtc_rtc_base_ignore_wundef INTERFACE)
target_include_directories(webrtc_rtc_base_ignore_wundef INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:ip_address
add_library(webrtc_rtc_base_ip_address ${WEBRTC_ROOT}/rtc_base/ip_address.cc)
target_include_directories(webrtc_rtc_base_ip_address PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_ip_address PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_ip_address PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_ip_address PUBLIC webrtc_rtc_base_win32 absl::strings webrtc_rtc_base_byte_order webrtc_rtc_base_net_helpers webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# rtc_base:logging
add_library(webrtc_rtc_base_logging ${WEBRTC_ROOT}/rtc_base/logging.cc)
target_include_directories(webrtc_rtc_base_logging PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_logging PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_logging PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_logging PUBLIC absl::core_headers absl::type_traits absl::strings absl::optional webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread_types webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_inline )

# rtc_base:macromagic
add_library(webrtc_rtc_base_macromagic INTERFACE)
target_link_libraries(webrtc_rtc_base_macromagic INTERFACE webrtc_rtc_base_system_arch )
target_include_directories(webrtc_rtc_base_macromagic INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:mdns_responder_interface
add_library(webrtc_rtc_base_mdns_responder_interface INTERFACE)
target_link_libraries(webrtc_rtc_base_mdns_responder_interface INTERFACE absl::strings webrtc_rtc_base_ip_address )
target_include_directories(webrtc_rtc_base_mdns_responder_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/memory:aligned_malloc
add_library(webrtc_rtc_base_memory_aligned_malloc ${WEBRTC_ROOT}/rtc_base/memory/aligned_malloc.cc)
target_include_directories(webrtc_rtc_base_memory_aligned_malloc PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_memory_aligned_malloc PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_memory_aligned_malloc PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_memory_aligned_malloc PUBLIC webrtc_rtc_base_checks )

# rtc_base/memory:always_valid_pointer
add_library(webrtc_rtc_base_memory_always_valid_pointer INTERFACE)
target_link_libraries(webrtc_rtc_base_memory_always_valid_pointer INTERFACE webrtc_rtc_base_checks )
target_include_directories(webrtc_rtc_base_memory_always_valid_pointer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/memory:fifo_buffer
add_library(webrtc_rtc_base_memory_fifo_buffer ${WEBRTC_ROOT}/rtc_base/memory/fifo_buffer.cc)
target_include_directories(webrtc_rtc_base_memory_fifo_buffer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_memory_fifo_buffer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_memory_fifo_buffer PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_memory_fifo_buffer PUBLIC webrtc_api_task_queue_pending_task_safety_flag webrtc_rtc_base_stream webrtc_rtc_base_threading webrtc_rtc_base_synchronization_mutex )

# rtc_base:mod_ops
add_library(webrtc_rtc_base_mod_ops INTERFACE)
target_link_libraries(webrtc_rtc_base_mod_ops INTERFACE webrtc_rtc_base_checks )
target_include_directories(webrtc_rtc_base_mod_ops INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:moving_max_counter
add_library(webrtc_rtc_base_moving_max_counter INTERFACE)
target_link_libraries(webrtc_rtc_base_moving_max_counter INTERFACE absl::optional webrtc_rtc_base_checks )
target_include_directories(webrtc_rtc_base_moving_max_counter INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:net_helper
add_library(webrtc_rtc_base_net_helper ${WEBRTC_ROOT}/rtc_base/net_helper.cc)
target_include_directories(webrtc_rtc_base_net_helper PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_net_helper PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_net_helper PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_net_helper PUBLIC absl::strings webrtc_rtc_base_system_rtc_export )

# rtc_base:net_helpers
add_library(webrtc_rtc_base_net_helpers ${WEBRTC_ROOT}/rtc_base/net_helpers.cc)
target_include_directories(webrtc_rtc_base_net_helpers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_net_helpers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_net_helpers PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_net_helpers PUBLIC webrtc_rtc_base_win32 webrtc_rtc_base_win_windows_version absl::strings webrtc_rtc_base_system_rtc_export )

# rtc_base:network
add_library(webrtc_rtc_base_network ${WEBRTC_ROOT}/rtc_base/network.cc)
target_include_directories(webrtc_rtc_base_network PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_network PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_network PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_network PUBLIC webrtc_rtc_base_win32 absl::algorithm_container absl::core_headers absl::memory absl::strings webrtc_api_array_view webrtc_api_field_trials_view webrtc_api_sequence_checker webrtc_api_task_queue_pending_task_safety_flag webrtc_api_transport_field_trial_based_config webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_ifaddrs_converter webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mdns_responder_interface webrtc_rtc_base_socket webrtc_rtc_base_socket_factory webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_memory_always_valid_pointer webrtc_rtc_base_system_rtc_export webrtc_rtc_base_third_party_sigslot_sigslot )

# rtc_base:network_constants
add_library(webrtc_rtc_base_network_constants ${WEBRTC_ROOT}/rtc_base/network_constants.cc)
target_include_directories(webrtc_rtc_base_network_constants PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_network_constants PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_network_constants PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_network_constants PUBLIC webrtc_rtc_base_checks )

# rtc_base/network:received_packet
add_library(webrtc_rtc_base_network_received_packet ${WEBRTC_ROOT}/rtc_base/network/received_packet.cc)
target_include_directories(webrtc_rtc_base_network_received_packet PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_network_received_packet PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_network_received_packet PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_network_received_packet PUBLIC absl::any_invocable absl::optional webrtc_api_array_view webrtc_api_units_timestamp webrtc_rtc_base_socket_address webrtc_rtc_base_system_rtc_export )

# rtc_base:network_route
add_library(webrtc_rtc_base_network_route ${WEBRTC_ROOT}/rtc_base/network_route.cc)
target_include_directories(webrtc_rtc_base_network_route PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_network_route PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_network_route PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_network_route PUBLIC webrtc_rtc_base_network_constants webrtc_rtc_base_stringutils webrtc_rtc_base_system_inline )

# rtc_base/network:sent_packet
add_library(webrtc_rtc_base_network_sent_packet ${WEBRTC_ROOT}/rtc_base/network/sent_packet.cc)
target_include_directories(webrtc_rtc_base_network_sent_packet PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_network_sent_packet PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_network_sent_packet PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_network_sent_packet PUBLIC absl::optional webrtc_rtc_base_system_rtc_export )

# rtc_base:null_socket_server
add_library(webrtc_rtc_base_null_socket_server ${WEBRTC_ROOT}/rtc_base/null_socket_server.cc)
target_include_directories(webrtc_rtc_base_null_socket_server PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_null_socket_server PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_null_socket_server PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_null_socket_server PUBLIC webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_rtc_event webrtc_rtc_base_socket webrtc_rtc_base_socket_server webrtc_rtc_base_system_rtc_export )

# rtc_base:one_time_event
add_library(webrtc_rtc_base_one_time_event INTERFACE)
target_link_libraries(webrtc_rtc_base_one_time_event INTERFACE webrtc_rtc_base_synchronization_mutex )
target_include_directories(webrtc_rtc_base_one_time_event INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:platform_thread
add_library(webrtc_rtc_base_platform_thread ${WEBRTC_ROOT}/rtc_base/platform_thread.cc)
target_include_directories(webrtc_rtc_base_platform_thread PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_platform_thread PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_platform_thread PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_platform_thread PUBLIC absl::memory absl::strings absl::optional webrtc_api_sequence_checker webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread_types webrtc_rtc_base_rtc_event webrtc_rtc_base_timeutils )

# rtc_base:platform_thread_types
add_library(webrtc_rtc_base_platform_thread_types ${WEBRTC_ROOT}/rtc_base/platform_thread_types.cc)
target_include_directories(webrtc_rtc_base_platform_thread_types PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_platform_thread_types PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_platform_thread_types PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_platform_thread_types PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_macromagic )

# rtc_base:protobuf_utils
add_library(webrtc_rtc_base_protobuf_utils INTERFACE)
target_link_libraries(webrtc_rtc_base_protobuf_utils INTERFACE libprotobuf )
target_include_directories(webrtc_rtc_base_protobuf_utils INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:proxy_info
add_library(webrtc_rtc_base_proxy_info ${WEBRTC_ROOT}/rtc_base/proxy_info.cc)
target_include_directories(webrtc_rtc_base_proxy_info PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_proxy_info PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_proxy_info PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_proxy_info PUBLIC webrtc_rtc_base_crypt_string webrtc_rtc_base_socket_address )

# rtc_base:race_checker
add_library(webrtc_rtc_base_race_checker ${WEBRTC_ROOT}/rtc_base/race_checker.cc)
target_include_directories(webrtc_rtc_base_race_checker PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_race_checker PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_race_checker PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_race_checker PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread_types )

# rtc_base:random
add_library(webrtc_rtc_base_random ${WEBRTC_ROOT}/rtc_base/random.cc)
target_include_directories(webrtc_rtc_base_random PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_random PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_random PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_random PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# rtc_base:rate_limiter
add_library(webrtc_rtc_base_rate_limiter ${WEBRTC_ROOT}/rtc_base/rate_limiter.cc)
target_include_directories(webrtc_rtc_base_rate_limiter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rate_limiter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rate_limiter PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rate_limiter PUBLIC absl::optional webrtc_rtc_base_macromagic webrtc_rtc_base_rate_statistics webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers )

# rtc_base:rate_statistics
add_library(webrtc_rtc_base_rate_statistics ${WEBRTC_ROOT}/rtc_base/rate_statistics.cc)
target_include_directories(webrtc_rtc_base_rate_statistics PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rate_statistics PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rate_statistics PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rate_statistics PUBLIC absl::optional webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_safe_conversions webrtc_rtc_base_system_rtc_export )

# rtc_base:rate_tracker
add_library(webrtc_rtc_base_rate_tracker ${WEBRTC_ROOT}/rtc_base/rate_tracker.cc)
target_include_directories(webrtc_rtc_base_rate_tracker PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rate_tracker PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rate_tracker PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rate_tracker PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_timeutils )

# rtc_base:refcount
add_library(webrtc_rtc_base_refcount INTERFACE)
target_link_libraries(webrtc_rtc_base_refcount INTERFACE webrtc_api_ref_count webrtc_api_scoped_refptr webrtc_rtc_base_macromagic )
target_include_directories(webrtc_rtc_base_refcount INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:rolling_accumulator
add_library(webrtc_rtc_base_rolling_accumulator INTERFACE)
target_link_libraries(webrtc_rtc_base_rolling_accumulator INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_rtc_numerics )
target_include_directories(webrtc_rtc_base_rolling_accumulator INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:rtc_base_tests_utils
add_library(webrtc_rtc_base_rtc_base_tests_utils ${WEBRTC_ROOT}/rtc_base/cpu_time.cc ${WEBRTC_ROOT}/rtc_base/fake_clock.cc ${WEBRTC_ROOT}/rtc_base/fake_ssl_identity.cc ${WEBRTC_ROOT}/rtc_base/firewall_socket_server.cc ${WEBRTC_ROOT}/rtc_base/memory_stream.cc ${WEBRTC_ROOT}/rtc_base/memory_usage.cc ${WEBRTC_ROOT}/rtc_base/nat_server.cc ${WEBRTC_ROOT}/rtc_base/nat_socket_factory.cc ${WEBRTC_ROOT}/rtc_base/nat_types.cc ${WEBRTC_ROOT}/rtc_base/proxy_server.cc ${WEBRTC_ROOT}/rtc_base/server_socket_adapters.cc ${WEBRTC_ROOT}/rtc_base/socket_stream.cc ${WEBRTC_ROOT}/rtc_base/test_echo_server.cc ${WEBRTC_ROOT}/rtc_base/test_utils.cc ${WEBRTC_ROOT}/rtc_base/virtual_socket_server.cc)
target_include_directories(webrtc_rtc_base_rtc_base_tests_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_base_tests_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rtc_base_tests_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rtc_base_tests_utils PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_make_ref_counted webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_async_packet_socket webrtc_rtc_base_async_socket webrtc_rtc_base_async_tcp_socket webrtc_rtc_base_async_udp_socket webrtc_rtc_base_byte_buffer webrtc_rtc_base_checks webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mdns_responder_interface webrtc_rtc_base_network webrtc_rtc_base_rtc_event webrtc_rtc_base_socket webrtc_rtc_base_socket_adapters webrtc_rtc_base_socket_address webrtc_rtc_base_socket_address_pair webrtc_rtc_base_socket_factory webrtc_rtc_base_socket_server webrtc_rtc_base_ssl webrtc_rtc_base_stream webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_memory_always_valid_pointer webrtc_rtc_base_memory_fifo_buffer webrtc_rtc_base_network_received_packet webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_third_party_sigslot_sigslot webrtc_test_scoped_key_value_config )

# rtc_base:rtc_certificate_generator
add_library(webrtc_rtc_base_rtc_certificate_generator ${WEBRTC_ROOT}/rtc_base/rtc_certificate_generator.cc)
target_include_directories(webrtc_rtc_base_rtc_certificate_generator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_certificate_generator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rtc_certificate_generator PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rtc_certificate_generator PUBLIC absl::any_invocable absl::optional webrtc_api_scoped_refptr webrtc_rtc_base_checks webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_rtc_base_system_rtc_export )

# rtc_base:rtc_event
add_library(webrtc_rtc_base_rtc_event ${WEBRTC_ROOT}/rtc_base/event.cc)
target_include_directories(webrtc_rtc_base_rtc_event PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_event PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rtc_event PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rtc_event PUBLIC absl::optional webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_yield_policy webrtc_rtc_base_system_warn_current_thread_is_deadlocked )

# rtc_base:rtc_json
add_library(webrtc_rtc_base_rtc_json ${WEBRTC_ROOT}/rtc_base/strings/json.cc)
target_include_directories(webrtc_rtc_base_rtc_json PRIVATE ${WEBRTC_ROOT}/rtc_base/../third_party/jsoncpp/source/include ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_json PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rtc_json PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rtc_json PUBLIC absl::strings jsoncpp webrtc_rtc_base_stringutils )

# rtc_base:rtc_numerics
add_library(webrtc_rtc_base_rtc_numerics ${WEBRTC_ROOT}/rtc_base/numerics/event_based_exponential_moving_average.cc ${WEBRTC_ROOT}/rtc_base/numerics/exp_filter.cc ${WEBRTC_ROOT}/rtc_base/numerics/moving_average.cc)
target_include_directories(webrtc_rtc_base_rtc_numerics PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_numerics PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rtc_numerics PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rtc_numerics PUBLIC absl::optional webrtc_rtc_base_checks webrtc_rtc_base_mod_ops )

# rtc_base:rtc_operations_chain
add_library(webrtc_rtc_base_rtc_operations_chain ${WEBRTC_ROOT}/rtc_base/operations_chain.cc)
target_include_directories(webrtc_rtc_base_rtc_operations_chain PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_operations_chain PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rtc_operations_chain PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rtc_operations_chain PUBLIC absl::optional webrtc_api_make_ref_counted webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_refcount webrtc_rtc_base_system_no_unique_address )

# rtc_base:rtc_task_queue
add_library(webrtc_rtc_base_rtc_task_queue ${WEBRTC_ROOT}/rtc_base/task_queue.cc)
target_include_directories(webrtc_rtc_base_rtc_task_queue PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_task_queue PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_rtc_task_queue PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_rtc_task_queue PUBLIC absl::any_invocable absl::memory webrtc_api_task_queue_task_queue webrtc_rtc_base_macromagic webrtc_rtc_base_system_rtc_export )

# rtc_base:rtc_task_queue_win
add_library(webrtc_rtc_base_rtc_task_queue_win ${WEBRTC_ROOT}/rtc_base/task_queue_win.cc)
target_include_directories(webrtc_rtc_base_rtc_task_queue_win PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_rtc_task_queue_win PRIVATE RTC_ENABLE_VP9 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_WIN)
target_compile_options(webrtc_rtc_base_rtc_task_queue_win PRIVATE  -fno-rtti)
target_link_libraries(webrtc_rtc_base_rtc_task_queue_win PUBLIC absl::any_invocable absl::strings absl::optional webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread webrtc_rtc_base_rtc_event webrtc_rtc_base_safe_conversions webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex )

# rtc_base:safe_compare
add_library(webrtc_rtc_base_safe_compare INTERFACE)
target_link_libraries(webrtc_rtc_base_safe_compare INTERFACE webrtc_rtc_base_type_traits )
target_include_directories(webrtc_rtc_base_safe_compare INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:safe_conversions
add_library(webrtc_rtc_base_safe_conversions INTERFACE)
target_link_libraries(webrtc_rtc_base_safe_conversions INTERFACE webrtc_rtc_base_checks )
target_include_directories(webrtc_rtc_base_safe_conversions INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:safe_minmax
add_library(webrtc_rtc_base_safe_minmax INTERFACE)
target_link_libraries(webrtc_rtc_base_safe_minmax INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_safe_compare webrtc_rtc_base_type_traits )
target_include_directories(webrtc_rtc_base_safe_minmax INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:sample_counter
add_library(webrtc_rtc_base_sample_counter ${WEBRTC_ROOT}/rtc_base/numerics/sample_counter.cc)
target_include_directories(webrtc_rtc_base_sample_counter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_sample_counter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_sample_counter PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_sample_counter PUBLIC absl::optional webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions )

# rtc_base:sanitizer
add_library(webrtc_rtc_base_sanitizer INTERFACE)
target_link_libraries(webrtc_rtc_base_sanitizer INTERFACE absl::type_traits )
target_include_directories(webrtc_rtc_base_sanitizer INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:socket
add_library(webrtc_rtc_base_socket ${WEBRTC_ROOT}/rtc_base/socket.cc)
target_include_directories(webrtc_rtc_base_socket PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_socket PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_socket PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_socket PUBLIC webrtc_rtc_base_win32 webrtc_rtc_base_macromagic webrtc_rtc_base_socket_address webrtc_rtc_base_third_party_sigslot_sigslot )

# rtc_base:socket_adapters
add_library(webrtc_rtc_base_socket_adapters ${WEBRTC_ROOT}/rtc_base/socket_adapters.cc)
target_include_directories(webrtc_rtc_base_socket_adapters PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_socket_adapters PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_socket_adapters PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_socket_adapters PUBLIC absl::strings webrtc_api_array_view webrtc_rtc_base_async_socket webrtc_rtc_base_buffer webrtc_rtc_base_byte_buffer webrtc_rtc_base_checks webrtc_rtc_base_crypt_string webrtc_rtc_base_http_common webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_zero_memory )

# rtc_base:socket_address
add_library(webrtc_rtc_base_socket_address ${WEBRTC_ROOT}/rtc_base/socket_address.cc)
target_include_directories(webrtc_rtc_base_socket_address PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_socket_address PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_socket_address PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_socket_address PUBLIC webrtc_rtc_base_win32 absl::strings webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_net_helpers webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export )

# rtc_base:socket_address_pair
add_library(webrtc_rtc_base_socket_address_pair ${WEBRTC_ROOT}/rtc_base/socket_address_pair.cc)
target_include_directories(webrtc_rtc_base_socket_address_pair PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_socket_address_pair PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_socket_address_pair PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_socket_address_pair PUBLIC webrtc_rtc_base_socket_address )

# rtc_base:socket_factory
add_library(webrtc_rtc_base_socket_factory INTERFACE)
target_link_libraries(webrtc_rtc_base_socket_factory INTERFACE webrtc_rtc_base_socket )
target_include_directories(webrtc_rtc_base_socket_factory INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:socket_server
add_library(webrtc_rtc_base_socket_server INTERFACE)
target_link_libraries(webrtc_rtc_base_socket_server INTERFACE webrtc_api_units_time_delta webrtc_rtc_base_rtc_event webrtc_rtc_base_socket_factory )
target_include_directories(webrtc_rtc_base_socket_server INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:ssl
add_library(webrtc_rtc_base_ssl ${WEBRTC_ROOT}/rtc_base/boringssl_certificate.cc ${WEBRTC_ROOT}/rtc_base/boringssl_identity.cc ${WEBRTC_ROOT}/rtc_base/helpers.cc ${WEBRTC_ROOT}/rtc_base/message_digest.cc ${WEBRTC_ROOT}/rtc_base/openssl_adapter.cc ${WEBRTC_ROOT}/rtc_base/openssl_digest.cc ${WEBRTC_ROOT}/rtc_base/openssl_key_pair.cc ${WEBRTC_ROOT}/rtc_base/openssl_session_cache.cc ${WEBRTC_ROOT}/rtc_base/openssl_stream_adapter.cc ${WEBRTC_ROOT}/rtc_base/openssl_utility.cc ${WEBRTC_ROOT}/rtc_base/rtc_certificate.cc ${WEBRTC_ROOT}/rtc_base/ssl_adapter.cc ${WEBRTC_ROOT}/rtc_base/ssl_certificate.cc ${WEBRTC_ROOT}/rtc_base/ssl_fingerprint.cc ${WEBRTC_ROOT}/rtc_base/ssl_identity.cc ${WEBRTC_ROOT}/rtc_base/ssl_stream_adapter.cc)
target_include_directories(webrtc_rtc_base_ssl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_ssl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_ssl PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_ssl PUBLIC webrtc_rtc_base_win32 absl::algorithm_container absl::core_headers absl::any_invocable absl::memory absl::strings absl::optional crypto ssl webrtc_api_array_view webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_rtc_base_async_socket webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_copy_on_write_buffer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_safe_conversions webrtc_rtc_base_socket webrtc_rtc_base_socket_address webrtc_rtc_base_stream webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_rtc_export webrtc_rtc_base_task_utils_repeating_task webrtc_rtc_base_third_party_base64_base64 webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_field_trial )

# rtc_base:stream
add_library(webrtc_rtc_base_stream ${WEBRTC_ROOT}/rtc_base/stream.cc)
target_include_directories(webrtc_rtc_base_stream PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_stream PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_stream PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_stream PUBLIC webrtc_api_array_view webrtc_rtc_base_buffer webrtc_rtc_base_checks webrtc_rtc_base_threading webrtc_rtc_base_system_rtc_export webrtc_rtc_base_third_party_sigslot_sigslot )

# rtc_base:stringutils
add_library(webrtc_rtc_base_stringutils ${WEBRTC_ROOT}/rtc_base/string_encode.cc ${WEBRTC_ROOT}/rtc_base/string_to_number.cc ${WEBRTC_ROOT}/rtc_base/string_utils.cc ${WEBRTC_ROOT}/rtc_base/strings/string_builder.cc ${WEBRTC_ROOT}/rtc_base/strings/string_format.cc)
target_include_directories(webrtc_rtc_base_stringutils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_stringutils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_stringutils PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_stringutils PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_safe_minmax )

# rtc_base:strong_alias
add_library(webrtc_rtc_base_strong_alias INTERFACE)
target_include_directories(webrtc_rtc_base_strong_alias INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:swap_queue
add_library(webrtc_rtc_base_swap_queue INTERFACE)
target_link_libraries(webrtc_rtc_base_swap_queue INTERFACE absl::core_headers webrtc_rtc_base_checks )
target_include_directories(webrtc_rtc_base_swap_queue INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/synchronization:mutex
add_library(webrtc_rtc_base_synchronization_mutex INTERFACE)
target_link_libraries(webrtc_rtc_base_synchronization_mutex INTERFACE absl::core_headers absl::synchronization webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread_types webrtc_rtc_base_synchronization_yield webrtc_rtc_base_system_no_unique_address )
target_include_directories(webrtc_rtc_base_synchronization_mutex INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/synchronization:sequence_checker_internal
add_library(webrtc_rtc_base_synchronization_sequence_checker_internal ${WEBRTC_ROOT}/rtc_base/synchronization/sequence_checker_internal.cc)
target_include_directories(webrtc_rtc_base_synchronization_sequence_checker_internal PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_synchronization_sequence_checker_internal PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_synchronization_sequence_checker_internal PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_synchronization_sequence_checker_internal PUBLIC webrtc_api_task_queue_task_queue webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_platform_thread_types webrtc_rtc_base_stringutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_rtc_export )

# rtc_base/synchronization:yield
add_library(webrtc_rtc_base_synchronization_yield ${WEBRTC_ROOT}/rtc_base/synchronization/yield.cc)
target_include_directories(webrtc_rtc_base_synchronization_yield PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_synchronization_yield PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_synchronization_yield PRIVATE -fno-rtti )

# rtc_base/synchronization:yield_policy
add_library(webrtc_rtc_base_synchronization_yield_policy ${WEBRTC_ROOT}/rtc_base/synchronization/yield_policy.cc)
target_include_directories(webrtc_rtc_base_synchronization_yield_policy PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_synchronization_yield_policy PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_synchronization_yield_policy PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_synchronization_yield_policy PUBLIC absl::config absl::core_headers webrtc_rtc_base_checks )

# rtc_base/system:arch
add_library(webrtc_rtc_base_system_arch INTERFACE)
target_include_directories(webrtc_rtc_base_system_arch INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/system:assume
add_library(webrtc_rtc_base_system_assume INTERFACE)
target_include_directories(webrtc_rtc_base_system_assume INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/system:file_wrapper
add_library(webrtc_rtc_base_system_file_wrapper ${WEBRTC_ROOT}/rtc_base/system/file_wrapper.cc)
target_include_directories(webrtc_rtc_base_system_file_wrapper PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_system_file_wrapper PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_system_file_wrapper PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_system_file_wrapper PUBLIC absl::strings webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_safe_conversions )

# rtc_base/system:ignore_warnings
add_library(webrtc_rtc_base_system_ignore_warnings INTERFACE)
target_include_directories(webrtc_rtc_base_system_ignore_warnings INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/system:inline
add_library(webrtc_rtc_base_system_inline INTERFACE)
target_include_directories(webrtc_rtc_base_system_inline INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/system:no_unique_address
add_library(webrtc_rtc_base_system_no_unique_address INTERFACE)
target_include_directories(webrtc_rtc_base_system_no_unique_address INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/system:rtc_export
add_library(webrtc_rtc_base_system_rtc_export INTERFACE)
target_include_directories(webrtc_rtc_base_system_rtc_export INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/system:unused
add_library(webrtc_rtc_base_system_unused INTERFACE)
target_include_directories(webrtc_rtc_base_system_unused INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/system:warn_current_thread_is_deadlocked
add_library(webrtc_rtc_base_system_warn_current_thread_is_deadlocked INTERFACE)
target_include_directories(webrtc_rtc_base_system_warn_current_thread_is_deadlocked INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:task_queue_for_test
add_library(webrtc_rtc_base_task_queue_for_test ${WEBRTC_ROOT}/rtc_base/task_queue_for_test.cc)
target_include_directories(webrtc_rtc_base_task_queue_for_test PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_task_queue_for_test PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_task_queue_for_test PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_task_queue_for_test PUBLIC absl::cleanup absl::strings webrtc_api_function_view webrtc_api_task_queue_task_queue webrtc_api_task_queue_default_task_queue_factory webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue )

# rtc_base/task_utils:repeating_task
add_library(webrtc_rtc_base_task_utils_repeating_task ${WEBRTC_ROOT}/rtc_base/task_utils/repeating_task.cc)
target_include_directories(webrtc_rtc_base_task_utils_repeating_task PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_task_utils_repeating_task PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_task_utils_repeating_task PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_task_utils_repeating_task PUBLIC absl::any_invocable webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_logging webrtc_rtc_base_timeutils webrtc_system_wrappers_system_wrappers )

# rtc_base/third_party/base64
add_library(webrtc_rtc_base_third_party_base64_base64 ${WEBRTC_ROOT}/rtc_base/third_party/base64/base64.cc)
target_include_directories(webrtc_rtc_base_third_party_base64_base64 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_third_party_base64_base64 PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_third_party_base64_base64 PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_third_party_base64_base64 PUBLIC absl::strings webrtc_rtc_base_checks webrtc_rtc_base_system_rtc_export )

# rtc_base/third_party/sigslot
add_library(webrtc_rtc_base_third_party_sigslot_sigslot ${WEBRTC_ROOT}/rtc_base/third_party/sigslot/sigslot.cc)
target_include_directories(webrtc_rtc_base_third_party_sigslot_sigslot PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_third_party_sigslot_sigslot PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_third_party_sigslot_sigslot PRIVATE -fno-rtti )

# rtc_base:threading
add_library(webrtc_rtc_base_threading ${WEBRTC_ROOT}/rtc_base/internal/default_socket_server.cc ${WEBRTC_ROOT}/rtc_base/network_monitor.cc ${WEBRTC_ROOT}/rtc_base/network_monitor_factory.cc ${WEBRTC_ROOT}/rtc_base/physical_socket_server.cc ${WEBRTC_ROOT}/rtc_base/thread.cc)
target_include_directories(webrtc_rtc_base_threading PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_threading PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_threading PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_threading PUBLIC webrtc_rtc_base_win32 absl::algorithm_container absl::core_headers absl::cleanup absl::any_invocable absl::memory absl::strings webrtc_api_async_dns_resolver webrtc_api_function_view webrtc_api_location webrtc_api_refcountedbase webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_rtc_base_async_dns_resolver webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_event_tracer webrtc_rtc_base_ip_address webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_network_constants webrtc_rtc_base_null_socket_server webrtc_rtc_base_platform_thread webrtc_rtc_base_platform_thread_types webrtc_rtc_base_refcount webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_socket webrtc_rtc_base_socket_address webrtc_rtc_base_socket_server webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_rtc_export webrtc_rtc_base_third_party_sigslot_sigslot webrtc_system_wrappers_field_trial )

# rtc_base:timestamp_aligner
add_library(webrtc_rtc_base_timestamp_aligner ${WEBRTC_ROOT}/rtc_base/timestamp_aligner.cc)
target_include_directories(webrtc_rtc_base_timestamp_aligner PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_timestamp_aligner PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_timestamp_aligner PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_timestamp_aligner PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_timeutils webrtc_rtc_base_system_rtc_export )

# rtc_base:timeutils
add_library(webrtc_rtc_base_timeutils ${WEBRTC_ROOT}/rtc_base/system_time.cc ${WEBRTC_ROOT}/rtc_base/time_utils.cc)
target_include_directories(webrtc_rtc_base_timeutils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_timeutils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_timeutils PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_timeutils PUBLIC webrtc_rtc_base_win32 webrtc_rtc_base_checks webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_system_rtc_export winmm::winmm)

# rtc_base:type_traits
add_library(webrtc_rtc_base_type_traits INTERFACE)
target_include_directories(webrtc_rtc_base_type_traits INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:unique_id_generator
add_library(webrtc_rtc_base_unique_id_generator ${WEBRTC_ROOT}/rtc_base/unique_id_generator.cc)
target_include_directories(webrtc_rtc_base_unique_id_generator PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_unique_id_generator PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_unique_id_generator PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_unique_id_generator PUBLIC absl::strings webrtc_api_array_view webrtc_api_sequence_checker webrtc_rtc_base_ssl webrtc_rtc_base_stringutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address )

# rtc_base/units:unit_base
add_library(webrtc_rtc_base_units_unit_base INTERFACE)
target_link_libraries(webrtc_rtc_base_units_unit_base INTERFACE webrtc_rtc_base_checks webrtc_rtc_base_divide_round webrtc_rtc_base_safe_conversions )
target_include_directories(webrtc_rtc_base_units_unit_base INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:untyped_function
add_library(webrtc_rtc_base_untyped_function INTERFACE)
target_link_libraries(webrtc_rtc_base_untyped_function INTERFACE webrtc_rtc_base_system_assume )
target_include_directories(webrtc_rtc_base_untyped_function INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base:weak_ptr
add_library(webrtc_rtc_base_weak_ptr ${WEBRTC_ROOT}/rtc_base/weak_ptr.cc)
target_include_directories(webrtc_rtc_base_weak_ptr PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_weak_ptr PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_weak_ptr PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_weak_ptr PUBLIC webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_rtc_base_refcount webrtc_rtc_base_system_no_unique_address )

# rtc_base:win32
add_library(webrtc_rtc_base_win32 ${WEBRTC_ROOT}/rtc_base/win32.cc)
target_include_directories(webrtc_rtc_base_win32 PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_win32 PRIVATE RTC_ENABLE_VP9 RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_WIN _CRT_NONSTDC_NO_DEPRECATE)
target_compile_options(webrtc_rtc_base_win32 PRIVATE  -fno-rtti)
target_link_libraries(webrtc_rtc_base_win32 PUBLIC webrtc_rtc_base_byte_order webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_stringutils crypt32::crypt32 iphlpapi::iphlpapi secur32::secur32)

# rtc_base:win32_socket_init
add_library(webrtc_rtc_base_win32_socket_init INTERFACE)
target_link_libraries(webrtc_rtc_base_win32_socket_init INTERFACE webrtc_rtc_base_win32 )
target_include_directories(webrtc_rtc_base_win32_socket_init INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# rtc_base/win:scoped_com_initializer
add_library(webrtc_rtc_base_win_scoped_com_initializer ${WEBRTC_ROOT}/rtc_base/win/scoped_com_initializer.cc)
target_include_directories(webrtc_rtc_base_win_scoped_com_initializer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_win_scoped_com_initializer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_win_scoped_com_initializer PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_win_scoped_com_initializer PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_logging )

# rtc_base/win:windows_version
add_library(webrtc_rtc_base_win_windows_version ${WEBRTC_ROOT}/rtc_base/win/windows_version.cc)
target_include_directories(webrtc_rtc_base_win_windows_version PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_win_windows_version PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_win_windows_version PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_win_windows_version PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_stringutils )

# rtc_base:zero_memory
add_library(webrtc_rtc_base_zero_memory ${WEBRTC_ROOT}/rtc_base/zero_memory.cc)
target_include_directories(webrtc_rtc_base_zero_memory PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_rtc_base_zero_memory PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_rtc_base_zero_memory PRIVATE -fno-rtti )
target_link_libraries(webrtc_rtc_base_zero_memory PUBLIC webrtc_api_array_view webrtc_rtc_base_checks )

# stats:rtc_stats
add_library(webrtc_stats_rtc_stats ${WEBRTC_ROOT}/stats/rtc_stats.cc ${WEBRTC_ROOT}/stats/rtc_stats_report.cc ${WEBRTC_ROOT}/stats/rtcstats_objects.cc)
target_include_directories(webrtc_stats_rtc_stats PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_stats_rtc_stats PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_stats_rtc_stats PRIVATE -fno-rtti )
target_link_libraries(webrtc_stats_rtc_stats PUBLIC webrtc_api_rtc_stats_api webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_stringutils )

# stats
add_library(webrtc_stats_stats INTERFACE)
target_link_libraries(webrtc_stats_stats INTERFACE webrtc_stats_rtc_stats )
target_include_directories(webrtc_stats_stats INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# system_wrappers:denormal_disabler
add_library(webrtc_system_wrappers_denormal_disabler ${WEBRTC_ROOT}/system_wrappers/source/denormal_disabler.cc)
target_include_directories(webrtc_system_wrappers_denormal_disabler PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_system_wrappers_denormal_disabler PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_system_wrappers_denormal_disabler PRIVATE -fno-rtti )
target_link_libraries(webrtc_system_wrappers_denormal_disabler PUBLIC webrtc_rtc_base_checks webrtc_rtc_base_system_arch )

# system_wrappers:field_trial
add_library(webrtc_system_wrappers_field_trial ${WEBRTC_ROOT}/system_wrappers/source/field_trial.cc)
target_include_directories(webrtc_system_wrappers_field_trial PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_system_wrappers_field_trial PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_system_wrappers_field_trial PRIVATE -fno-rtti )
target_link_libraries(webrtc_system_wrappers_field_trial PUBLIC absl::algorithm_container absl::strings webrtc_experiments_registered_field_trials webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_stringutils webrtc_rtc_base_containers_flat_set )

# system_wrappers:metrics
add_library(webrtc_system_wrappers_metrics ${WEBRTC_ROOT}/system_wrappers/source/metrics.cc)
target_include_directories(webrtc_system_wrappers_metrics PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_system_wrappers_metrics PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_system_wrappers_metrics PRIVATE -fno-rtti )
target_link_libraries(webrtc_system_wrappers_metrics PUBLIC absl::strings webrtc_rtc_base_checks webrtc_rtc_base_macromagic webrtc_rtc_base_stringutils webrtc_rtc_base_synchronization_mutex )

# system_wrappers
add_library(webrtc_system_wrappers_system_wrappers ${WEBRTC_ROOT}/system_wrappers/source/clock.cc ${WEBRTC_ROOT}/system_wrappers/source/cpu_features.cc ${WEBRTC_ROOT}/system_wrappers/source/cpu_info.cc ${WEBRTC_ROOT}/system_wrappers/source/rtp_to_ntp_estimator.cc ${WEBRTC_ROOT}/system_wrappers/source/sleep.cc)
target_include_directories(webrtc_system_wrappers_system_wrappers PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_system_wrappers_system_wrappers PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_system_wrappers_system_wrappers PRIVATE -fno-rtti )
target_link_libraries(webrtc_system_wrappers_system_wrappers PUBLIC webrtc_rtc_base_win32 absl::optional webrtc_api_array_view webrtc_api_units_timestamp webrtc_modules_module_api_public webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_arch webrtc_rtc_base_system_rtc_export webrtc_system_wrappers_field_trial winmm::winmm)

# test:audio_codec_mocks
add_library(webrtc_test_audio_codec_mocks ${WEBRTC_ROOT}/test/mock_audio_decoder.cc ${WEBRTC_ROOT}/test/mock_audio_encoder.cc)
target_include_directories(webrtc_test_audio_codec_mocks PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_audio_codec_mocks PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_test_audio_codec_mocks PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_audio_codec_mocks PUBLIC webrtc_api_array_view webrtc_api_make_ref_counted webrtc_api_scoped_refptr webrtc_api_audio_codecs_audio_codecs_api webrtc_api_audio_codecs_builtin_audio_decoder_factory webrtc_test_test_support )

# test:create_frame_generator_capturer
add_library(webrtc_test_create_frame_generator_capturer ${WEBRTC_ROOT}/test/create_frame_generator_capturer.cc)
target_include_directories(webrtc_test_create_frame_generator_capturer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_create_frame_generator_capturer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_create_frame_generator_capturer PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_create_frame_generator_capturer PUBLIC absl::strings absl::optional webrtc_api_create_frame_generator webrtc_api_frame_generator_api webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_rtc_base_checks webrtc_system_wrappers_system_wrappers webrtc_test_fileutils webrtc_test_frame_generator_capturer )

# test:explicit_key_value_config
add_library(webrtc_test_explicit_key_value_config ${WEBRTC_ROOT}/test/explicit_key_value_config.cc)
target_include_directories(webrtc_test_explicit_key_value_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_explicit_key_value_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_explicit_key_value_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_explicit_key_value_config PUBLIC absl::strings webrtc_api_field_trials_registry webrtc_rtc_base_checks )

# test:fake_video_codecs
add_library(webrtc_test_fake_video_codecs ${WEBRTC_ROOT}/test/configurable_frame_size_encoder.cc ${WEBRTC_ROOT}/test/fake_decoder.cc ${WEBRTC_ROOT}/test/fake_encoder.cc ${WEBRTC_ROOT}/test/fake_vp8_decoder.cc ${WEBRTC_ROOT}/test/fake_vp8_encoder.cc)
target_include_directories(webrtc_test_fake_video_codecs PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_fake_video_codecs PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_fake_video_codecs PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_fake_video_codecs PUBLIC absl::strings absl::optional webrtc_api_fec_controller_api webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_video_encoded_image webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_api_video_codecs_vp8_temporal_layers_factory webrtc_modules_video_coding_codec_globals_headers webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_system_wrappers_system_wrappers )

# test:field_trial
add_library(webrtc_test_field_trial ${WEBRTC_ROOT}/test/field_trial.cc)
target_include_directories(webrtc_test_field_trial PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_field_trial PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_field_trial PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_field_trial PUBLIC absl::strings webrtc_rtc_base_checks webrtc_system_wrappers_field_trial )

# test:fileutils
add_library(webrtc_test_fileutils ${WEBRTC_ROOT}/test/testsupport/file_utils.cc)
target_include_directories(webrtc_test_fileutils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_fileutils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_fileutils PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_fileutils PUBLIC webrtc_rtc_base_win32 absl::core_headers absl::strings absl::optional webrtc_rtc_base_checks webrtc_rtc_base_stringutils webrtc_test_fileutils_override_api emulator_test_overrides )

# test:fileutils_override_api
add_library(webrtc_test_fileutils_override_api INTERFACE)
target_link_libraries(webrtc_test_fileutils_override_api INTERFACE absl::strings )
target_include_directories(webrtc_test_fileutils_override_api INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# test:frame_generator_capturer
add_library(webrtc_test_frame_generator_capturer ${WEBRTC_ROOT}/test/frame_generator_capturer.cc)
target_include_directories(webrtc_test_frame_generator_capturer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_frame_generator_capturer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_frame_generator_capturer PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_frame_generator_capturer PUBLIC absl::strings absl::optional webrtc_api_frame_generator_api webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_test_test_video_capturer )

# test:frame_generator_impl
add_library(webrtc_test_frame_generator_impl ${WEBRTC_ROOT}/test/frame_generator.cc ${WEBRTC_ROOT}/test/testsupport/ivf_video_frame_generator.cc)
target_include_directories(webrtc_test_frame_generator_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_frame_generator_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_frame_generator_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_frame_generator_impl PUBLIC absl::optional webrtc_api_frame_generator_api webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_video_frame_i010 webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_h264 webrtc_modules_video_coding_webrtc_vp8 webrtc_modules_video_coding_webrtc_vp9 webrtc_modules_video_coding_codecs_av1_dav1d_decoder webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_logging webrtc_rtc_base_random webrtc_rtc_base_rtc_event webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_file_wrapper webrtc_system_wrappers_system_wrappers webrtc_test_frame_utils )

# test:frame_utils
add_library(webrtc_test_frame_utils ${WEBRTC_ROOT}/test/frame_utils.cc)
target_include_directories(webrtc_test_frame_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_frame_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_frame_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_frame_utils PUBLIC webrtc_api_scoped_refptr webrtc_api_video_video_frame )

# test/pc/sctp:fake_sctp_transport
add_library(webrtc_test_pc_sctp_fake_sctp_transport INTERFACE)
target_link_libraries(webrtc_test_pc_sctp_fake_sctp_transport INTERFACE webrtc_api_transport_sctp_transport_factory_interface webrtc_media_rtc_data_sctp_transport_internal )
target_include_directories(webrtc_test_pc_sctp_fake_sctp_transport INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# test:perf_test
add_library(webrtc_test_perf_test ${WEBRTC_ROOT}/test/testsupport/perf_test.cc ${WEBRTC_ROOT}/test/testsupport/perf_test_histogram_writer.cc)
target_include_directories(webrtc_test_perf_test PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_perf_test PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_perf_test PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_perf_test PUBLIC absl::strings absl::optional webrtc_catapult_histogram webrtc_catapult_reserved_infos webrtc_api_array_view webrtc_api_numerics_numerics webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_logging webrtc_rtc_base_rtc_numerics webrtc_rtc_base_stringutils webrtc_rtc_base_synchronization_mutex webrtc_test_fileutils )

# test:resources_dir_flag
add_library(webrtc_test_resources_dir_flag ${WEBRTC_ROOT}/test/testsupport/resources_dir_flag.cc)
target_include_directories(webrtc_test_resources_dir_flag PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_resources_dir_flag PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_resources_dir_flag PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_resources_dir_flag PUBLIC absl::flags )

# test:rtc_expect_death
add_library(webrtc_test_rtc_expect_death INTERFACE)
target_link_libraries(webrtc_test_rtc_expect_death INTERFACE webrtc_test_test_support )
target_include_directories(webrtc_test_rtc_expect_death INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# test:rtp_test_utils
add_library(webrtc_test_rtp_test_utils ${WEBRTC_ROOT}/test/rtcp_packet_parser.cc ${WEBRTC_ROOT}/test/rtp_file_reader.cc ${WEBRTC_ROOT}/test/rtp_file_writer.cc)
target_include_directories(webrtc_test_rtp_test_utils PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_rtp_test_utils PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_rtp_test_utils PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_rtp_test_utils PUBLIC absl::strings absl::optional webrtc_api_array_view webrtc_api_rtp_parameters webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_arch )

# test:run_loop
add_library(webrtc_test_run_loop ${WEBRTC_ROOT}/test/run_loop.cc)
target_include_directories(webrtc_test_run_loop PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_run_loop PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_run_loop PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_run_loop PUBLIC absl::any_invocable webrtc_api_task_queue_task_queue webrtc_rtc_base_threading webrtc_rtc_base_timeutils )

# test:scoped_key_value_config
add_library(webrtc_test_scoped_key_value_config ${WEBRTC_ROOT}/test/scoped_key_value_config.cc)
target_include_directories(webrtc_test_scoped_key_value_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_scoped_key_value_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_scoped_key_value_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_scoped_key_value_config PUBLIC absl::strings webrtc_api_field_trials_registry webrtc_rtc_base_checks webrtc_system_wrappers_field_trial webrtc_test_field_trial )

# test:test_flags
add_library(webrtc_test_test_flags ${WEBRTC_ROOT}/test/test_flags.cc)
target_include_directories(webrtc_test_test_flags PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_test_flags PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_test_flags PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_test_flags PUBLIC absl::flags )

# test:test_main
add_library(webrtc_test_test_main ${WEBRTC_ROOT}/test/test_main.cc)
target_include_directories(webrtc_test_test_main PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_test_main PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_test_test_main PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_test_main PUBLIC absl::failure_signal_handler absl::debugging absl::flags_parse webrtc_test_test_main_lib webrtc_test_test_support )

# test:test_main_lib
add_library(webrtc_test_test_main_lib ${WEBRTC_ROOT}/test/test_main_lib.cc)
target_include_directories(webrtc_test_test_main_lib PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_test_main_lib PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0 WEBRTC_UNIT_TEST)
target_compile_options(webrtc_test_test_main_lib PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_test_main_lib PUBLIC webrtc_rtc_base_win32_socket_init absl::flags absl::memory absl::strings absl::optional webrtc_api_test_metrics_chrome_perf_dashboard_metrics_exporter webrtc_api_test_metrics_global_metrics_logger_and_exporter webrtc_api_test_metrics_metrics_exporter webrtc_api_test_metrics_metrics_set_proto_file_exporter webrtc_api_test_metrics_print_result_proxy_metrics_exporter webrtc_api_test_metrics_stdout_metrics_exporter webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_ssl webrtc_rtc_base_threading webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics webrtc_test_field_trial webrtc_test_perf_test webrtc_test_resources_dir_flag webrtc_test_test_flags webrtc_test_test_support )

# test:test_support
add_library(webrtc_test_test_support INTERFACE)
target_link_libraries(webrtc_test_test_support INTERFACE gmock gtest webrtc_rtc_base_ignore_wundef )
target_include_directories(webrtc_test_test_support INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# test:test_video_capturer
add_library(webrtc_test_test_video_capturer ${WEBRTC_ROOT}/test/test_video_capturer.cc)
target_include_directories(webrtc_test_test_video_capturer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_test_video_capturer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_test_video_capturer PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_test_video_capturer PUBLIC webrtc_api_scoped_refptr webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_media_rtc_media_base webrtc_rtc_base_synchronization_mutex )

# test/time_controller
add_library(webrtc_test_time_controller_time_controller ${WEBRTC_ROOT}/test/time_controller/external_time_controller.cc ${WEBRTC_ROOT}/test/time_controller/real_time_controller.cc ${WEBRTC_ROOT}/test/time_controller/simulated_task_queue.cc ${WEBRTC_ROOT}/test/time_controller/simulated_thread.cc ${WEBRTC_ROOT}/test/time_controller/simulated_time_controller.cc)
target_include_directories(webrtc_test_time_controller_time_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_time_controller_time_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_time_controller_time_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_time_controller_time_controller PUBLIC absl::any_invocable absl::strings webrtc_api_field_trials_view webrtc_api_sequence_checker webrtc_api_time_controller webrtc_api_task_queue_task_queue webrtc_api_task_queue_default_task_queue_factory webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_null_socket_server webrtc_rtc_base_platform_thread_types webrtc_rtc_base_rtc_base_tests_utils webrtc_rtc_base_rtc_event webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_synchronization_yield_policy webrtc_system_wrappers_system_wrappers )

# test:video_test_common
add_library(webrtc_test_video_test_common ${WEBRTC_ROOT}/test/fake_texture_frame.cc ${WEBRTC_ROOT}/test/frame_forwarder.cc ${WEBRTC_ROOT}/test/mappable_native_buffer.cc)
target_include_directories(webrtc_test_video_test_common PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_test_video_test_common PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_test_video_test_common PRIVATE -fno-rtti )
target_link_libraries(webrtc_test_video_test_common PUBLIC absl::algorithm_container absl::strings webrtc_api_array_view webrtc_api_create_frame_generator webrtc_api_frame_generator_api webrtc_api_scoped_refptr webrtc_api_task_queue_task_queue webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_codecs_video_codecs_api webrtc_common_video_common_video webrtc_media_rtc_media_base webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_logging webrtc_rtc_base_refcount webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_test_create_frame_generator_capturer webrtc_test_fileutils webrtc_test_frame_utils webrtc_test_scoped_key_value_config webrtc_test_test_video_capturer )

# video/adaptation:video_adaptation
add_library(webrtc_video_adaptation_video_adaptation ${WEBRTC_ROOT}/video/adaptation/balanced_constraint.cc ${WEBRTC_ROOT}/video/adaptation/bandwidth_quality_scaler_resource.cc ${WEBRTC_ROOT}/video/adaptation/bitrate_constraint.cc ${WEBRTC_ROOT}/video/adaptation/encode_usage_resource.cc ${WEBRTC_ROOT}/video/adaptation/overuse_frame_detector.cc ${WEBRTC_ROOT}/video/adaptation/pixel_limit_resource.cc ${WEBRTC_ROOT}/video/adaptation/quality_rampup_experiment_helper.cc ${WEBRTC_ROOT}/video/adaptation/quality_scaler_resource.cc ${WEBRTC_ROOT}/video/adaptation/video_stream_encoder_resource.cc ${WEBRTC_ROOT}/video/adaptation/video_stream_encoder_resource_manager.cc)
target_include_directories(webrtc_video_adaptation_video_adaptation PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_adaptation_video_adaptation PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_adaptation_video_adaptation PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_adaptation_video_adaptation PUBLIC absl::algorithm_container absl::core_headers absl::optional webrtc_api_field_trials_view webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_adaptation_resource_adaptation_api webrtc_api_task_queue_task_queue webrtc_api_units_data_rate webrtc_api_units_time_delta webrtc_api_video_video_adaptation webrtc_api_video_video_frame webrtc_api_video_video_stream_encoder webrtc_api_video_codecs_video_codecs_api webrtc_call_adaptation_resource_adaptation webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_svc_scalability_mode_util webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_refcount webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_numerics webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_balanced_degradation_settings webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_quality_rampup_experiment webrtc_rtc_base_experiments_quality_scaler_settings webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_video_video_stream_encoder_interface webrtc_video_config_encoder_config )

# video/config:encoder_config
add_library(webrtc_video_config_encoder_config ${WEBRTC_ROOT}/video/config/video_encoder_config.cc)
target_include_directories(webrtc_video_config_encoder_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_config_encoder_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_config_encoder_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_config_encoder_config PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_scoped_refptr webrtc_api_video_resolution webrtc_api_video_codecs_scalability_mode webrtc_api_video_codecs_video_codecs_api webrtc_rtc_base_checks webrtc_rtc_base_refcount webrtc_rtc_base_stringutils )

# video/config:streams_config
add_library(webrtc_video_config_streams_config ${WEBRTC_ROOT}/video/config/encoder_stream_factory.cc ${WEBRTC_ROOT}/video/config/simulcast.cc)
target_include_directories(webrtc_video_config_streams_config PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_config_streams_config PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_config_streams_config PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_config_streams_config PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_field_trials_view webrtc_api_transport_field_trial_based_config webrtc_api_units_data_rate webrtc_api_video_video_codec_constants webrtc_api_video_codecs_video_codecs_api webrtc_call_adaptation_resource_adaptation webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_vp9_helpers webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_min_video_bitrate_experiment webrtc_rtc_base_experiments_normalize_simulcast_size_experiment webrtc_rtc_base_experiments_rate_control_settings webrtc_video_config_encoder_config )

# video:decode_synchronizer
add_library(webrtc_video_decode_synchronizer ${WEBRTC_ROOT}/video/decode_synchronizer.cc)
target_include_directories(webrtc_video_decode_synchronizer PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_decode_synchronizer PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_decode_synchronizer PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_decode_synchronizer PUBLIC absl::optional webrtc_api_sequence_checker webrtc_api_metronome_metronome webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_video_frame_decode_scheduler webrtc_video_frame_decode_timing )

# video:frame_cadence_adapter
add_library(webrtc_video_frame_cadence_adapter ${WEBRTC_ROOT}/video/frame_cadence_adapter.cc)
target_include_directories(webrtc_video_frame_cadence_adapter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_frame_cadence_adapter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_frame_cadence_adapter PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_frame_cadence_adapter PUBLIC absl::algorithm_container absl::core_headers webrtc_api_field_trials_view webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_video_frame webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_rate_statistics webrtc_rtc_base_timeutils webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_system_unused webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics )

# video:frame_decode_scheduler
add_library(webrtc_video_frame_decode_scheduler INTERFACE)
target_link_libraries(webrtc_video_frame_decode_scheduler INTERFACE absl::any_invocable absl::optional webrtc_api_units_timestamp webrtc_video_frame_decode_timing )
target_include_directories(webrtc_video_frame_decode_scheduler INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})

# video:frame_decode_timing
add_library(webrtc_video_frame_decode_timing ${WEBRTC_ROOT}/video/frame_decode_timing.cc)
target_include_directories(webrtc_video_frame_decode_timing PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_frame_decode_timing PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_frame_decode_timing PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_frame_decode_timing PUBLIC absl::optional webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_time_delta webrtc_modules_video_coding_timing_timing_module webrtc_rtc_base_logging webrtc_system_wrappers_system_wrappers )

# video:frame_dumping_decoder
add_library(webrtc_video_frame_dumping_decoder ${WEBRTC_ROOT}/video/frame_dumping_decoder.cc)
target_include_directories(webrtc_video_frame_dumping_decoder PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_frame_dumping_decoder PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_frame_dumping_decoder PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_frame_dumping_decoder PUBLIC webrtc_api_video_encoded_frame webrtc_api_video_encoded_image webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_video_coding webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_system_file_wrapper )

# video:frame_dumping_encoder
add_library(webrtc_video_frame_dumping_encoder ${WEBRTC_ROOT}/video/frame_dumping_encoder.cc)
target_include_directories(webrtc_video_frame_dumping_encoder PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_frame_dumping_encoder PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_frame_dumping_encoder PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_frame_dumping_encoder PUBLIC absl::algorithm_container webrtc_api_field_trials_view webrtc_api_sequence_checker webrtc_api_video_encoded_frame webrtc_api_video_encoded_image webrtc_api_video_video_frame webrtc_api_video_codecs_video_codecs_api webrtc_modules_video_coding_video_coding webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_system_file_wrapper )

# video/render:incoming_video_stream
add_library(webrtc_video_render_incoming_video_stream ${WEBRTC_ROOT}/video/render/incoming_video_stream.cc)
target_include_directories(webrtc_video_render_incoming_video_stream PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_render_incoming_video_stream PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_render_incoming_video_stream PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_render_incoming_video_stream PUBLIC absl::optional webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_video_video_frame webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_rtc_task_queue webrtc_video_render_video_render_frames )

# video/render:video_render_frames
add_library(webrtc_video_render_video_render_frames ${WEBRTC_ROOT}/video/render/video_render_frames.cc)
target_include_directories(webrtc_video_render_video_render_frames PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_render_video_render_frames PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_render_video_render_frames PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_render_video_render_frames PUBLIC absl::optional webrtc_api_video_video_frame webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_timeutils webrtc_system_wrappers_metrics )

# video:task_queue_frame_decode_scheduler
add_library(webrtc_video_task_queue_frame_decode_scheduler ${WEBRTC_ROOT}/video/task_queue_frame_decode_scheduler.cc)
target_include_directories(webrtc_video_task_queue_frame_decode_scheduler PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_task_queue_frame_decode_scheduler PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_task_queue_frame_decode_scheduler PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_task_queue_frame_decode_scheduler PUBLIC absl::optional webrtc_api_sequence_checker webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_timestamp webrtc_rtc_base_checks webrtc_system_wrappers_system_wrappers webrtc_video_frame_decode_scheduler webrtc_video_frame_decode_timing )

# video:unique_timestamp_counter
add_library(webrtc_video_unique_timestamp_counter ${WEBRTC_ROOT}/video/unique_timestamp_counter.cc)
target_include_directories(webrtc_video_unique_timestamp_counter PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_unique_timestamp_counter PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_unique_timestamp_counter PRIVATE -fno-rtti )

# video
add_library(webrtc_video_video ${WEBRTC_ROOT}/video/buffered_frame_decryptor.cc ${WEBRTC_ROOT}/video/call_stats2.cc ${WEBRTC_ROOT}/video/encoder_rtcp_feedback.cc ${WEBRTC_ROOT}/video/quality_limitation_reason_tracker.cc ${WEBRTC_ROOT}/video/receive_statistics_proxy.cc ${WEBRTC_ROOT}/video/report_block_stats.cc ${WEBRTC_ROOT}/video/rtp_streams_synchronizer2.cc ${WEBRTC_ROOT}/video/rtp_video_stream_receiver2.cc ${WEBRTC_ROOT}/video/send_delay_stats.cc ${WEBRTC_ROOT}/video/send_statistics_proxy.cc ${WEBRTC_ROOT}/video/stats_counter.cc ${WEBRTC_ROOT}/video/stream_synchronization.cc ${WEBRTC_ROOT}/video/transport_adapter.cc ${WEBRTC_ROOT}/video/video_quality_observer2.cc ${WEBRTC_ROOT}/video/video_receive_stream2.cc ${WEBRTC_ROOT}/video/video_send_stream.cc ${WEBRTC_ROOT}/video/video_send_stream_impl.cc ${WEBRTC_ROOT}/video/video_stream_decoder2.cc)
target_include_directories(webrtc_video_video PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_video PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_video PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_video PUBLIC absl::algorithm_container absl::memory absl::strings absl::optional webrtc_api_array_view webrtc_api_fec_controller_api webrtc_api_field_trials_view webrtc_api_frame_transformer_interface webrtc_api_rtp_parameters webrtc_api_scoped_refptr webrtc_api_sequence_checker webrtc_api_transport_api webrtc_api_crypto_frame_decryptor_interface webrtc_api_crypto_options webrtc_api_environment_environment webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_data_rate webrtc_api_units_frequency webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_encoded_image webrtc_api_video_recordable_encoded_frame webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_rtp_headers webrtc_api_video_video_stream_encoder webrtc_api_video_codecs_video_codecs_api webrtc_call_bitrate_allocator webrtc_call_call_interfaces webrtc_call_rtp_interfaces webrtc_call_rtp_receiver webrtc_call_rtp_sender webrtc_call_video_stream_api webrtc_common_video_common_video webrtc_media_media_constants webrtc_media_rtc_media_base webrtc_modules_module_api webrtc_modules_module_api_public webrtc_modules_pacing_pacing webrtc_modules_remote_bitrate_estimator_remote_bitrate_estimator webrtc_modules_rtp_rtcp_rtp_rtcp webrtc_modules_rtp_rtcp_rtp_rtcp_format webrtc_modules_rtp_rtcp_rtp_video_header webrtc_modules_video_coding_video_coding webrtc_modules_video_coding_nack_requester webrtc_modules_video_coding_packet_buffer webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_vp9_helpers webrtc_modules_video_coding_timing_timing_module webrtc_rtc_base_checks webrtc_rtc_base_event_tracer webrtc_rtc_base_histogram_percentile_counter webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_mod_ops webrtc_rtc_base_moving_max_counter webrtc_rtc_base_platform_thread webrtc_rtc_base_rate_statistics webrtc_rtc_base_rate_tracker webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_numerics webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_sample_counter webrtc_rtc_base_stringutils webrtc_rtc_base_threading webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_alr_experiment webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_keyframe_interval_settings_experiment webrtc_rtc_base_experiments_min_video_bitrate_experiment webrtc_rtc_base_experiments_normalize_simulcast_size_experiment webrtc_rtc_base_experiments_rate_control_settings webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics webrtc_video_frame_cadence_adapter webrtc_video_frame_dumping_decoder webrtc_video_task_queue_frame_decode_scheduler webrtc_video_unique_timestamp_counter webrtc_video_video_stream_buffer_controller webrtc_video_video_stream_encoder_impl webrtc_video_video_stream_encoder_interface webrtc_video_adaptation_video_adaptation webrtc_video_config_encoder_config webrtc_video_render_incoming_video_stream )

# video:video_receive_stream_timeout_tracker
add_library(webrtc_video_video_receive_stream_timeout_tracker ${WEBRTC_ROOT}/video/video_receive_stream_timeout_tracker.cc)
target_include_directories(webrtc_video_video_receive_stream_timeout_tracker PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_video_receive_stream_timeout_tracker PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_video_receive_stream_timeout_tracker PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_video_receive_stream_timeout_tracker PUBLIC webrtc_api_task_queue_task_queue webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_rtc_base_logging webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers )

# video:video_stream_buffer_controller
add_library(webrtc_video_video_stream_buffer_controller ${WEBRTC_ROOT}/video/video_stream_buffer_controller.cc)
target_include_directories(webrtc_video_video_stream_buffer_controller PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_video_stream_buffer_controller PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_video_stream_buffer_controller PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_video_stream_buffer_controller PUBLIC absl::core_headers absl::bind_front absl::optional webrtc_api_field_trials_view webrtc_api_sequence_checker webrtc_api_metronome_metronome webrtc_api_task_queue_task_queue webrtc_api_units_data_size webrtc_api_units_time_delta webrtc_api_units_timestamp webrtc_api_video_encoded_frame webrtc_api_video_frame_buffer webrtc_api_video_video_rtp_headers webrtc_modules_video_coding_video_coding webrtc_modules_video_coding_frame_helpers webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_timing_inter_frame_delay_variation_calculator webrtc_modules_video_coding_timing_jitter_estimator webrtc_modules_video_coding_timing_timing_module webrtc_rtc_base_checks webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_experiments_rtt_mult_experiment webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_video_decode_synchronizer webrtc_video_frame_decode_scheduler webrtc_video_frame_decode_timing webrtc_video_task_queue_frame_decode_scheduler webrtc_video_video_receive_stream_timeout_tracker )

# video:video_stream_encoder_impl
add_library(webrtc_video_video_stream_encoder_impl ${WEBRTC_ROOT}/video/alignment_adjuster.cc ${WEBRTC_ROOT}/video/encoder_bitrate_adjuster.cc ${WEBRTC_ROOT}/video/encoder_overshoot_detector.cc ${WEBRTC_ROOT}/video/frame_encode_metadata_writer.cc ${WEBRTC_ROOT}/video/video_source_sink_controller.cc ${WEBRTC_ROOT}/video/video_stream_encoder.cc)
target_include_directories(webrtc_video_video_stream_encoder_impl PRIVATE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
target_compile_definitions(webrtc_video_video_stream_encoder_impl PRIVATE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0)
target_compile_options(webrtc_video_video_stream_encoder_impl PRIVATE -fno-rtti )
target_link_libraries(webrtc_video_video_stream_encoder_impl PUBLIC absl::algorithm_container absl::core_headers absl::cleanup absl::algorithm_container absl::optional webrtc_api_field_trials_view webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_sequence_checker webrtc_api_adaptation_resource_adaptation_api webrtc_api_task_queue_task_queue webrtc_api_task_queue_pending_task_safety_flag webrtc_api_units_data_rate webrtc_api_video_encoded_image webrtc_api_video_render_resolution webrtc_api_video_video_adaptation webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_bitrate_allocator_factory webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_layers_allocation webrtc_api_video_video_rtp_headers webrtc_api_video_video_stream_encoder webrtc_api_video_codecs_video_codecs_api webrtc_call_adaptation_resource_adaptation webrtc_common_video_common_video webrtc_media_media_channel webrtc_media_rtc_media_base webrtc_modules_module_api_public webrtc_modules_video_coding_video_coding webrtc_modules_video_coding_video_codec_interface webrtc_modules_video_coding_video_coding_utility webrtc_modules_video_coding_webrtc_vp9_helpers webrtc_modules_video_coding_svc_scalability_mode_util webrtc_modules_video_coding_svc_scalability_structures webrtc_modules_video_coding_svc_svc_rate_allocator webrtc_rtc_base_checks webrtc_rtc_base_criticalsection webrtc_rtc_base_event_tracer webrtc_rtc_base_logging webrtc_rtc_base_macromagic webrtc_rtc_base_race_checker webrtc_rtc_base_rate_statistics webrtc_rtc_base_refcount webrtc_rtc_base_rtc_event webrtc_rtc_base_rtc_numerics webrtc_rtc_base_rtc_task_queue webrtc_rtc_base_safe_conversions webrtc_rtc_base_stringutils webrtc_rtc_base_timeutils webrtc_rtc_base_experiments_balanced_degradation_settings webrtc_rtc_base_experiments_encoder_info_settings webrtc_rtc_base_experiments_field_trial_parser webrtc_rtc_base_experiments_quality_rampup_experiment webrtc_rtc_base_experiments_quality_scaler_settings webrtc_rtc_base_experiments_quality_scaling_experiment webrtc_rtc_base_experiments_rate_control_settings webrtc_rtc_base_synchronization_mutex webrtc_rtc_base_system_no_unique_address webrtc_rtc_base_task_utils_repeating_task webrtc_system_wrappers_system_wrappers webrtc_system_wrappers_field_trial webrtc_system_wrappers_metrics webrtc_video_frame_cadence_adapter webrtc_video_frame_dumping_encoder webrtc_video_video_stream_encoder_interface webrtc_video_adaptation_video_adaptation webrtc_video_config_encoder_config webrtc_video_config_streams_config )

# video:video_stream_encoder_interface
add_library(webrtc_video_video_stream_encoder_interface INTERFACE)
target_link_libraries(webrtc_video_video_stream_encoder_interface INTERFACE absl::optional webrtc_api_fec_controller_api webrtc_api_rtc_error webrtc_api_rtp_parameters webrtc_api_rtp_sender_interface webrtc_api_scoped_refptr webrtc_api_adaptation_resource_adaptation_api webrtc_api_units_data_rate webrtc_api_video_video_adaptation webrtc_api_video_video_bitrate_allocation webrtc_api_video_video_bitrate_allocator webrtc_api_video_video_codec_constants webrtc_api_video_video_frame webrtc_api_video_video_layers_allocation webrtc_api_video_codecs_video_codecs_api webrtc_video_config_encoder_config )
target_include_directories(webrtc_video_video_stream_encoder_interface INTERFACE ${WEBRTC_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
# Platform specific set of defines
add_library(webrtc_platform_defs INTERFACE)
target_compile_definitions(webrtc_platform_defs INTERFACE RTC_ENABLE_VP9 WEBRTC_WIN RTC_JNI_GENERATOR_LEGACY_SYMBOLS WEBRTC_ABSL_MUTEX WEBRTC_ENABLE_AVX2 WEBRTC_ENABLE_PROTOBUF=1 WEBRTC_HAVE_SCTP WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1 WEBRTC_STRICT_FIELD_TRIALS=0
)