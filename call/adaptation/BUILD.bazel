# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "resource_adaptation",
    srcs = [
        "adaptation_constraint.cc",
        "broadcast_resource_listener.cc",
        "degradation_preference_provider.cc",
        "encoder_settings.cc",
        "resource_adaptation_processor.cc",
        "resource_adaptation_processor_interface.cc",
        "video_source_restrictions.cc",
        "video_stream_adapter.cc",
        "video_stream_input_state.cc",
        "video_stream_input_state_provider.cc",
    ],
    hdrs = [
        "adaptation_constraint.h",
        "broadcast_resource_listener.h",
        "degradation_preference_provider.h",
        "encoder_settings.h",
        "resource_adaptation_processor.h",
        "resource_adaptation_processor_interface.h",
        "video_source_restrictions.h",
        "video_stream_adapter.h",
        "video_stream_input_state.h",
        "video_stream_input_state_provider.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:variant",
        "//api:field_trials_view",
        "//api:make_ref_counted",
        "//api:rtp_parameters",
        "//api:scoped_refptr",
        "//api:sequence_checker",
        "//api/adaptation:resource_adaptation_api",
        "//api/task_queue",
        "//api/video:video_adaptation",
        "//api/video:video_frame",
        "//api/video:video_stream_encoder",
        "//api/video_codecs:video_codecs_api",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding/svc:scalability_mode_util",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:refcount",
        "//rtc_base:safe_conversions",
        "//rtc_base:stringutils",
        "//rtc_base/experiments:balanced_degradation_settings",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/system:no_unique_address",
        "//video:video_stream_encoder_interface",
        "//video/config:encoder_config",
    ],
)

cc_library(
    name = "resource_adaptation_tests",
    testonly = 1,
    srcs = [
        "broadcast_resource_listener_unittest.cc",
        "resource_adaptation_processor_unittest.cc",
        "resource_unittest.cc",
        "video_source_restrictions_unittest.cc",
        "video_stream_adapter_unittest.cc",
        "video_stream_input_state_provider_unittest.cc",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:scoped_refptr",
        "//api/adaptation:resource_adaptation_api",
        "//api/task_queue",
        "//api/task_queue:default_task_queue_factory",
        "//api/video:video_adaptation",
        "//api/video_codecs:video_codecs_api",
        "//call/adaptation:resource_adaptation",
        "//call/adaptation:resource_adaptation_test_utilities",
        "//rtc_base:checks",
        "//rtc_base:gunit_helpers",
        "//rtc_base:rtc_event",
        "//rtc_base:stringutils",
        "//rtc_base:task_queue_for_test",
        "//rtc_base/synchronization:mutex",
        "//test:field_trial",
        "//test:rtc_expect_death",
        "//test:scoped_key_value_config",
        "//test:test_support",
        "//video/config:encoder_config",
    ],
)

cc_library(
    name = "resource_adaptation_test_utilities",
    testonly = 1,
    srcs = [
        "test/fake_adaptation_constraint.cc",
        "test/fake_frame_rate_provider.cc",
        "test/fake_resource.cc",
        "test/fake_video_stream_input_state_provider.cc",
    ],
    hdrs = [
        "test/fake_adaptation_constraint.h",
        "test/fake_frame_rate_provider.h",
        "test/fake_resource.h",
        "test/fake_video_stream_input_state_provider.h",
        "test/mock_resource_listener.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:make_ref_counted",
        "//api:scoped_refptr",
        "//api:sequence_checker",
        "//api/adaptation:resource_adaptation_api",
        "//api/task_queue",
        "//api/video:video_stream_encoder",
        "//call/adaptation:resource_adaptation",
        "//test:test_support",
        "//video:video_stream_encoder_interface",
        "//video/config:encoder_config",
    ],
)
