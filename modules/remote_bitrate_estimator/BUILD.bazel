# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "remote_bitrate_estimator",
    srcs = [
        "aimd_rate_control.cc",
        "bwe_defines.cc",
        "inter_arrival.cc",
        "overuse_detector.cc",
        "overuse_estimator.cc",
        "packet_arrival_map.cc",
        "remote_bitrate_estimator_abs_send_time.cc",
        "remote_bitrate_estimator_single_stream.cc",
        "remote_estimator_proxy.cc",
    ],
    hdrs = [
        "aimd_rate_control.h",
        "include/bwe_defines.h",
        "include/remote_bitrate_estimator.h",
        "inter_arrival.h",
        "overuse_detector.h",
        "overuse_estimator.h",
        "packet_arrival_map.h",
        "remote_bitrate_estimator_abs_send_time.h",
        "remote_bitrate_estimator_single_stream.h",
        "remote_estimator_proxy.h",
        "test/bwe_test_logging.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/base:nullability",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api:rtp_headers",
        "//api/environment",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//modules:module_api",
        "//modules:module_api_public",
        "//modules/congestion_controller/goog_cc:link_capacity_estimator",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:bitrate_tracker",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:rtc_numerics",
        "//rtc_base:safe_minmax",
        "//rtc_base:stringutils",
        "//rtc_base/experiments:field_trial_parser",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers",
        "//system_wrappers:metrics",
    ],
)

cc_library(
    name = "bwe_rtp",
    testonly = 1,
    srcs = ["tools/bwe_rtp.cc"],
    hdrs = ["tools/bwe_rtp.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//test:rtp_test_utils",
    ],
)

cc_binary(
    name = "rtp_to_text",
    testonly = 1,
    srcs = ["tools/rtp_to_text.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//modules/remote_bitrate_estimator:bwe_rtp",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:macromagic",
        "//rtc_base:stringutils",
        "//test:rtp_test_utils",
    ],
)

cc_library(
    name = "remote_bitrate_estimator_unittests",
    testonly = 1,
    srcs = [
        "aimd_rate_control_unittest.cc",
        "inter_arrival_unittest.cc",
        "overuse_detector_unittest.cc",
        "packet_arrival_map_test.cc",
        "remote_bitrate_estimator_abs_send_time_unittest.cc",
        "remote_bitrate_estimator_single_stream_unittest.cc",
        "remote_bitrate_estimator_unittest_helper.cc",
        "remote_estimator_proxy_unittest.cc",
    ],
    hdrs = ["remote_bitrate_estimator_unittest_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api/environment:environment_factory",
        "//api/transport:mock_network_control",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//modules:module_api_public",
        "//modules/pacing",
        "//modules/remote_bitrate_estimator",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:checks",
        "//rtc_base:random",
        "//system_wrappers",
        "//test:explicit_key_value_config",
        "//test:fileutils",
        "//test:test_support",
    ],
)
