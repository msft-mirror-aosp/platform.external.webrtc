# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "ns",
    srcs = [
        "fast_math.cc",
        "histograms.cc",
        "noise_estimator.cc",
        "noise_suppressor.cc",
        "ns_fft.cc",
        "prior_signal_model.cc",
        "prior_signal_model_estimator.cc",
        "quantile_noise_estimator.cc",
        "signal_model.cc",
        "signal_model_estimator.cc",
        "speech_probability_estimator.cc",
        "suppression_params.cc",
        "wiener_filter.cc",
    ],
    hdrs = [
        "fast_math.h",
        "histograms.h",
        "noise_estimator.h",
        "noise_suppressor.h",
        "ns_common.h",
        "ns_config.h",
        "ns_fft.h",
        "prior_signal_model.h",
        "prior_signal_model_estimator.h",
        "quantile_noise_estimator.h",
        "signal_model.h",
        "signal_model_estimator.h",
        "speech_probability_estimator.h",
        "suppression_params.h",
        "wiener_filter.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_APM_DEBUG_DUMP=0",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//common_audio:common_audio_c",
        "//common_audio/third_party/ooura:fft_size_128",
        "//common_audio/third_party/ooura:fft_size_256",
        "//modules/audio_processing:apm_logging",
        "//modules/audio_processing:audio_buffer",
        "//modules/audio_processing:high_pass_filter",
        "//modules/audio_processing/utility:cascaded_biquad_filter",
        "//rtc_base:checks",
        "//rtc_base:safe_minmax",
        "//rtc_base/system:arch",
        "//system_wrappers",
        "//system_wrappers:field_trial",
        "//system_wrappers:metrics",
    ],
)

cc_library(
    name = "ns_unittests",
    testonly = 1,
    srcs = ["noise_suppressor_unittest.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = [
        "//resources:audio_processing/agc2/rnn_vad/band_energies.dat",
        "//resources:audio_processing/agc2/rnn_vad/pitch_buf_24k.dat",
        "//resources:audio_processing/agc2/rnn_vad/pitch_lp_res.dat",
        "//resources:audio_processing/agc2/rnn_vad/pitch_search_int.dat",
        "//resources:audio_processing/agc2/rnn_vad/samples.pcm",
        "//resources:audio_processing/agc2/rnn_vad/vad_prob.dat",
    ],
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_APM_DEBUG_DUMP=0",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//modules/audio_processing",
        "//modules/audio_processing:apm_logging",
        "//modules/audio_processing:audio_buffer",
        "//modules/audio_processing:audio_processing_unittests",
        "//modules/audio_processing:high_pass_filter",
        "//modules/audio_processing/ns",
        "//modules/audio_processing/utility:cascaded_biquad_filter",
        "//rtc_base:checks",
        "//rtc_base:safe_minmax",
        "//rtc_base:stringutils",
        "//rtc_base/system:arch",
        "//system_wrappers",
        "//test:test_support",
    ],
)
