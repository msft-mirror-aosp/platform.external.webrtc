# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "rnn_vad",
    srcs = [
        "features_extraction.cc",
        "rnn.cc",
    ],
    hdrs = [
        "features_extraction.h",
        "rnn.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//modules/audio_processing/agc2:__subpackages__"],
    deps = [
        "@rnnoise//:rnn_vad",
        "//api:array_view",
        "//modules/audio_processing/agc2:biquad_filter",
        "//modules/audio_processing/agc2:cpu_features",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_layers",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_lp_residual",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_pitch",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_sequence_buffer",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_spectral_features",
        "//rtc_base:checks",
        "//rtc_base:safe_compare",
        "//rtc_base:safe_conversions",
    ],
)

cc_library(
    name = "rnn_vad_auto_correlation",
    srcs = ["auto_correlation.cc"],
    hdrs = ["auto_correlation.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//modules/audio_processing/utility:pffft_wrapper",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "rnn_vad_common",
    hdrs = ["common.h"],
    visibility = [
        "//modules/audio_processing/agc2:__pkg__",
        "//modules/audio_processing/agc2/rnn_vad:__pkg__",
    ],
    deps = [
        "//rtc_base/system:arch",
        "//system_wrappers",
    ],
)

cc_library(
    name = "rnn_vad_lp_residual",
    srcs = ["lp_residual.cc"],
    hdrs = ["lp_residual.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//rtc_base:checks",
        "//rtc_base:safe_compare",
    ],
)

cc_library(
    name = "rnn_vad_layers",
    srcs = [
        "rnn_fc.cc",
        "rnn_gru.cc",
    ],
    hdrs = [
        "rnn_fc.h",
        "rnn_gru.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@rnnoise//:rnn_vad",
        "//api:array_view",
        "//api:function_view",
        "//modules/audio_processing/agc2:cpu_features",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//modules/audio_processing/agc2/rnn_vad:vector_math",
        "//rtc_base:checks",
        "//rtc_base:safe_conversions",
    ] + platform_select(
        arm64 = [],
        linux = ["//modules/audio_processing/agc2/rnn_vad:vector_math_avx2"],
        windows = ["//modules/audio_processing/agc2/rnn_vad:vector_math_avx2"],
    ),
)

cc_library(
    name = "vector_math",
    hdrs = ["vector_math.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//modules/audio_processing/agc2:cpu_features",
        "//rtc_base:checks",
        "//rtc_base:safe_conversions",
        "//rtc_base/system:arch",
    ],
)

cc_library(
    name = "vector_math_avx2",
    srcs = ["vector_math_avx2.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        linux = [
            "-fno-exceptions",
            "-mavx2",
            "-mfma",
        ],
        windows = [
            "-fno-rtti",
            "-march=haswell",
        ],
    ),
    defines = [
        "RTC_ENABLE_VP9",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        linux = [
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = ["WEBRTC_WIN"],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//modules/audio_processing/agc2/rnn_vad:vector_math",
        "//rtc_base:checks",
        "//rtc_base:safe_conversions",
    ],
)

cc_library(
    name = "rnn_vad_pitch",
    srcs = [
        "pitch_search.cc",
        "pitch_search_internal.cc",
    ],
    hdrs = [
        "pitch_search.h",
        "pitch_search_internal.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//modules/audio_processing/agc2:cpu_features",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_auto_correlation",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//modules/audio_processing/agc2/rnn_vad:vector_math",
        "//rtc_base:checks",
        "//rtc_base:gtest_prod",
        "//rtc_base:safe_compare",
        "//rtc_base:safe_conversions",
        "//rtc_base/system:arch",
    ] + platform_select(
        arm64 = [],
        linux = ["//modules/audio_processing/agc2/rnn_vad:vector_math_avx2"],
        windows = ["//modules/audio_processing/agc2/rnn_vad:vector_math_avx2"],
    ),
)

cc_library(
    name = "rnn_vad_ring_buffer",
    hdrs = ["ring_buffer.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "rnn_vad_sequence_buffer",
    hdrs = ["sequence_buffer.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "rnn_vad_spectral_features",
    srcs = [
        "spectral_features.cc",
        "spectral_features_internal.cc",
    ],
    hdrs = [
        "spectral_features.h",
        "spectral_features_internal.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_ring_buffer",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_symmetric_matrix_buffer",
        "//modules/audio_processing/utility:pffft_wrapper",
        "//rtc_base:checks",
        "//rtc_base:safe_compare",
    ],
)

cc_library(
    name = "rnn_vad_symmetric_matrix_buffer",
    hdrs = ["symmetric_matrix_buffer.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//rtc_base:checks",
        "//rtc_base:safe_compare",
    ],
)

cc_library(
    name = "test_utils",
    testonly = 1,
    srcs = ["test_utils.cc"],
    hdrs = ["test_utils.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:array_view",
        "//api:scoped_refptr",
        "//modules/audio_processing/agc2/rnn_vad",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//rtc_base:checks",
        "//rtc_base:safe_compare",
        "//test:fileutils",
        "//test:test_support",
    ],
)

cc_library(
    name = "unittests",
    testonly = 1,
    srcs = [
        "auto_correlation_unittest.cc",
        "features_extraction_unittest.cc",
        "lp_residual_unittest.cc",
        "pitch_search_internal_unittest.cc",
        "pitch_search_unittest.cc",
        "ring_buffer_unittest.cc",
        "rnn_fc_unittest.cc",
        "rnn_gru_unittest.cc",
        "rnn_unittest.cc",
        "rnn_vad_unittest.cc",
        "sequence_buffer_unittest.cc",
        "spectral_features_internal_unittest.cc",
        "spectral_features_unittest.cc",
        "symmetric_matrix_buffer_unittest.cc",
        "vector_math_unittest.cc",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = [
        "//resources:audio_processing/agc2/rnn_vad/band_energies.dat",
        "//resources:audio_processing/agc2/rnn_vad/pitch_buf_24k.dat",
        "//resources:audio_processing/agc2/rnn_vad/pitch_lp_res.dat",
        "//resources:audio_processing/agc2/rnn_vad/pitch_search_int.dat",
        "//resources:audio_processing/agc2/rnn_vad/samples.pcm",
        "//resources:audio_processing/agc2/rnn_vad/vad_prob.dat",
    ],
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/memory",
        "@rnnoise//:rnn_vad",
        "//api:array_view",
        "//common_audio",
        "//modules/audio_processing:audioproc_test_utils",
        "//modules/audio_processing/agc2:cpu_features",
        "//modules/audio_processing/agc2/rnn_vad",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_auto_correlation",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_layers",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_lp_residual",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_pitch",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_ring_buffer",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_sequence_buffer",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_spectral_features",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_symmetric_matrix_buffer",
        "//modules/audio_processing/agc2/rnn_vad:test_utils",
        "//modules/audio_processing/agc2/rnn_vad:vector_math",
        "//modules/audio_processing/utility:pffft_wrapper",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:safe_compare",
        "//rtc_base:safe_conversions",
        "//rtc_base:stringutils",
        "//rtc_base/system:arch",
        "//test:test_support",
    ] + platform_select(
        arm64 = [],
        linux = ["//modules/audio_processing/agc2/rnn_vad:vector_math_avx2"],
        windows = ["//modules/audio_processing/agc2/rnn_vad:vector_math_avx2"],
    ),
)

cc_binary(
    name = "rnn_vad_tool",
    testonly = 1,
    srcs = ["rnn_vad_tool.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "//api:array_view",
        "//common_audio",
        "//modules/audio_processing/agc2:cpu_features",
        "//modules/audio_processing/agc2/rnn_vad",
        "//modules/audio_processing/agc2/rnn_vad:rnn_vad_common",
        "//rtc_base:logging",
        "//rtc_base:safe_compare",
        "//test:test_support",
    ],
)
