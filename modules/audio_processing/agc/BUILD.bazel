# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "gain_control_interface",
    hdrs = ["gain_control.h"],
    visibility = ["//:__subpackages__"],
)

cc_library(
    name = "agc",
    srcs = ["agc_manager_direct.cc"],
    hdrs = ["agc_manager_direct.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_APM_DEBUG_DUMP=0",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api/audio:audio_processing",
        "//common_audio",
        "//common_audio:common_audio_c",
        "//modules/audio_processing:apm_logging",
        "//modules/audio_processing:audio_buffer",
        "//modules/audio_processing:audio_frame_view",
        "//modules/audio_processing/agc:gain_control_interface",
        "//modules/audio_processing/agc:level_estimation",
        "//modules/audio_processing/agc2:clipping_predictor",
        "//modules/audio_processing/agc2:gain_map",
        "//modules/audio_processing/agc2:input_volume_stats_reporter",
        "//modules/audio_processing/vad",
        "//rtc_base:checks",
        "//rtc_base:gtest_prod",
        "//rtc_base:logging",
        "//rtc_base:safe_minmax",
        "//system_wrappers:field_trial",
        "//system_wrappers:metrics",
    ],
)

cc_library(
    name = "level_estimation",
    srcs = [
        "agc.cc",
        "loudness_histogram.cc",
        "utility.cc",
    ],
    hdrs = [
        "agc.h",
        "loudness_histogram.h",
        "utility.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//modules/audio_processing/vad",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "legacy_agc",
    srcs = [
        "legacy/analog_agc.cc",
        "legacy/digital_agc.cc",
    ],
    hdrs = [
        "legacy/analog_agc.h",
        "legacy/digital_agc.h",
        "legacy/gain_control.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = [
        "//modules/audio_processing:__pkg__",
        "//modules/audio_processing/agc:__pkg__",
    ],
    deps = [
        "//common_audio",
        "//common_audio:common_audio_c",
        "//common_audio/third_party/ooura:fft_size_256",
        "//rtc_base:checks",
        "//system_wrappers",
    ],
)

cc_library(
    name = "agc_unittests",
    testonly = 1,
    srcs = [
        "agc_manager_direct_unittest.cc",
        "loudness_histogram_unittest.cc",
    ],
    hdrs = ["mock_agc.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_APM_DEBUG_DUMP=0",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_googletest//:gtest",
        "//api:array_view",
        "//modules/audio_processing:mocks",
        "//modules/audio_processing/agc",
        "//modules/audio_processing/agc:gain_control_interface",
        "//modules/audio_processing/agc:level_estimation",
        "//rtc_base:checks",
        "//rtc_base:random",
        "//rtc_base:safe_conversions",
        "//rtc_base:safe_minmax",
        "//rtc_base:stringutils",
        "//system_wrappers:metrics",
        "//test:field_trial",
        "//test:fileutils",
        "//test:test_support",
    ],
)
