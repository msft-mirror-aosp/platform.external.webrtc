# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

load("//:build_defs.bzl", "platform_select")

package(features = [
    "-parse_headers",
])

licenses(["notice"])

cc_library(
    name = "encoded_frame",
    srcs = ["encoded_frame.cc"],
    hdrs = ["encoded_frame.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//api/video:video_rtp_headers",
        "//modules:module_api_public",
        "//modules/rtp_rtcp:rtp_video_header",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:video_codec_interface",
        "//rtc_base:checks",
        "//rtc_base/experiments:alr_experiment",
        "//rtc_base/system:rtc_export",
        "//system_wrappers",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:variant",
    ],
)

cc_library(
    name = "chain_diff_calculator",
    srcs = ["chain_diff_calculator.cc"],
    hdrs = ["chain_diff_calculator.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//rtc_base:checks",
        "//rtc_base:logging",
        "@com_google_absl//absl/container:inlined_vector",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "frame_dependencies_calculator",
    srcs = ["frame_dependencies_calculator.cc"],
    hdrs = ["frame_dependencies_calculator.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//common_video/generic_frame_descriptor",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:inlined_vector",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "nack_requester",
    srcs = [
        "histogram.cc",
        "nack_requester.cc",
    ],
    hdrs = [
        "histogram.h",
        "nack_requester.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:field_trials_view",
        "//api:sequence_checker",
        "//api/task_queue",
        "//api/task_queue:pending_task_safety_flag",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//modules:module_api",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:rtc_numerics",
        "//rtc_base/experiments:field_trial_parser",
        "//rtc_base/task_utils:repeating_task",
        "//system_wrappers",
    ],
)

cc_library(
    name = "packet_buffer",
    srcs = ["packet_buffer.cc"],
    hdrs = ["packet_buffer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//api:rtp_packet_info",
        "//api/units:timestamp",
        "//api/video:encoded_image",
        "//api/video:video_frame_type",
        "//common_video",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/rtp_rtcp:rtp_video_header",
        "//modules/video_coding:codec_globals_headers",
        "//rtc_base:checks",
        "//rtc_base:copy_on_write_buffer",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:mod_ops",
        "//rtc_base:rtc_numerics",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/types:variant",
    ],
)

cc_library(
    name = "h26x_packet_buffer",
    srcs = ["h26x_packet_buffer.cc"],
    hdrs = ["h26x_packet_buffer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//api:rtp_packet_info",
        "//api/units:timestamp",
        "//api/video:encoded_image",
        "//api/video:video_frame_type",
        "//common_video",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/rtp_rtcp:rtp_video_header",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:h264_sprop_parameter_sets",
        "//modules/video_coding:packet_buffer",
        "//rtc_base:checks",
        "//rtc_base:copy_on_write_buffer",
        "//rtc_base:logging",
        "//rtc_base:rtc_numerics",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "frame_helpers",
    srcs = ["frame_helpers.cc"],
    hdrs = ["frame_helpers.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/video:encoded_frame",
        "//rtc_base:logging",
        "@com_google_absl//absl/container:inlined_vector",
    ],
)

cc_library(
    name = "h264_sprop_parameter_sets",
    srcs = ["h264_sprop_parameter_sets.cc"],
    hdrs = ["h264_sprop_parameter_sets.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//rtc_base:logging",
        "//rtc_base/third_party/base64",
    ],
)

cc_library(
    name = "video_coding",
    srcs = [
        "decoder_database.cc",
        "fec_controller_default.cc",
        "generic_decoder.cc",
        "h264_sps_pps_tracker.cc",
        "loss_notification_controller.cc",
        "media_opt_util.cc",
        "rtp_frame_id_only_ref_finder.cc",
        "rtp_frame_reference_finder.cc",
        "rtp_generic_ref_finder.cc",
        "rtp_seq_num_only_ref_finder.cc",
        "rtp_vp8_ref_finder.cc",
        "rtp_vp9_ref_finder.cc",
        "video_codec_initializer.cc",
        "video_receiver2.cc",
    ],
    hdrs = [
        "decoder_database.h",
        "fec_controller_default.h",
        "fec_rate_table.h",
        "generic_decoder.h",
        "h264_sps_pps_tracker.h",
        "include/video_codec_initializer.h",
        "internal_defines.h",
        "loss_notification_controller.h",
        "media_opt_util.h",
        "rtp_frame_id_only_ref_finder.h",
        "rtp_frame_reference_finder.h",
        "rtp_generic_ref_finder.h",
        "rtp_seq_num_only_ref_finder.h",
        "rtp_vp8_ref_finder.h",
        "rtp_vp9_ref_finder.h",
        "video_receiver2.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api:array_view",
        "//api:fec_controller_api",
        "//api:field_trials_view",
        "//api:rtp_headers",
        "//api:rtp_packet_info",
        "//api:scoped_refptr",
        "//api:sequence_checker",
        "//api/environment",
        "//api/task_queue",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:frequency",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:builtin_video_bitrate_allocator_factory",
        "//api/video:encoded_frame",
        "//api/video:encoded_image",
        "//api/video:video_adaptation",
        "//api/video:video_bitrate_allocation",
        "//api/video:video_bitrate_allocator",
        "//api/video:video_bitrate_allocator_factory",
        "//api/video:video_codec_constants",
        "//api/video:video_frame",
        "//api/video:video_frame_type",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//modules:module_api",
        "//modules:module_api_public",
        "//modules:module_fec_api",
        "//modules/rtp_rtcp",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/rtp_rtcp:rtp_video_header",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:encoded_frame",
        "//modules/video_coding:frame_helpers",
        "//modules/video_coding:h264_sprop_parameter_sets",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding:webrtc_vp8_scalability",
        "//modules/video_coding:webrtc_vp9_helpers",
        "//modules/video_coding/codecs/av1:av1_svc_config",
        "//modules/video_coding/svc:scalability_mode_util",
        "//modules/video_coding/timing:inter_frame_delay_variation_calculator",
        "//modules/video_coding/timing:jitter_estimator",
        "//modules/video_coding/timing:rtt_filter",
        "//modules/video_coding/timing:timing_module",
        "//rtc_base:checks",
        "//rtc_base:copy_on_write_buffer",
        "//rtc_base:event_tracer",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:rtc_event",
        "//rtc_base:rtc_numerics",
        "//rtc_base:safe_conversions",
        "//rtc_base:stringutils",
        "//rtc_base:threading",
        "//rtc_base:timeutils",
        "//rtc_base/experiments:alr_experiment",
        "//rtc_base/experiments:field_trial_parser",
        "//rtc_base/experiments:min_video_bitrate_experiment",
        "//rtc_base/experiments:rate_control_settings",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/system:no_unique_address",
        "//rtc_base/task_utils:repeating_task",
        "//rtc_base/third_party/base64",
        "//system_wrappers",
        "//system_wrappers:metrics",
        "//video/config:encoder_config",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:inlined_vector",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:variant",
    ],
)

cc_library(
    name = "video_codec_interface",
    srcs = [
        "include/video_codec_interface.cc",
        "include/video_error_codes_utils.cc",
        "video_coding_defines.cc",
    ],
    hdrs = [
        "include/video_codec_interface.h",
        "include/video_coding_defines.h",
        "include/video_error_codes.h",
        "include/video_error_codes_utils.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api/video:video_frame",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:scalability_mode",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//common_video/generic_frame_descriptor",
        "//modules/video_coding:codec_globals_headers",
        "//rtc_base/system:rtc_export",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "video_coding_legacy",
    srcs = [
        "video_coding_impl.cc",
        "video_receiver.cc",
    ],
    hdrs = [
        "include/video_coding.h",
        "video_coding_impl.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//modules/video_coding:__pkg__"],
    deps = [
        "//api:field_trials_view",
        "//api:rtp_headers",
        "//api:rtp_packet_info",
        "//api:sequence_checker",
        "//api/environment",
        "//api/units:timestamp",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//api/video:video_frame_type",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//modules:module_api",
        "//modules:module_api_public",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/rtp_rtcp:rtp_video_header",
        "//modules/video_coding",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:encoded_frame",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding/deprecated:deprecated_decoding_state",
        "//modules/video_coding/deprecated:deprecated_event_wrapper",
        "//modules/video_coding/deprecated:deprecated_frame_buffer",
        "//modules/video_coding/deprecated:deprecated_jitter_buffer",
        "//modules/video_coding/deprecated:deprecated_jitter_buffer_common",
        "//modules/video_coding/deprecated:deprecated_packet",
        "//modules/video_coding/deprecated:deprecated_receiver",
        "//modules/video_coding/deprecated:deprecated_session_info",
        "//modules/video_coding/timing:inter_frame_delay_variation_calculator",
        "//modules/video_coding/timing:jitter_estimator",
        "//modules/video_coding/timing:timing_module",
        "//rtc_base:checks",
        "//rtc_base:event_tracer",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:one_time_event",
        "//rtc_base:rtc_event",
        "//rtc_base:safe_conversions",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:variant",
    ],
)

cc_library(
    name = "codec_globals_headers",
    hdrs = [
        "codecs/h264/include/h264_globals.h",
        "codecs/interface/common_constants.h",
        "codecs/vp8/include/vp8_globals.h",
        "codecs/vp9/include/vp9_globals.h",
    ],
    visibility = ["//visibility:public"],
    deps = ["//rtc_base:checks"],
)

cc_library(
    name = "video_coding_utility",
    srcs = [
        "utility/bandwidth_quality_scaler.cc",
        "utility/decoded_frames_history.cc",
        "utility/frame_dropper.cc",
        "utility/framerate_controller_deprecated.cc",
        "utility/ivf_file_reader.cc",
        "utility/ivf_file_writer.cc",
        "utility/qp_parser.cc",
        "utility/quality_scaler.cc",
        "utility/simulcast_rate_allocator.cc",
        "utility/simulcast_utility.cc",
        "utility/vp8_header_parser.cc",
        "utility/vp9_uncompressed_header_parser.cc",
    ],
    hdrs = [
        "utility/bandwidth_quality_scaler.h",
        "utility/decoded_frames_history.h",
        "utility/frame_dropper.h",
        "utility/framerate_controller_deprecated.h",
        "utility/ivf_defines.h",
        "utility/ivf_file_reader.h",
        "utility/ivf_file_writer.h",
        "utility/qp_parser.h",
        "utility/quality_scaler.h",
        "utility/simulcast_rate_allocator.h",
        "utility/simulcast_utility.h",
        "utility/vp8_constants.h",
        "utility/vp8_header_parser.h",
        "utility/vp9_constants.h",
        "utility/vp9_uncompressed_header_parser.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api:array_view",
        "//api:field_trials_view",
        "//api:scoped_refptr",
        "//api:sequence_checker",
        "//api/environment",
        "//api/units:time_delta",
        "//api/video:encoded_frame",
        "//api/video:encoded_image",
        "//api/video:video_adaptation",
        "//api/video:video_bitrate_allocation",
        "//api/video:video_bitrate_allocator",
        "//api/video:video_codec_constants",
        "//api/video:video_frame",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//modules/rtp_rtcp",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding/svc:scalability_mode_util",
        "//rtc_base:bitstream_reader",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:rate_statistics",
        "//rtc_base:refcount",
        "//rtc_base:rtc_numerics",
        "//rtc_base:stringutils",
        "//rtc_base:timeutils",
        "//rtc_base:weak_ptr",
        "//rtc_base/experiments:encoder_info_settings",
        "//rtc_base/experiments:quality_scaler_settings",
        "//rtc_base/experiments:quality_scaling_experiment",
        "//rtc_base/experiments:rate_control_settings",
        "//rtc_base/experiments:stable_target_rate_experiment",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/system:arch",
        "//rtc_base/system:file_wrapper",
        "//rtc_base/system:no_unique_address",
        "//rtc_base/task_utils:repeating_task",
        "@com_google_absl//absl/numeric:bits",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "webrtc_h264",
    srcs = [
        "codecs/h264/h264.cc",
        "codecs/h264/h264_color_space.cc",
        "codecs/h264/h264_decoder_impl.cc",
        "codecs/h264/h264_encoder_impl.cc",
    ],
    hdrs = [
        "codecs/h264/h264_color_space.h",
        "codecs/h264/h264_decoder_impl.h",
        "codecs/h264/h264_encoder_impl.h",
        "codecs/h264/include/h264.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api/environment",
        "//api/transport/rtp:dependency_descriptor",
        "//api/video:video_codec_constants",
        "//api/video:video_frame",
        "//api/video:video_frame_i010",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:scalability_mode",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//media:media_constants",
        "//media:rtc_media_base",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding/svc:scalability_structures",
        "//modules/video_coding/svc:scalable_video_controller",
        "//rtc_base:checks",
        "//rtc_base:event_tracer",
        "//rtc_base:logging",
        "//rtc_base:timeutils",
        "//rtc_base/system:rtc_export",
        "//system_wrappers:metrics",
        "@com_google_absl//absl/base:nullability",
        "@com_google_absl//absl/container:inlined_vector",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@libyuv",
    ],
)

cc_library(
    name = "webrtc_libvpx_interface",
    srcs = ["codecs/interface/libvpx_interface.cc"],
    hdrs = ["codecs/interface/libvpx_interface.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//rtc_base:checks",
        "@libvpx",
    ],
)

cc_library(
    name = "mock_libvpx_interface",
    testonly = 1,
    hdrs = ["codecs/interface/mock_libvpx_interface.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//modules/video_coding:webrtc_libvpx_interface",
        "//test:test_support",
    ],
)

cc_library(
    name = "webrtc_vp8",
    srcs = [
        "codecs/vp8/libvpx_vp8_decoder.cc",
        "codecs/vp8/libvpx_vp8_encoder.cc",
    ],
    hdrs = [
        "codecs/vp8/include/vp8.h",
        "codecs/vp8/libvpx_vp8_decoder.h",
        "codecs/vp8/libvpx_vp8_encoder.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api:fec_controller_api",
        "//api:field_trials_view",
        "//api:scoped_refptr",
        "//api/environment",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:scalability_mode",
        "//api/video_codecs:video_codecs_api",
        "//api/video_codecs:vp8_temporal_layers_factory",
        "//common_video",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding:webrtc_libvpx_interface",
        "//modules/video_coding:webrtc_vp8_scalability",
        "//modules/video_coding:webrtc_vp8_temporal_layers",
        "//modules/video_coding/svc:scalability_mode_util",
        "//rtc_base:checks",
        "//rtc_base:event_tracer",
        "//rtc_base:logging",
        "//rtc_base:rtc_numerics",
        "//rtc_base:timeutils",
        "//rtc_base/experiments:encoder_info_settings",
        "//rtc_base/experiments:field_trial_parser",
        "//rtc_base/experiments:rate_control_settings",
        "//system_wrappers:metrics",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:nullability",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@libyuv",
    ],
)

cc_library(
    name = "webrtc_vp8_scalability",
    srcs = ["codecs/vp8/vp8_scalability.cc"],
    hdrs = ["codecs/vp8/vp8_scalability.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = ["//api/video_codecs:scalability_mode"],
)

cc_library(
    name = "webrtc_vp8_temporal_layers",
    srcs = [
        "codecs/vp8/default_temporal_layers.cc",
        "codecs/vp8/screenshare_layers.cc",
        "codecs/vp8/temporal_layers_checker.cc",
    ],
    hdrs = [
        "codecs/vp8/default_temporal_layers.h",
        "codecs/vp8/include/temporal_layers_checker.h",
        "codecs/vp8/screenshare_layers.h",
        "codecs/vp8/temporal_layers.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api:fec_controller_api",
        "//api/video_codecs:video_codecs_api",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_coding_utility",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:rate_statistics",
        "//rtc_base:rtc_numerics",
        "//rtc_base:timeutils",
        "//system_wrappers:metrics",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "webrtc_vp9_helpers",
    srcs = ["codecs/vp9/svc_config.cc"],
    hdrs = ["codecs/vp9/svc_config.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/video:video_bitrate_allocation",
        "//api/video:video_bitrate_allocator",
        "//api/video:video_codec_constants",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//media:video_common",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding/svc:scalability_mode_util",
        "//modules/video_coding/svc:scalability_structures",
        "//modules/video_coding/svc:scalable_video_controller",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base/experiments:stable_target_rate_experiment",
        "@com_google_absl//absl/container:inlined_vector",
    ],
)

cc_library(
    name = "webrtc_vp9",
    srcs = [
        "codecs/vp9/libvpx_vp9_decoder.cc",
        "codecs/vp9/libvpx_vp9_encoder.cc",
        "codecs/vp9/vp9.cc",
        "codecs/vp9/vp9_frame_buffer_pool.cc",
    ],
    hdrs = [
        "codecs/vp9/include/vp9.h",
        "codecs/vp9/libvpx_vp9_decoder.h",
        "codecs/vp9/libvpx_vp9_encoder.h",
        "codecs/vp9/vp9_frame_buffer_pool.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api:fec_controller_api",
        "//api:field_trials_view",
        "//api:refcountedbase",
        "//api:scoped_refptr",
        "//api/environment",
        "//api/video:video_frame",
        "//api/video:video_frame_i010",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:scalability_mode",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding:webrtc_libvpx_interface",
        "//modules/video_coding:webrtc_vp9_helpers",
        "//modules/video_coding/svc:scalability_mode_util",
        "//modules/video_coding/svc:scalability_structures",
        "//modules/video_coding/svc:scalable_video_controller",
        "//modules/video_coding/svc:svc_rate_allocator",
        "//rtc_base:buffer",
        "//rtc_base:checks",
        "//rtc_base:event_tracer",
        "//rtc_base:logging",
        "//rtc_base:stringutils",
        "//rtc_base:timeutils",
        "//rtc_base/containers:flat_map",
        "//rtc_base/experiments:encoder_info_settings",
        "//rtc_base/experiments:field_trial_parser",
        "//rtc_base/experiments:rate_control_settings",
        "//rtc_base/synchronization:mutex",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:nullability",
        "@com_google_absl//absl/container:inlined_vector",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@libyuv",
    ],
)

objc_library(
    name = "objc_codec_factory_helper",
    srcs = ["codecs/test/objc_codec_factory_helper.mm"],
    hdrs = ["codecs/test/objc_codec_factory_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
        "-Wimplicit-retain-self",
        "-Wmissing-field-initializers",
        "-Wstrict-overflow",
        "-fno-exceptions",
        "-fno-rtti",
    ],
    defines = [
        "HAVE_WEBRTC_VIDEO",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ARCH_ARM64",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAS_NEON",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_MAC",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_POSIX",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ],
    includes = [
        "../../sdk/objc",
        "../../sdk/objc/base",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/video:video_frame",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:video_codecs_api",
        "//media:rtc_audio_video",
        "//sdk:native_api",
        "//sdk:peerconnectionfactory_base_objc",
        "//sdk:videocodec_objc",
        "//sdk:videosource_objc",
        "//sdk:videotoolbox_objc",
    ],
)

cc_library(
    name = "encoded_video_frame_producer",
    testonly = 1,
    srcs = ["codecs/test/encoded_video_frame_producer.cc"],
    hdrs = ["codecs/test/encoded_video_frame_producer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_frame_generator",
        "//api:frame_generator_api",
        "//api/transport/rtp:dependency_descriptor",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//api/video:video_frame_type",
        "//api/video_codecs:video_codecs_api",
        "//modules/video_coding:video_codec_interface",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "simulcast_test_fixture_impl",
    testonly = 1,
    srcs = ["utility/simulcast_test_fixture_impl.cc"],
    hdrs = ["utility/simulcast_test_fixture_impl.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:mock_video_decoder",
        "//api:mock_video_encoder",
        "//api:simulcast_test_fixture_api",
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//modules/video_coding",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_coding_utility",
        "//rtc_base:checks",
        "//test:test_support",
    ],
)

cc_library(
    name = "video_codecs_test_framework",
    testonly = 1,
    srcs = [
        "codecs/test/video_codec_unittest.cc",
        "codecs/test/videoprocessor.cc",
    ],
    hdrs = [
        "codecs/test/video_codec_unittest.h",
        "codecs/test/videoprocessor.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_frame_generator",
        "//api:frame_generator_api",
        "//api:scoped_refptr",
        "//api:sequence_checker",
        "//api:videocodec_test_fixture_api",
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/numerics",
        "//api/task_queue",
        "//api/task_queue:default_task_queue_factory",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/video:builtin_video_bitrate_allocator_factory",
        "//api/video:encoded_image",
        "//api/video:resolution",
        "//api/video:video_bitrate_allocation",
        "//api/video:video_bitrate_allocator",
        "//api/video:video_bitrate_allocator_factory",
        "//api/video:video_codec_constants",
        "//api/video:video_frame",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//modules:module_api",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/video_coding",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding:videocodec_test_stats_impl",
        "//modules/video_coding:webrtc_vp9_helpers",
        "//rtc_base:buffer",
        "//rtc_base:checks",
        "//rtc_base:macromagic",
        "//rtc_base:rtc_event",
        "//rtc_base:task_queue_for_test",
        "//rtc_base:timeutils",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/system:no_unique_address",
        "//test:test_support",
        "//test:video_test_common",
        "//test:video_test_support",
        "@com_google_absl//absl/types:optional",
        "@libyuv",
    ],
)

cc_library(
    name = "videocodec_test_impl",
    testonly = 1,
    srcs = ["codecs/test/videocodec_test_fixture_impl.cc"],
    hdrs = ["codecs/test/videocodec_test_fixture_impl.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "HAVE_WEBRTC_VIDEO",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//api:videocodec_test_fixture_api",
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/test/metrics:metric",
        "//api/test/video:function_video_factory",
        "//api/transport:field_trial_based_config",
        "//api/video:video_bitrate_allocation",
        "//api/video_codecs:video_codecs_api",
        "//api/video_codecs:video_decoder_factory_template",
        "//api/video_codecs:video_decoder_factory_template_dav1d_adapter",
        "//api/video_codecs:video_decoder_factory_template_libvpx_vp8_adapter",
        "//api/video_codecs:video_decoder_factory_template_libvpx_vp9_adapter",
        "//api/video_codecs:video_decoder_factory_template_open_h264_adapter",
        "//api/video_codecs:video_encoder_factory_template",
        "//api/video_codecs:video_encoder_factory_template_libaom_av1_adapter",
        "//api/video_codecs:video_encoder_factory_template_libvpx_vp8_adapter",
        "//api/video_codecs:video_encoder_factory_template_libvpx_vp9_adapter",
        "//api/video_codecs:video_encoder_factory_template_open_h264_adapter",
        "//call:video_stream_api",
        "//common_video",
        "//media:media_constants",
        "//media:rtc_audio_video",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_codecs_test_framework",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding:videocodec_test_stats_impl",
        "//modules/video_coding:webrtc_vp9_helpers",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:rtc_base_tests_utils",
        "//rtc_base:stringutils",
        "//rtc_base:task_queue_for_test",
        "//rtc_base:timeutils",
        "//system_wrappers",
        "//test:fileutils",
        "//test:test_support",
        "//test:video_test_common",
        "//test:video_test_support",
        "//video/config:encoder_config",
        "//video/config:streams_config",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "videocodec_test_stats_impl",
    testonly = 1,
    srcs = ["codecs/test/videocodec_test_stats_impl.cc"],
    hdrs = ["codecs/test/videocodec_test_stats_impl.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:videocodec_test_stats_api",
        "//api/numerics",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/test/metrics:metric",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//rtc_base:checks",
        "//rtc_base:rtc_numerics",
        "//rtc_base:stringutils",
        "//test:test_common",
    ],
)

cc_test(
    name = "video_codec_perf_tests",
    testonly = 1,
    srcs = ["codecs/test/video_codec_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = ["//resources:FourPeople_1280x720_30.yuv"],
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/units:data_rate",
        "//api/units:frequency",
        "//api/video:resolution",
        "//api/video_codecs:builtin_video_decoder_factory",
        "//api/video_codecs:builtin_video_encoder_factory",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding/svc:scalability_mode_util",
        "//rtc_base:logging",
        "//rtc_base:stringutils",
        "//test:explicit_key_value_config",
        "//test:field_trial",
        "//test:fileutils",
        "//test:test_flags",
        "//test:test_main",
        "//test:test_support",
        "//test:video_codec_tester",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/functional:any_invocable",
    ],
)

cc_library(
    name = "video_coding_modules_tests",
    testonly = 1,
    srcs = [
        "codecs/h264/test/h264_impl_unittest.cc",
        "codecs/test/video_encoder_decoder_instantiation_tests.cc",
        "codecs/test/videocodec_test_av1.cc",
        "codecs/test/videocodec_test_libvpx.cc",
        "codecs/vp8/test/vp8_impl_unittest.cc",
    ] + platform_select(
        arm64 = ["codecs/test/videocodec_test_videotoolbox.cc"],
        linux = ["codecs/vp9/test/vp9_impl_unittest.cc"],
        windows = ["codecs/vp9/test/vp9_impl_unittest.cc"],
    ),
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = [
        "//resources:ConferenceMotion_1280_720_50.yuv",
        "//resources:FourPeople_1280x720_30.yuv",
    ],
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:create_frame_generator",
        "//api:create_videocodec_test_fixture_api",
        "//api:frame_generator_api",
        "//api:mock_video_codec_factory",
        "//api:mock_video_decoder",
        "//api:mock_video_encoder",
        "//api:scoped_refptr",
        "//api:videocodec_test_fixture_api",
        "//api:videocodec_test_stats_api",
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/test/metrics:global_metrics_logger_and_exporter",
        "//api/test/video:function_video_factory",
        "//api/video:encoded_image",
        "//api/video:video_frame",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:rtc_software_fallback_wrappers",
        "//api/video_codecs:video_codecs_api",
        "//common_video",
        "//common_video/test:utilities",
        "//media:codec",
        "//media:media_constants",
        "//media:rtc_internal_video_codecs",
        "//media:rtc_simulcast_encoder_adapter",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/video_coding:encoded_video_frame_producer",
        "//modules/video_coding:mock_libvpx_interface",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_codecs_test_framework",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding:videocodec_test_impl",
        "//modules/video_coding:webrtc_h264",
        "//modules/video_coding:webrtc_libvpx_interface",
        "//modules/video_coding:webrtc_vp8",
        "//modules/video_coding:webrtc_vp9",
        "//modules/video_coding:webrtc_vp9_helpers",
        "//modules/video_coding/codecs/av1:dav1d_decoder",
        "//modules/video_coding/svc:scalability_mode_util",
        "//rtc_base:refcount",
        "//rtc_base:stringutils",
        "//rtc_base:timeutils",
        "//test:explicit_key_value_config",
        "//test:field_trial",
        "//test:fileutils",
        "//test:scoped_key_value_config",
        "//test:test_support",
        "//test:video_test_common",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/types:optional",
        "@libyuv",
    ] + platform_select(
        arm64 = [
            "//modules/video_coding:objc_codec_factory_helper",
            "//modules/video_coding:video_coding_modules_tests_resources_bundle_data",
        ],
        linux = [],
        windows = [],
    ),
)

cc_library(
    name = "video_coding_unittests",
    testonly = 1,
    srcs = [
        "chain_diff_calculator_unittest.cc",
        "codecs/test/videocodec_test_fixture_config_unittest.cc",
        "codecs/test/videocodec_test_stats_impl_unittest.cc",
        "codecs/test/videoprocessor_unittest.cc",
        "codecs/vp8/default_temporal_layers_unittest.cc",
        "codecs/vp8/libvpx_vp8_simulcast_test.cc",
        "codecs/vp8/screenshare_layers_unittest.cc",
        "codecs/vp9/svc_config_unittest.cc",
        "decoder_database_unittest.cc",
        "fec_controller_unittest.cc",
        "frame_dependencies_calculator_unittest.cc",
        "frame_helpers_unittest.cc",
        "generic_decoder_unittest.cc",
        "h264_sprop_parameter_sets_unittest.cc",
        "h264_sps_pps_tracker_unittest.cc",
        "h26x_packet_buffer_unittest.cc",
        "histogram_unittest.cc",
        "loss_notification_controller_unittest.cc",
        "nack_requester_unittest.cc",
        "packet_buffer_unittest.cc",
        "rtp_frame_reference_finder_unittest.cc",
        "rtp_vp8_ref_finder_unittest.cc",
        "rtp_vp9_ref_finder_unittest.cc",
        "utility/bandwidth_quality_scaler_unittest.cc",
        "utility/decoded_frames_history_unittest.cc",
        "utility/frame_dropper_unittest.cc",
        "utility/framerate_controller_deprecated_unittest.cc",
        "utility/ivf_file_reader_unittest.cc",
        "utility/ivf_file_writer_unittest.cc",
        "utility/qp_parser_unittest.cc",
        "utility/quality_scaler_unittest.cc",
        "utility/simulcast_rate_allocator_unittest.cc",
        "utility/vp9_uncompressed_header_parser_unittest.cc",
        "video_codec_initializer_unittest.cc",
        "video_receiver2_unittest.cc",
        "video_receiver_unittest.cc",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//api:create_simulcast_test_fixture_api",
        "//api:fec_controller_api",
        "//api:field_trials_view",
        "//api:mock_fec_controller_override",
        "//api:mock_video_decoder",
        "//api:mock_video_encoder",
        "//api:rtp_packet_info",
        "//api:scoped_refptr",
        "//api:simulcast_test_fixture_api",
        "//api:videocodec_test_fixture_api",
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/task_queue",
        "//api/task_queue:default_task_queue_factory",
        "//api/test/video:function_video_factory",
        "//api/units:data_size",
        "//api/units:frequency",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//api/video:builtin_video_bitrate_allocator_factory",
        "//api/video:encoded_frame",
        "//api/video:encoded_image",
        "//api/video:render_resolution",
        "//api/video:video_adaptation",
        "//api/video:video_bitrate_allocation",
        "//api/video:video_bitrate_allocator",
        "//api/video:video_bitrate_allocator_factory",
        "//api/video:video_frame",
        "//api/video:video_frame_type",
        "//api/video:video_rtp_headers",
        "//api/video_codecs:video_codecs_api",
        "//api/video_codecs:vp8_temporal_layers_factory",
        "//common_video",
        "//common_video/generic_frame_descriptor",
        "//common_video/test:utilities",
        "//media:media_constants",
        "//media:rtc_internal_video_codecs",
        "//modules:module_fec_api",
        "//modules/rtp_rtcp",
        "//modules/rtp_rtcp:rtp_rtcp_format",
        "//modules/rtp_rtcp:rtp_video_header",
        "//modules/video_coding",
        "//modules/video_coding:chain_diff_calculator",
        "//modules/video_coding:codec_globals_headers",
        "//modules/video_coding:encoded_frame",
        "//modules/video_coding:frame_dependencies_calculator",
        "//modules/video_coding:frame_helpers",
        "//modules/video_coding:h264_sprop_parameter_sets",
        "//modules/video_coding:h26x_packet_buffer",
        "//modules/video_coding:nack_requester",
        "//modules/video_coding:packet_buffer",
        "//modules/video_coding:simulcast_test_fixture_impl",
        "//modules/video_coding:video_codec_interface",
        "//modules/video_coding:video_codecs_test_framework",
        "//modules/video_coding:video_coding_legacy",
        "//modules/video_coding:video_coding_utility",
        "//modules/video_coding:videocodec_test_impl",
        "//modules/video_coding:videocodec_test_stats_impl",
        "//modules/video_coding:webrtc_h264",
        "//modules/video_coding:webrtc_vp8",
        "//modules/video_coding:webrtc_vp8_temporal_layers",
        "//modules/video_coding:webrtc_vp9",
        "//modules/video_coding:webrtc_vp9_helpers",
        "//modules/video_coding/codecs/av1:video_coding_codecs_av1_tests",
        "//modules/video_coding/deprecated:deprecated_frame_buffer",
        "//modules/video_coding/deprecated:deprecated_jitter_buffer_common",
        "//modules/video_coding/deprecated:deprecated_packet",
        "//modules/video_coding/deprecated:deprecated_session_info",
        "//modules/video_coding/deprecated:deprecated_stream_generator",
        "//modules/video_coding/svc:scalability_structure_tests",
        "//modules/video_coding/svc:svc_rate_allocator_tests",
        "//modules/video_coding/timing:jitter_estimator",
        "//modules/video_coding/timing:timing_module",
        "//rtc_base:checks",
        "//rtc_base:gunit_helpers",
        "//rtc_base:histogram_percentile_counter",
        "//rtc_base:platform_thread",
        "//rtc_base:random",
        "//rtc_base:refcount",
        "//rtc_base:rtc_base_tests_utils",
        "//rtc_base:rtc_event",
        "//rtc_base:rtc_numerics",
        "//rtc_base:stringutils",
        "//rtc_base:task_queue_for_test",
        "//rtc_base:timeutils",
        "//rtc_base/experiments:encoder_info_settings",
        "//rtc_base/synchronization:mutex",
        "//rtc_base/system:unused",
        "//system_wrappers",
        "//system_wrappers:metrics",
        "//test:explicit_key_value_config",
        "//test:fake_encoded_frame",
        "//test:fake_video_codecs",
        "//test:field_trial",
        "//test:fileutils",
        "//test:run_loop",
        "//test:scoped_key_value_config",
        "//test:test_support",
        "//test:video_test_common",
        "//test:video_test_support",
        "//test/time_controller",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:variant",
        "@libyuv",
    ],
)
