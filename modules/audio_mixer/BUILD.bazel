# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "audio_mixer",
    visibility = ["//:__subpackages__"],
    deps = [
        "//modules/audio_mixer:audio_frame_manipulator",
        "//modules/audio_mixer:audio_mixer_impl",
    ],
)

cc_library(
    name = "audio_mixer_impl",
    srcs = [
        "audio_mixer_impl.cc",
        "audio_mixer_impl.h",
        "default_output_rate_calculator.cc",
        "default_output_rate_calculator.h",
        "frame_combiner.cc",
        "frame_combiner.h",
        "output_rate_calculator.h",
    ],
    hdrs = [
        "audio_mixer_impl.h",
        "default_output_rate_calculator.h",
        "frame_combiner.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_APM_DEBUG_DUMP=0",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//api:array_view",
        "//api:rtp_packet_info",
        "//api:scoped_refptr",
        "//api/audio:audio_frame_api",
        "//api/audio:audio_mixer_api",
        "//api/audio:audio_processing",
        "//audio/utility:audio_frame_operations",
        "//common_audio",
        "//modules/audio_mixer:audio_frame_manipulator",
        "//modules/audio_processing:apm_logging",
        "//modules/audio_processing:audio_frame_view",
        "//modules/audio_processing/agc2:fixed_digital",
        "//rtc_base:checks",
        "//rtc_base:event_tracer",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:race_checker",
        "//rtc_base:refcount",
        "//rtc_base:safe_conversions",
        "//rtc_base/synchronization:mutex",
        "//system_wrappers",
        "//system_wrappers:metrics",
    ],
)

cc_library(
    name = "audio_frame_manipulator",
    srcs = ["audio_frame_manipulator.cc"],
    hdrs = ["audio_frame_manipulator.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = [
        "//modules:__pkg__",
        "//modules/audio_mixer:__pkg__",
    ],
    deps = [
        "//api/audio:audio_frame_api",
        "//audio/utility:audio_frame_operations",
        "//rtc_base:checks",
    ],
)

cc_library(
    name = "audio_mixer_test_utils",
    testonly = 1,
    srcs = [
        "gain_change_calculator.cc",
        "sine_wave_generator.cc",
    ],
    hdrs = [
        "gain_change_calculator.h",
        "sine_wave_generator.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "//api:array_view",
        "//api/audio:audio_frame_api",
        "//modules/audio_mixer:audio_frame_manipulator",
        "//modules/audio_mixer:audio_mixer_impl",
        "//rtc_base:checks",
        "//rtc_base:safe_conversions",
    ],
)

cc_library(
    name = "audio_mixer_unittests",
    testonly = 1,
    srcs = [
        "audio_frame_manipulator_unittest.cc",
        "audio_mixer_impl_unittest.cc",
        "frame_combiner_unittest.cc",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:rtp_packet_info",
        "//api/audio:audio_mixer_api",
        "//api/units:timestamp",
        "//audio/utility:audio_frame_operations",
        "//modules/audio_mixer:audio_frame_manipulator",
        "//modules/audio_mixer:audio_mixer_impl",
        "//modules/audio_mixer:audio_mixer_test_utils",
        "//rtc_base:checks",
        "//rtc_base:stringutils",
        "//rtc_base:task_queue_for_test",
        "//system_wrappers:metrics",
        "//test:test_support",
    ],
)

cc_binary(
    name = "audio_mixer_test",
    testonly = 1,
    srcs = ["audio_mixer_test.cc"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "//api/audio:audio_mixer_api",
        "//common_audio",
        "//modules/audio_mixer:audio_mixer_impl",
        "//rtc_base:stringutils",
    ],
)
