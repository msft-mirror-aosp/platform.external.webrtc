# DO NOT MODIFY!
# This file is automatically generated from .gn files upstream.

package(features = [
    "-parse_headers",
])

licenses(["notice"])

load("//:build_defs.bzl", "platform_select")

cc_library(
    name = "goog_cc",
    srcs = ["goog_cc_network_control.cc"],
    hdrs = ["goog_cc_network_control.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api/environment",
        "//api/rtc_event_log",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//logging:rtc_event_bwe",
        "//logging:rtc_event_pacing",
        "//modules/congestion_controller/goog_cc:alr_detector",
        "//modules/congestion_controller/goog_cc:delay_based_bwe",
        "//modules/congestion_controller/goog_cc:estimators",
        "//modules/congestion_controller/goog_cc:loss_based_bwe_v2",
        "//modules/congestion_controller/goog_cc:probe_controller",
        "//modules/congestion_controller/goog_cc:pushback_controller",
        "//modules/congestion_controller/goog_cc:send_side_bwe",
        "//modules/remote_bitrate_estimator",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base/experiments:alr_experiment",
        "//rtc_base/experiments:field_trial_parser",
        "//rtc_base/experiments:rate_control_settings",
        "//system_wrappers",
    ],
)

cc_library(
    name = "link_capacity_estimator",
    srcs = ["link_capacity_estimator.cc"],
    hdrs = ["link_capacity_estimator.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api/units:data_rate",
        "//rtc_base:safe_minmax",
    ],
)

cc_library(
    name = "pushback_controller",
    srcs = ["congestion_window_pushback_controller.cc"],
    hdrs = ["congestion_window_pushback_controller.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api/transport:network_control",
        "//api/units:data_size",
        "//rtc_base:checks",
        "//rtc_base/experiments:rate_control_settings",
    ],
)

cc_library(
    name = "alr_detector",
    srcs = ["alr_detector.cc"],
    hdrs = ["alr_detector.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api/rtc_event_log",
        "//api/transport:field_trial_based_config",
        "//logging:rtc_event_pacing",
        "//modules/pacing:interval_budget",
        "//rtc_base:checks",
        "//rtc_base:safe_conversions",
        "//rtc_base:timeutils",
        "//rtc_base/experiments:alr_experiment",
        "//rtc_base/experiments:field_trial_parser",
    ],
)

cc_library(
    name = "estimators",
    srcs = [
        "acknowledged_bitrate_estimator.cc",
        "acknowledged_bitrate_estimator_interface.cc",
        "bitrate_estimator.cc",
        "probe_bitrate_estimator.cc",
        "robust_throughput_estimator.cc",
        "trendline_estimator.cc",
    ],
    hdrs = [
        "acknowledged_bitrate_estimator.h",
        "acknowledged_bitrate_estimator_interface.h",
        "bitrate_estimator.h",
        "delay_increase_detector_interface.h",
        "probe_bitrate_estimator.h",
        "robust_throughput_estimator.h",
        "trendline_estimator.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api/rtc_event_log",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//logging:rtc_event_bwe",
        "//modules/remote_bitrate_estimator",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:rtc_numerics",
        "//rtc_base:safe_conversions",
        "//rtc_base:safe_minmax",
        "//rtc_base/experiments:field_trial_parser",
    ],
)

cc_library(
    name = "loss_based_bwe_v2",
    srcs = ["loss_based_bwe_v2.cc"],
    hdrs = ["loss_based_bwe_v2.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/types:optional",
        "//api:array_view",
        "//api:field_trials_view",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//modules/remote_bitrate_estimator",
        "//rtc_base:logging",
        "//rtc_base/experiments:field_trial_parser",
    ],
)

cc_library(
    name = "loss_based_bwe_v1",
    srcs = ["loss_based_bandwidth_estimation.cc"],
    hdrs = ["loss_based_bandwidth_estimation.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "//api:field_trials_view",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//rtc_base:checks",
        "//rtc_base/experiments:field_trial_parser",
    ],
)

cc_library(
    name = "send_side_bwe",
    srcs = ["send_side_bandwidth_estimation.cc"],
    hdrs = ["send_side_bandwidth_estimation.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api/rtc_event_log",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//logging:rtc_event_bwe",
        "//modules/congestion_controller/goog_cc:loss_based_bwe_v1",
        "//modules/congestion_controller/goog_cc:loss_based_bwe_v2",
        "//modules/remote_bitrate_estimator",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base/experiments:field_trial_parser",
        "//system_wrappers:metrics",
    ],
)

cc_library(
    name = "delay_based_bwe",
    srcs = [
        "delay_based_bwe.cc",
        "inter_arrival_delta.cc",
    ],
    hdrs = [
        "delay_based_bwe.h",
        "inter_arrival_delta.h",
    ],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "BWE_TEST_LOGGING_COMPILE_TIME_ENABLE=0",
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api/rtc_event_log",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//logging:rtc_event_bwe",
        "//modules/congestion_controller/goog_cc:estimators",
        "//modules/congestion_controller/goog_cc:link_capacity_estimator",
        "//modules/pacing",
        "//modules/remote_bitrate_estimator",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:race_checker",
        "//rtc_base/experiments:field_trial_parser",
        "//system_wrappers:metrics",
    ],
)

cc_library(
    name = "probe_controller",
    srcs = ["probe_controller.cc"],
    hdrs = ["probe_controller.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api:field_trials_view",
        "//api/rtc_event_log",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//logging:rtc_event_bwe",
        "//logging:rtc_event_pacing",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:macromagic",
        "//rtc_base:safe_conversions",
        "//rtc_base/experiments:field_trial_parser",
        "//system_wrappers:metrics",
    ],
)

cc_library(
    name = "test_goog_cc_printer",
    testonly = 1,
    srcs = ["test/goog_cc_printer.cc"],
    hdrs = ["test/goog_cc_printer.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "//api/rtc_event_log",
        "//api/transport:goog_cc",
        "//api/transport:network_control",
        "//api/units:timestamp",
        "//modules/congestion_controller/goog_cc",
        "//modules/congestion_controller/goog_cc:alr_detector",
        "//modules/congestion_controller/goog_cc:delay_based_bwe",
        "//modules/congestion_controller/goog_cc:estimators",
        "//modules/remote_bitrate_estimator",
        "//rtc_base:checks",
        "//test/logging:log_writer",
    ],
)

cc_library(
    name = "goog_cc_unittests",
    testonly = 1,
    srcs = [
        "acknowledged_bitrate_estimator_unittest.cc",
        "alr_detector_unittest.cc",
        "congestion_window_pushback_controller_unittest.cc",
        "delay_based_bwe_unittest.cc",
        "delay_based_bwe_unittest_helper.cc",
        "goog_cc_network_control_unittest.cc",
        "loss_based_bwe_v2_test.cc",
        "probe_bitrate_estimator_unittest.cc",
        "probe_controller_unittest.cc",
        "robust_throughput_estimator_unittest.cc",
        "send_side_bandwidth_estimation_unittest.cc",
        "trendline_estimator_unittest.cc",
    ],
    hdrs = ["delay_based_bwe_unittest_helper.h"],
    copts = [
        "-Wctad-maybe-unsupported",
    ] + platform_select(
        arm64 = [
            "-fno-exceptions",
            "-fno-rtti",
        ],
        linux = ["-fno-exceptions"],
        windows = ["-fno-rtti"],
    ),
    data = [
        "//resources:difficult_photo_1850_1110.yuv",
        "//resources:photo_1850_1110.yuv",
        "//resources:presentation_1850_1110.yuv",
        "//resources:web_screenshot_1850_1110.yuv",
    ],
    defines = [
        "RTC_JNI_GENERATOR_LEGACY_SYMBOLS",
        "WEBRTC_ABSL_MUTEX",
        "WEBRTC_ENABLE_AVX2",
        "WEBRTC_ENABLE_PROTOBUF=1",
        "WEBRTC_HAVE_SCTP",
        "WEBRTC_INCLUDE_INTERNAL_AUDIO_DEVICE",
        "WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS=1",
        "WEBRTC_STRICT_FIELD_TRIALS=0",
        "WEBRTC_UNIT_TEST",
    ] + platform_select(
        arm64 = [
            "WEBRTC_ARCH_ARM64",
            "WEBRTC_HAS_NEON",
            "WEBRTC_MAC",
            "WEBRTC_POSIX",
        ],
        linux = [
            "RTC_ENABLE_VP9",
            "WEBRTC_ENABLE_LIBEVENT",
            "WEBRTC_LINUX",
            "WEBRTC_POSIX",
        ],
        windows = [
            "RTC_ENABLE_VP9",
            "WEBRTC_WIN",
        ],
    ),
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_googletest//:gtest",
        "//api:field_trials_view",
        "//api:network_state_predictor_api",
        "//api/environment",
        "//api/environment:environment_factory",
        "//api/rtc_event_log",
        "//api/test/network_emulation",
        "//api/test/network_emulation:create_cross_traffic",
        "//api/transport:field_trial_based_config",
        "//api/transport:goog_cc",
        "//api/transport:network_control",
        "//api/units:data_rate",
        "//api/units:data_size",
        "//api/units:time_delta",
        "//api/units:timestamp",
        "//call:video_stream_api",
        "//logging:mocks",
        "//logging:rtc_event_bwe",
        "//modules/congestion_controller/goog_cc",
        "//modules/congestion_controller/goog_cc:alr_detector",
        "//modules/congestion_controller/goog_cc:delay_based_bwe",
        "//modules/congestion_controller/goog_cc:estimators",
        "//modules/congestion_controller/goog_cc:loss_based_bwe_v2",
        "//modules/congestion_controller/goog_cc:probe_controller",
        "//modules/congestion_controller/goog_cc:pushback_controller",
        "//modules/congestion_controller/goog_cc:send_side_bwe",
        "//modules/pacing",
        "//rtc_base:checks",
        "//rtc_base:logging",
        "//rtc_base:random",
        "//rtc_base:rtc_base_tests_utils",
        "//rtc_base:stringutils",
        "//rtc_base/experiments:alr_experiment",
        "//system_wrappers",
        "//test:explicit_key_value_config",
        "//test:field_trial",
        "//test:test_support",
        "//test/scenario",
        "//test/scenario:column_printer",
    ],
)
